<div class='syntax' noexport='true'>
  <dfn for=syntax>_reserved</dfn> :

    | `'NULL'`   <!-- HLSL -->

    | `'Self'`   <!-- Rust -->

    | `'abstract'`   <!-- Rust -->

    | `'active'`   <!-- GLSL(reserved) -->

    | `'alignas'`   <!-- C++ -->

    | `'alignof'`   <!-- C++ -->

    | `'as'`   <!-- ECMAScript2022 Rust -->

    | `'asm'`   <!-- C++ HLSL GLSL(reserved) WGSL -->

    | `'asm_fragment'`   <!-- HLSL -->

    | `'async'`   <!-- ECMAScript2022 -->

    | `'attribute'`   <!-- GLSL -->

    | `'auto'`   <!-- C++ -->

    | `'await'`   <!-- ECMAScript2022 -->

    | `'become'`   <!-- Rust -->

    | `'binding_array'`   <!-- WGSL -->

    | `'cast'`   <!-- GLSL(reserved) -->

    | `'catch'`   <!-- C++ ECMAScript2022 -->

    | `'class'`   <!-- C++ ECMAScript2022 HLSL GLSL(reserved) -->

    | `'co_await'`   <!-- C++ -->

    | `'co_return'`   <!-- C++ -->

    | `'co_yield'`   <!-- C++ -->

    | `'coherent'`   <!-- GLSL -->

    | `'column_major'`   <!-- HLSL -->

    | `'common'`   <!-- GLSL(reserved) -->

    | `'compile'`   <!-- HLSL -->

    | `'compile_fragment'`   <!-- HLSL -->

    | `'concept'`   <!-- C++ -->

    | `'const_cast'`   <!-- C++ -->

    | `'consteval'`   <!-- C++ -->

    | `'constexpr'`   <!-- C++ -->

    | `'constinit'`   <!-- C++ -->

    | `'crate'`   <!-- Rust -->

    | `'debugger'`   <!-- ECMAScript2022 -->

    | `'decltype'`   <!-- C++ -->

    | `'delete'`   <!-- C++ ECMAScript2022 -->

    | `'demote'`   <!-- WGSL -->

    | `'demote_to_helper'`   <!-- WGSL -->

    | `'do'`   <!-- C++ ECMAScript2022 Rust HLSL GLSL WGSL -->

    | `'dynamic_cast'`   <!-- C++ -->

    | `'enum'`   <!-- C++ ECMAScript2022 Rust GLSL(reserved) WGSL -->

    | `'explicit'`   <!-- C++ -->

    | `'export'`   <!-- C++ C++ ECMAScript2022 HLSL -->

    | `'extends'`   <!-- ECMAScript2022 -->

    | `'extern'`   <!-- C++ Rust HLSL GLSL(reserved) -->

    | `'external'`   <!-- GLSL(reserved) -->

    | `'fallthrough'`   <!-- WGSL -->

    | `'filter'`   <!-- GLSL(reserved) -->

    | `'final'`   <!-- Rust -->

    | `'finally'`   <!-- ECMAScript2022 -->

    | `'friend'`   <!-- C++ -->

    | `'from'`   <!-- ECMAScript2022 -->

    | `'fxgroup'`   <!-- HLSL -->

    | `'get'`   <!-- ECMAScript2022 -->

    | `'goto'`   <!-- C++ GLSL(reserved) -->

    | `'groupshared'`   <!-- HLSL -->

    | `'highp'`   <!-- GLSL -->

    | `'impl'`   <!-- Rust -->

    | `'implements'`   <!-- ECMAScript2022 -->

    | `'import'`   <!-- C++ ECMAScript2022 -->

    | `'inline'`   <!-- C++ HLSL GLSL(reserved) -->

    | `'instanceof'`   <!-- ECMAScript2022 -->

    | `'interface'`   <!-- ECMAScript2022 HLSL GLSL(reserved) -->

    | `'layout'`   <!-- GLSL -->

    | `'lowp'`   <!-- GLSL -->

    | `'macro'`   <!-- Rust -->

    | `'macro_rules'`   <!-- Rust -->

    | `'match'`   <!-- Rust -->

    | `'mediump'`   <!-- GLSL -->

    | `'meta'`   <!-- ECMAScript2022 -->

    | `'mod'`   <!-- Rust -->

    | `'module'`   <!-- C++ -->

    | `'move'`   <!-- Rust -->

    | `'mut'`   <!-- Rust -->

    | `'mutable'`   <!-- C++ -->

    | `'namespace'`   <!-- C++ HLSL GLSL(reserved) -->

    | `'new'`   <!-- C++ ECMAScript2022 -->

    | `'nil'`   <!-- Smalltalk -->

    | `'noexcept'`   <!-- C++ -->

    | `'noinline'`   <!-- GLSL(reserved) -->

    | `'nointerpolation'`   <!-- HLSL -->

    | `'noperspective'`   <!-- HLSL GLSL -->

    | `'null'`   <!-- ECMAScript2022 WGSL -->

    | `'nullptr'`   <!-- C++ -->

    | `'of'`   <!-- ECMAScript2022 -->

    | `'operator'`   <!-- C++ -->

    | `'package'`   <!-- ECMAScript2022 -->

    | `'packoffset'`   <!-- HLSL -->

    | `'partition'`   <!-- GLSL(reserved) -->

    | `'pass'`   <!-- HLSL -->

    | `'patch'`   <!-- GLSL -->

    | `'pixelfragment'`   <!-- HLSL -->

    | `'precise'`   <!-- HLSL GLSL -->

    | `'precision'`   <!-- GLSL -->

    | `'premerge'`   <!-- WGSL -->

    | `'priv'`   <!-- Rust -->

    | `'protected'`   <!-- C++ ECMAScript2022 -->

    | `'pub'`   <!-- Rust -->

    | `'public'`   <!-- C++ ECMAScript2022 GLSL(reserved) -->

    | `'readonly'`   <!-- GLSL -->

    | `'ref'`   <!-- Rust -->

    | `'regardless'`   <!-- WGSL -->

    | `'register'`   <!-- C++ HLSL -->

    | `'reinterpret_cast'`   <!-- C++ -->

    | `'require'`   <!-- WGSL -->

    | `'resource'`   <!-- GLSL(reserved) -->

    | `'restrict'`   <!-- GLSL -->

    | `'self'`   <!-- Rust Smalltalk -->

    | `'set'`   <!-- ECMAScript2022 -->

    | `'shared'`   <!-- HLSL GLSL -->

    | `'sizeof'`   <!-- C++ GLSL(reserved) -->

    | `'smooth'`   <!-- GLSL -->

    | `'snorm'`   <!-- HLSL -->

    | `'static'`   <!-- C++ ECMAScript2022 Rust HLSL GLSL(reserved) -->

    | `'static_assert'`   <!-- C++ -->

    | `'static_cast'`   <!-- C++ -->

    | `'std'`   <!-- WGSL -->

    | `'subroutine'`   <!-- GLSL -->

    | `'super'`   <!-- ECMAScript2022 Rust Smalltalk -->

    | `'target'`   <!-- ECMAScript2022 -->

    | `'template'`   <!-- C++ GLSL(reserved) -->

    | `'this'`   <!-- C++ ECMAScript2022 GLSL(reserved) -->

    | `'thread_local'`   <!-- C++ -->

    | `'throw'`   <!-- C++ ECMAScript2022 -->

    | `'trait'`   <!-- Rust -->

    | `'try'`   <!-- C++ ECMAScript2022 -->

    | `'type'`   <!-- Rust -->

    | `'typedef'`   <!-- C++ HLSL GLSL(reserved) WGSL -->

    | `'typeid'`   <!-- C++ -->

    | `'typename'`   <!-- C++ -->

    | `'typeof'`   <!-- ECMAScript2022 Rust -->

    | `'union'`   <!-- C++ Rust GLSL(reserved) -->

    | `'unless'`   <!-- WGSL -->

    | `'unorm'`   <!-- HLSL -->

    | `'unsafe'`   <!-- Rust -->

    | `'unsized'`   <!-- Rust -->

    | `'use'`   <!-- Rust -->

    | `'using'`   <!-- C++ GLSL(reserved) WGSL -->

    | `'varying'`   <!-- GLSL -->

    | `'virtual'`   <!-- C++ Rust -->

    | `'volatile'`   <!-- C++ HLSL GLSL -->

    | `'wgsl'`   <!-- WGSL -->

    | `'where'`   <!-- Rust -->

    | `'with'`   <!-- ECMAScript2022 -->

    | `'writeonly'`   <!-- GLSL -->

    | `'yield'`   <!-- ECMAScript2022 Rust -->

</div>
