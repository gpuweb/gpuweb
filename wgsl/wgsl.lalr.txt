=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
align_attr:
   '@' 'align' '(' expression ',' ? ')'
argument_expression_list:
   '(' expression_comma_list ? ')'
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attribute:
   '@' ident_pattern_token argument_expression_list ?
 | align_attr
 | binding_attr
 | blend_src_attr
 | builtin_attr
 | compute_attr
 | const_attr
 | diagnostic_attr
 | fragment_attr
 | group_attr
 | id_attr
 | interpolate_attr
 | invariant_attr
 | location_attr
 | must_use_attr
 | size_attr
 | vertex_attr
 | workgroup_size_attr
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
binding_attr:
   '@' 'binding' '(' expression ',' ? ')'
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
blend_src_attr:
   '@' 'blend_src' '(' expression ',' ? ')'
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
builtin_attr:
   '@' 'builtin' '(' builtin_value_name ',' ? ')'
builtin_value_name:ident_pattern_token
call_expression:call_phrase
call_phrase:
   template_elaborated_ident argument_expression_list
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   attribute * ? '{' statement * ? '}'
compute_attr:
   '@' 'compute'
const_assert_statement:
   'const_assert' expression
const_attr:
   '@' 'const'
continue_statement:'continue'
continuing_compound_statement:
   attribute * ? '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident _disambiguate_template
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
diagnostic_attr:
   '@' 'diagnostic' diagnostic_control
diagnostic_control:
   '(' severity_control_name ',' diagnostic_rule_name ',' ? ')'
diagnostic_directive:
   'diagnostic' diagnostic_control ';'
diagnostic_name_token:ident_pattern_token
diagnostic_rule_name:
   diagnostic_name_token
 | diagnostic_name_token '.' diagnostic_name_token
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' enable_extension_list ';'
enable_extension_list:
   enable_extension_name ( ',' enable_extension_name ) * ? ',' ?
enable_extension_list/0.1/0/0.0:
   ',' enable_extension_name
enable_extension_name:ident_pattern_token
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_or_value_statement
 | variable_updating_statement
for_statement:
   attribute * ? 'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
fragment_attr:
   '@' 'fragment'
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? template_elaborated_ident )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_value_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:
   diagnostic_directive
 | enable_directive
 | requires_directive
global_value_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
group_attr:
   '@' 'group' '(' expression ',' ? ')'
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
id_attr:
   '@' 'id' '(' expression ',' ? ')'
ident:
   ident_pattern_token _disambiguate_template
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   attribute * ? if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
interpolate_attr:
   '@' 'interpolate' '(' interpolate_type_name ',' ? ')'
 | '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name ',' ? ')'
interpolate_sampling_name:ident_pattern_token
interpolate_type_name:ident_pattern_token
invariant_attr:
   '@' 'invariant'
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
location_attr:
   '@' 'location' '(' expression ',' ? ')'
loop_statement:
   attribute * ? 'loop' attribute * ? '{' statement * ? continuing_statement ? '}'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
must_use_attr:
   '@' 'must_use'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   call_expression
 | literal
 | paren_expression
 | template_elaborated_ident
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
requires_directive:
   'requires' software_extension_list ';'
return_statement:
   'return' expression ?
severity_control_name:ident_pattern_token
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
size_attr:
   '@' 'size' '(' expression ',' ? ')'
software_extension_list:
   software_extension_name ( ',' software_extension_name ) * ? ',' ?
software_extension_list/0.1/0/0.0:
   ',' software_extension_name
software_extension_name:ident_pattern_token
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_or_value_statement ';'
 | variable_updating_statement ';'
 | while_statement
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   attribute * ? '{' ( switch_clause * ) '}'
switch_body/0.2:
   switch_clause *
switch_clause:
   case_clause
 | default_alone_clause
switch_statement:
   attribute * ? 'switch' expression switch_body
swizzle_name:
   /[rgba]/
 | /[rgba][rgba]/
 | /[rgba][rgba][rgba]/
 | /[rgba][rgba][rgba][rgba]/
 | /[xyzw]/
 | /[xyzw][xyzw]/
 | /[xyzw][xyzw][xyzw]/
 | /[xyzw][xyzw][xyzw][xyzw]/
template_arg_comma_list:
   template_arg_expression ( ',' template_arg_expression ) * ? ',' ?
template_arg_comma_list/0.1/0/0.0:
   ',' template_arg_expression
template_arg_expression:expression
template_elaborated_ident:
   ident _disambiguate_template template_list ?
template_list:
   _template_args_start template_arg_comma_list _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:template_elaborated_ident
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template template_list ? optionally_typed_ident
variable_or_value_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
vertex_attr:
   '@' 'vertex'
while_statement:
   attribute * ? 'while' expression compound_statement
workgroup_size_attr:
   '@' 'workgroup_size' '(' expression ',' ? ')'
 | '@' 'workgroup_size' '(' expression ',' expression ',' ? ')'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression ',' ? ')'

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 532
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' ε}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> ( Choice diagnostic_directive enable_directive requires_directive )
global_directive .reg_info.index: 126
global_directive .first: {'diagnostic' 'enable' 'requires'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_value_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 137
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 138
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 141
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 142
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 145
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 146
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 147
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
diagnostic_directive  -> ( Choice ( Seq 'diagnostic' diagnostic_control ';' ) )
diagnostic_directive .reg_info.index: 463
diagnostic_directive .first: {'diagnostic'}
diagnostic_directive .derives_empty: False
diagnostic_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 153
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ( Choice ( Seq ident_pattern_token _disambiguate_template ) )
ident .reg_info.index: 464
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 154
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
diagnostic_name_token  -> ident_pattern_token
diagnostic_name_token .reg_info.index: 154
diagnostic_name_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_name_token .derives_empty: False
diagnostic_name_token .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
diagnostic_rule_name  -> ( Choice diagnostic_name_token ( Seq diagnostic_name_token '.' diagnostic_name_token ) )
diagnostic_rule_name .reg_info.index: 159
diagnostic_rule_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_rule_name .derives_empty: False
diagnostic_rule_name .follow: {')' ','}
template_list  -> ( Choice ( Seq _template_args_start template_arg_comma_list _template_args_end ) )
template_list .reg_info.index: 465
template_list .first: {/\u200B_template_args_start/}
template_list .derives_empty: False
template_list .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list  -> ( Choice ( Seq template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ) )
template_arg_comma_list .reg_info.index: 593
template_arg_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_comma_list .derives_empty: False
template_arg_comma_list .follow: {/\u200B_template_args_end/}
template_arg_expression  -> expression
template_arg_expression .reg_info.index: 170
template_arg_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_expression .derives_empty: False
template_arg_expression .follow: {',' /\u200B_template_args_end/}
align_attr  -> ( Choice ( Seq '@' 'align' '(' expression align_attr/0.4 ')' ) )
align_attr .reg_info.index: 602
align_attr .first: {'@'}
align_attr .derives_empty: False
align_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr  -> ( Choice ( Seq '@' 'binding' '(' expression binding_attr/0.4 ')' ) )
binding_attr .reg_info.index: 611
binding_attr .first: {'@'}
binding_attr .derives_empty: False
binding_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr  -> ( Choice ( Seq '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' ) )
blend_src_attr .reg_info.index: 620
blend_src_attr .first: {'@'}
blend_src_attr .derives_empty: False
blend_src_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr  -> ( Choice ( Seq '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' ) )
builtin_attr .reg_info.index: 629
builtin_attr .first: {'@'}
builtin_attr .derives_empty: False
builtin_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_value_name  -> ident_pattern_token
builtin_value_name .reg_info.index: 154
builtin_value_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_value_name .derives_empty: False
builtin_value_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
const_attr  -> ( Choice ( Seq '@' 'const' ) )
const_attr .reg_info.index: 471
const_attr .first: {'@'}
const_attr .derives_empty: False
const_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr  -> ( Choice ( Seq '@' 'diagnostic' diagnostic_control ) )
diagnostic_attr .reg_info.index: 472
diagnostic_attr .first: {'@'}
diagnostic_attr .derives_empty: False
diagnostic_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr  -> ( Choice ( Seq '@' 'group' '(' expression group_attr/0.4 ')' ) )
group_attr .reg_info.index: 645
group_attr .first: {'@'}
group_attr .derives_empty: False
group_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr  -> ( Choice ( Seq '@' 'id' '(' expression id_attr/0.4 ')' ) )
id_attr .reg_info.index: 654
id_attr .first: {'@'}
id_attr .derives_empty: False
id_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr  -> ( Choice ( Seq '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' ) ( Seq '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' ) )
interpolate_attr .reg_info.index: 673
interpolate_attr .first: {'@'}
interpolate_attr .derives_empty: False
interpolate_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_type_name  -> ident_pattern_token
interpolate_type_name .reg_info.index: 154
interpolate_type_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_type_name .derives_empty: False
interpolate_type_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
interpolate_sampling_name  -> ident_pattern_token
interpolate_sampling_name .reg_info.index: 154
interpolate_sampling_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_sampling_name .derives_empty: False
interpolate_sampling_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
invariant_attr  -> ( Choice ( Seq '@' 'invariant' ) )
invariant_attr .reg_info.index: 475
invariant_attr .first: {'@'}
invariant_attr .derives_empty: False
invariant_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr  -> ( Choice ( Seq '@' 'location' '(' expression location_attr/0.4 ')' ) )
location_attr .reg_info.index: 685
location_attr .first: {'@'}
location_attr .derives_empty: False
location_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr  -> ( Choice ( Seq '@' 'must_use' ) )
must_use_attr .reg_info.index: 477
must_use_attr .first: {'@'}
must_use_attr .derives_empty: False
must_use_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr  -> ( Choice ( Seq '@' 'size' '(' expression size_attr/0.4 ')' ) )
size_attr .reg_info.index: 697
size_attr .first: {'@'}
size_attr .derives_empty: False
size_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr  -> ( Choice ( Seq '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' ) ( Seq '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' ) )
workgroup_size_attr .reg_info.index: 728
workgroup_size_attr .first: {'@'}
workgroup_size_attr .derives_empty: False
workgroup_size_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr  -> ( Choice ( Seq '@' 'vertex' ) )
vertex_attr .reg_info.index: 479
vertex_attr .first: {'@'}
vertex_attr .derives_empty: False
vertex_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr  -> ( Choice ( Seq '@' 'fragment' ) )
fragment_attr .reg_info.index: 480
fragment_attr .first: {'@'}
fragment_attr .derives_empty: False
fragment_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr  -> ( Choice ( Seq '@' 'compute' ) )
compute_attr .reg_info.index: 481
compute_attr .first: {'@'}
compute_attr .derives_empty: False
compute_attr .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute  -> ( Choice ( Seq '@' ident_pattern_token attribute/0.2 ) align_attr binding_attr blend_src_attr builtin_attr const_attr diagnostic_attr group_attr id_attr interpolate_attr invariant_attr location_attr must_use_attr size_attr workgroup_size_attr vertex_attr fragment_attr compute_attr )
attribute .reg_info.index: 761
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_control  -> ( Choice ( Seq '(' severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 ')' ) )
diagnostic_control .reg_info.index: 770
diagnostic_control .first: {'('}
diagnostic_control .derives_empty: False
diagnostic_control .follow: {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 483
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 783
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 791
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 486
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> template_elaborated_ident
type_specifier .reg_info.index: 235
type_specifier .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '}'}
template_elaborated_ident  -> ( Choice ( Seq ident _disambiguate_template template_elaborated_ident/0.2 ) )
template_elaborated_ident .reg_info.index: 803
template_elaborated_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident .derives_empty: False
template_elaborated_ident .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_or_value_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_or_value_statement .reg_info.index: 244
variable_or_value_statement .first: {'const' 'let' 'var'}
variable_or_value_statement .derives_empty: False
variable_or_value_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 825
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 831
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 838
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_value_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 ) )
global_value_decl .reg_info.index: 850
global_value_decl .first: {'@' 'const' 'override'}
global_value_decl .derives_empty: False
global_value_decl .follow: {';'}
primary_expression  -> ( Choice template_elaborated_ident call_expression literal paren_expression )
primary_expression .reg_info.index: 257
primary_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 258
call_expression .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq template_elaborated_ident argument_expression_list ) )
call_phrase .reg_info.index: 491
call_phrase .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 492
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 868
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 875
expression_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 893
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 282
unary_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 914
singular_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 925
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ( Seq ident _disambiguate_template ) ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 293
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 297
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 298
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 302
additive_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 303
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 308
shift_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 320
relational_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 324
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 327
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 330
binary_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 333
binary_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 336
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 337
bitwise_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 339
expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
compound_statement  -> ( Choice ( Seq compound_statement/0.0 '{' compound_statement/0.2 '}' ) )
compound_statement .reg_info.index: 1036
compound_statement .first: {'@' '{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 1047
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 351
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 497
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 498
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 ) )
if_statement .reg_info.index: 1072
if_statement .first: {'@' 'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 500
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 501
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 502
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq switch_statement/0.0 'switch' expression switch_body ) )
switch_statement .reg_info.index: 1091
switch_statement .first: {'@' 'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice ( Seq switch_body/0.0 '{' switch_body/0.2 '}' ) )
switch_body .reg_info.index: 1099
switch_body .first: {'@' '{'}
switch_body .derives_empty: False
switch_body .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_clause  -> ( Choice case_clause default_alone_clause )
switch_clause .reg_info.index: 372
switch_clause .first: {'case' 'default'}
switch_clause .derives_empty: False
switch_clause .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 1109
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 1115
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 1122
case_selectors .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '@' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 382
case_selector .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '@' '{'}
loop_statement  -> ( Choice ( Seq loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' ) )
loop_statement .reg_info.index: 1135
loop_statement .first: {'@' 'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq for_statement/0.0 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 1144
for_statement .first: {'@' 'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 1155
for_header .first: {'&' '(' '*' ';' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_or_value_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 397
for_init .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 398
for_update .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq while_statement/0.0 'while' expression compound_statement ) )
while_statement .reg_info.index: 1167
while_statement .first: {'@' 'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 82
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 512
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 83
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 513
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' ) )
continuing_compound_statement .reg_info.index: 1184
continuing_compound_statement .first: {'@' '{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1189
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 258
func_call_statement .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 516
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_or_value_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 423
statement .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 427
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1232
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1243
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'@' '{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1250
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1257
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' enable_extension_list ';' ) )
enable_directive .reg_info.index: 521
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_list  -> ( Choice ( Seq enable_extension_name enable_extension_list/0.1 enable_extension_list/0.2 ) )
enable_extension_list .reg_info.index: 1268
enable_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_list .derives_empty: False
enable_extension_list .follow: {';'}
requires_directive  -> ( Choice ( Seq 'requires' software_extension_list ';' ) )
requires_directive .reg_info.index: 523
requires_directive .first: {'requires'}
requires_directive .derives_empty: False
requires_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list  -> ( Choice ( Seq software_extension_name software_extension_list/0.1 software_extension_list/0.2 ) )
software_extension_list .reg_info.index: 1279
software_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list .derives_empty: False
software_extension_list .follow: {';'}
enable_extension_name  -> ident_pattern_token
enable_extension_name .reg_info.index: 154
enable_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_name .derives_empty: False
enable_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
software_extension_name  -> ident_pattern_token
software_extension_name .reg_info.index: 154
software_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_name .derives_empty: False
software_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 92
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
severity_control_name  -> ident_pattern_token
severity_control_name .reg_info.index: 154
severity_control_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
severity_control_name .derives_empty: False
severity_control_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name  -> ( Choice /[rgba]/ /[rgba][rgba]/ /[rgba][rgba][rgba]/ /[rgba][rgba][rgba][rgba]/ /[xyzw]/ /[xyzw][xyzw]/ /[xyzw][xyzw][xyzw]/ /[xyzw][xyzw][xyzw][xyzw]/ )
swizzle_name .reg_info.index: 455
swizzle_name .first: {/[rgba]/ /[rgba][rgba]/ /[rgba][rgba][rgba]/ /[rgba][rgba][rgba][rgba]/ /[xyzw]/ /[xyzw][xyzw]/ /[xyzw][xyzw][xyzw]/ /[xyzw][xyzw][xyzw][xyzw]/}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 101
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 102
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 103
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 104
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 105
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 106
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 107
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 108
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 109
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 110
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 111
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 112
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 113
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 114
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 115
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 525
language .first: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 ε )
translation_unit/0.0 .reg_info.index: 1370
translation_unit/0.0 .first: {'diagnostic' 'enable' 'requires' ε}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 ε )
translation_unit/0.1 .reg_info.index: 1374
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
template_arg_comma_list/0.1  -> ( Choice template_arg_comma_list/0.1/0 ε )
template_arg_comma_list/0.1 .reg_info.index: 1378
template_arg_comma_list/0.1 .first: {',' ε}
template_arg_comma_list/0.1 .derives_empty: True
template_arg_comma_list/0.1 .follow: {',' /\u200B_template_args_end/}
template_arg_comma_list/0.2  -> ( Choice ',' ε )
template_arg_comma_list/0.2 .reg_info.index: 168
template_arg_comma_list/0.2 .first: {',' ε}
template_arg_comma_list/0.2 .derives_empty: True
template_arg_comma_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
align_attr/0.4  -> ( Choice ',' ε )
align_attr/0.4 .reg_info.index: 168
align_attr/0.4 .first: {',' ε}
align_attr/0.4 .derives_empty: True
align_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
binding_attr/0.4  -> ( Choice ',' ε )
binding_attr/0.4 .reg_info.index: 168
binding_attr/0.4 .first: {',' ε}
binding_attr/0.4 .derives_empty: True
binding_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
blend_src_attr/0.4  -> ( Choice ',' ε )
blend_src_attr/0.4 .reg_info.index: 168
blend_src_attr/0.4 .first: {',' ε}
blend_src_attr/0.4 .derives_empty: True
blend_src_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
builtin_attr/0.4  -> ( Choice ',' ε )
builtin_attr/0.4 .reg_info.index: 168
builtin_attr/0.4 .first: {',' ε}
builtin_attr/0.4 .derives_empty: True
builtin_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
group_attr/0.4  -> ( Choice ',' ε )
group_attr/0.4 .reg_info.index: 168
group_attr/0.4 .first: {',' ε}
group_attr/0.4 .derives_empty: True
group_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
id_attr/0.4  -> ( Choice ',' ε )
id_attr/0.4 .reg_info.index: 168
id_attr/0.4 .first: {',' ε}
id_attr/0.4 .derives_empty: True
id_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
interpolate_attr/0.4  -> ( Choice ',' ε )
interpolate_attr/0.4 .reg_info.index: 168
interpolate_attr/0.4 .first: {',' ε}
interpolate_attr/0.4 .derives_empty: True
interpolate_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
interpolate_attr/1.6  -> ( Choice ',' ε )
interpolate_attr/1.6 .reg_info.index: 168
interpolate_attr/1.6 .first: {',' ε}
interpolate_attr/1.6 .derives_empty: True
interpolate_attr/1.6 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
location_attr/0.4  -> ( Choice ',' ε )
location_attr/0.4 .reg_info.index: 168
location_attr/0.4 .first: {',' ε}
location_attr/0.4 .derives_empty: True
location_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
size_attr/0.4  -> ( Choice ',' ε )
size_attr/0.4 .reg_info.index: 168
size_attr/0.4 .first: {',' ε}
size_attr/0.4 .derives_empty: True
size_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
workgroup_size_attr/0.4  -> ( Choice ',' ε )
workgroup_size_attr/0.4 .reg_info.index: 168
workgroup_size_attr/0.4 .first: {',' ε}
workgroup_size_attr/0.4 .derives_empty: True
workgroup_size_attr/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
workgroup_size_attr/1.6  -> ( Choice ',' ε )
workgroup_size_attr/1.6 .reg_info.index: 168
workgroup_size_attr/1.6 .first: {',' ε}
workgroup_size_attr/1.6 .derives_empty: True
workgroup_size_attr/1.6 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
workgroup_size_attr/2.8  -> ( Choice ',' ε )
workgroup_size_attr/2.8 .reg_info.index: 168
workgroup_size_attr/2.8 .first: {',' ε}
workgroup_size_attr/2.8 .derives_empty: True
workgroup_size_attr/2.8 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
attribute/0.2  -> ( Choice argument_expression_list ε )
attribute/0.2 .reg_info.index: 197
attribute/0.2 .first: {'(' ε}
attribute/0.2 .derives_empty: True
attribute/0.2 .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_control/0.4  -> ( Choice ',' ε )
diagnostic_control/0.4 .reg_info.index: 168
diagnostic_control/0.4 .first: {',' ε}
diagnostic_control/0.4 .derives_empty: True
diagnostic_control/0.4 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 ε )
struct_body_decl/0.2 .reg_info.index: 1398
struct_body_decl/0.2 .first: {',' ε}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' ε )
struct_body_decl/0.3 .reg_info.index: 168
struct_body_decl/0.3 .first: {',' ε}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
struct_member/0.0  -> ( Choice struct_member/0.0/0 ε )
struct_member/0.0 .reg_info.index: 1403
struct_member/0.0 .first: {'@' ε}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident/0.2  -> ( Choice template_list ε )
template_elaborated_ident/0.2 .reg_info.index: 237
template_elaborated_ident/0.2 .first: {/\u200B_template_args_start/ ε}
template_elaborated_ident/0.2 .derives_empty: True
template_elaborated_ident/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice template_list ε )
variable_decl/0.2 .reg_info.index: 237
variable_decl/0.2 .first: {/\u200B_template_args_start/ ε}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) ε )
optionally_typed_ident/0.1 .reg_info.index: 247
optionally_typed_ident/0.1 .first: {':' ε}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 ε )
global_variable_decl/0.0 .reg_info.index: 1412
global_variable_decl/0.0 .first: {'@' ε}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) ε )
global_variable_decl/0.2 .reg_info.index: 250
global_variable_decl/0.2 .first: {'=' ε}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_value_decl/1.0  -> ( Choice global_value_decl/1.0/0 ε )
global_value_decl/1.0 .reg_info.index: 1419
global_value_decl/1.0 .first: {'@' ε}
global_value_decl/1.0 .derives_empty: True
global_value_decl/1.0 .follow: {'override'}
global_value_decl/1.3  -> ( Choice ( Seq '=' expression ) ε )
global_value_decl/1.3 .reg_info.index: 250
global_value_decl/1.3 .first: {'=' ε}
global_value_decl/1.3 .derives_empty: True
global_value_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list ε )
argument_expression_list/0.1 .reg_info.index: 262
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 ε )
expression_comma_list/0.1 .reg_info.index: 1427
expression_comma_list/0.1 .first: {',' ε}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' ε )
expression_comma_list/0.2 .reg_info.index: 168
expression_comma_list/0.2 .first: {',' ε}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/0.3 .reg_info.index: 269
component_or_swizzle_specifier/0.3 .first: {'.' '[' ε}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/1.2 .reg_info.index: 269
component_or_swizzle_specifier/1.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/2.2 .reg_info.index: 269
component_or_swizzle_specifier/2.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
singular_expression/0.1 .reg_info.index: 269
singular_expression/0.1 .first: {'.' '[' ε}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
lhs_expression/0.1 .reg_info.index: 269
lhs_expression/0.1 .first: {'.' '[' ε}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.0  -> ( Choice compound_statement/0.0/0 ε )
compound_statement/0.0 .reg_info.index: 1437
compound_statement/0.0 .first: {'@' ε}
compound_statement/0.0 .derives_empty: True
compound_statement/0.0 .follow: {'{'}
compound_statement/0.2  -> ( Choice compound_statement/0.2/0 ε )
compound_statement/0.2 .reg_info.index: 1441
compound_statement/0.2 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.2 .derives_empty: True
compound_statement/0.2 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 345
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.0  -> ( Choice if_statement/0.0/0 ε )
if_statement/0.0 .reg_info.index: 1446
if_statement/0.0 .first: {'@' ε}
if_statement/0.0 .derives_empty: True
if_statement/0.0 .follow: {'if'}
if_statement/0.2  -> ( Choice if_statement/0.2/0 ε )
if_statement/0.2 .reg_info.index: 1450
if_statement/0.2 .first: {'else' ε}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.3  -> ( Choice else_clause ε )
if_statement/0.3 .reg_info.index: 359
if_statement/0.3 .first: {'else' ε}
if_statement/0.3 .derives_empty: True
if_statement/0.3 .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0  -> ( Choice switch_statement/0.0/0 ε )
switch_statement/0.0 .reg_info.index: 1455
switch_statement/0.0 .first: {'@' ε}
switch_statement/0.0 .derives_empty: True
switch_statement/0.0 .follow: {'switch'}
switch_body/0.0  -> ( Choice switch_body/0.0/0 ε )
switch_body/0.0 .reg_info.index: 1459
switch_body/0.0 .first: {'@' ε}
switch_body/0.0 .derives_empty: True
switch_body/0.0 .follow: {'{'}
switch_body/0.2  -> ( Choice switch_body/0.2/0 )
switch_body/0.2 .reg_info.index: 1339
switch_body/0.2 .first: {'case' 'default' ε}
switch_body/0.2 .derives_empty: True
switch_body/0.2 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' ε )
case_clause/0.2 .reg_info.index: 374
case_clause/0.2 .first: {':' ε}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'@' '{'}
default_alone_clause/0.1  -> ( Choice ':' ε )
default_alone_clause/0.1 .reg_info.index: 374
default_alone_clause/0.1 .first: {':' ε}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'@' '{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 ε )
case_selectors/0.1 .reg_info.index: 1465
case_selectors/0.1 .first: {',' ε}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '@' '{'}
case_selectors/0.2  -> ( Choice ',' ε )
case_selectors/0.2 .reg_info.index: 168
case_selectors/0.2 .first: {',' ε}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
loop_statement/0.0  -> ( Choice loop_statement/0.0/0 ε )
loop_statement/0.0 .reg_info.index: 1470
loop_statement/0.0 .first: {'@' ε}
loop_statement/0.0 .derives_empty: True
loop_statement/0.0 .follow: {'loop'}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 ε )
loop_statement/0.2 .reg_info.index: 1474
loop_statement/0.2 .first: {'@' ε}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'{'}
loop_statement/0.4  -> ( Choice loop_statement/0.4/0 ε )
loop_statement/0.4 .reg_info.index: 1478
loop_statement/0.4 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.4 .derives_empty: True
loop_statement/0.4 .follow: {'continuing' '}'}
loop_statement/0.5  -> ( Choice continuing_statement ε )
loop_statement/0.5 .reg_info.index: 384
loop_statement/0.5 .first: {'continuing' ε}
loop_statement/0.5 .derives_empty: True
loop_statement/0.5 .follow: {'}'}
for_statement/0.0  -> ( Choice for_statement/0.0/0 ε )
for_statement/0.0 .reg_info.index: 1483
for_statement/0.0 .first: {'@' ε}
for_statement/0.0 .derives_empty: True
for_statement/0.0 .follow: {'for'}
for_header/0.0  -> ( Choice for_init ε )
for_header/0.0 .reg_info.index: 389
for_header/0.0 .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression ε )
for_header/0.2 .reg_info.index: 390
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update ε )
for_header/0.4 .reg_info.index: 392
for_header/0.4 .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
while_statement/0.0  -> ( Choice while_statement/0.0/0 ε )
while_statement/0.0 .reg_info.index: 1490
while_statement/0.0 .first: {'@' ε}
while_statement/0.0 .derives_empty: True
while_statement/0.0 .follow: {'while'}
continuing_compound_statement/0.0  -> ( Choice continuing_compound_statement/0.0/0 ε )
continuing_compound_statement/0.0 .reg_info.index: 1494
continuing_compound_statement/0.0 .first: {'@' ε}
continuing_compound_statement/0.0 .derives_empty: True
continuing_compound_statement/0.0 .follow: {'{'}
continuing_compound_statement/0.2  -> ( Choice continuing_compound_statement/0.2/0 ε )
continuing_compound_statement/0.2 .reg_info.index: 1498
continuing_compound_statement/0.2 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'break' '}'}
continuing_compound_statement/0.3  -> ( Choice break_if_statement ε )
continuing_compound_statement/0.3 .reg_info.index: 404
continuing_compound_statement/0.3 .first: {'break' ε}
continuing_compound_statement/0.3 .derives_empty: True
continuing_compound_statement/0.3 .follow: {'}'}
return_statement/0.1  -> ( Choice expression ε )
return_statement/0.1 .reg_info.index: 390
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 ε )
function_decl/0.0 .reg_info.index: 1504
function_decl/0.0 .first: {'@' ε}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list ε )
function_header/0.3 .reg_info.index: 431
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 template_elaborated_ident ) ε )
function_header/0.5 .reg_info.index: 1511
function_header/0.5 .first: {'->' ε}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'@' '{'}
param_list/0.1  -> ( Choice param_list/0.1/0 ε )
param_list/0.1 .reg_info.index: 1515
param_list/0.1 .first: {',' ε}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' ε )
param_list/0.2 .reg_info.index: 168
param_list/0.2 .first: {',' ε}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
param/0.0  -> ( Choice param/0.0/0 ε )
param/0.0 .reg_info.index: 1520
param/0.0 .first: {'@' ε}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_list/0.1  -> ( Choice enable_extension_list/0.1/0 ε )
enable_extension_list/0.1 .reg_info.index: 1524
enable_extension_list/0.1 .first: {',' ε}
enable_extension_list/0.1 .derives_empty: True
enable_extension_list/0.1 .follow: {',' ';'}
enable_extension_list/0.2  -> ( Choice ',' ε )
enable_extension_list/0.2 .reg_info.index: 168
enable_extension_list/0.2 .first: {',' ε}
enable_extension_list/0.2 .derives_empty: True
enable_extension_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
software_extension_list/0.1  -> ( Choice software_extension_list/0.1/0 ε )
software_extension_list/0.1 .reg_info.index: 1529
software_extension_list/0.1 .first: {',' ε}
software_extension_list/0.1 .derives_empty: True
software_extension_list/0.1 .follow: {',' ';'}
software_extension_list/0.2  -> ( Choice ',' ε )
software_extension_list/0.2 .reg_info.index: 168
software_extension_list/0.2 .first: {',' ε}
software_extension_list/0.2 .derives_empty: True
software_extension_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
switch_body/0.2/0  -> ( Choice ( Seq switch_clause switch_body/0.2/0 ) ε )
switch_body/0.2/0 .reg_info.index: 1338
switch_body/0.2/0 .first: {'case' 'default' ε}
switch_body/0.2/0 .derives_empty: True
switch_body/0.2/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) ε )
translation_unit/0.0/0 .reg_info.index: 1368
translation_unit/0.0/0 .first: {'diagnostic' 'enable' 'requires' ε}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) ε )
translation_unit/0.1/0 .reg_info.index: 1372
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
template_arg_comma_list/0.1/0  -> ( Choice ( Seq template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ) ε )
template_arg_comma_list/0.1/0 .reg_info.index: 1549
template_arg_comma_list/0.1/0 .first: {',' ε}
template_arg_comma_list/0.1/0 .derives_empty: True
template_arg_comma_list/0.1/0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) ε )
struct_body_decl/0.2/0 .reg_info.index: 1556
struct_body_decl/0.2/0 .first: {',' ε}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) ε )
struct_member/0.0/0 .reg_info.index: 1401
struct_member/0.0/0 .first: {'@' ε}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) ε )
global_variable_decl/0.0/0 .reg_info.index: 1410
global_variable_decl/0.0/0 .first: {'@' ε}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_value_decl/1.0/0  -> ( Choice ( Seq attribute global_value_decl/1.0/0 ) ε )
global_value_decl/1.0/0 .reg_info.index: 1417
global_value_decl/1.0/0 .first: {'@' ε}
global_value_decl/1.0/0 .derives_empty: True
global_value_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) ε )
expression_comma_list/0.1/0 .reg_info.index: 1575
expression_comma_list/0.1/0 .first: {',' ε}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.0/0  -> ( Choice ( Seq attribute compound_statement/0.0/0 ) ε )
compound_statement/0.0/0 .reg_info.index: 1435
compound_statement/0.0/0 .first: {'@' ε}
compound_statement/0.0/0 .derives_empty: True
compound_statement/0.0/0 .follow: {'{'}
compound_statement/0.2/0  -> ( Choice ( Seq statement compound_statement/0.2/0 ) ε )
compound_statement/0.2/0 .reg_info.index: 1439
compound_statement/0.2/0 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.2/0 .derives_empty: True
compound_statement/0.2/0 .follow: {'}'}
if_statement/0.0/0  -> ( Choice ( Seq attribute if_statement/0.0/0 ) ε )
if_statement/0.0/0 .reg_info.index: 1444
if_statement/0.0/0 .first: {'@' ε}
if_statement/0.0/0 .derives_empty: True
if_statement/0.0/0 .follow: {'if'}
if_statement/0.2/0  -> ( Choice ( Seq else_if_clause if_statement/0.2/0 ) ε )
if_statement/0.2/0 .reg_info.index: 1448
if_statement/0.2/0 .first: {'else' ε}
if_statement/0.2/0 .derives_empty: True
if_statement/0.2/0 .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0/0  -> ( Choice ( Seq attribute switch_statement/0.0/0 ) ε )
switch_statement/0.0/0 .reg_info.index: 1453
switch_statement/0.0/0 .first: {'@' ε}
switch_statement/0.0/0 .derives_empty: True
switch_statement/0.0/0 .follow: {'switch'}
switch_body/0.0/0  -> ( Choice ( Seq attribute switch_body/0.0/0 ) ε )
switch_body/0.0/0 .reg_info.index: 1457
switch_body/0.0/0 .first: {'@' ε}
switch_body/0.0/0 .derives_empty: True
switch_body/0.0/0 .follow: {'{'}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) ε )
case_selectors/0.1/0 .reg_info.index: 1606
case_selectors/0.1/0 .first: {',' ε}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '@' '{'}
loop_statement/0.0/0  -> ( Choice ( Seq attribute loop_statement/0.0/0 ) ε )
loop_statement/0.0/0 .reg_info.index: 1468
loop_statement/0.0/0 .first: {'@' ε}
loop_statement/0.0/0 .derives_empty: True
loop_statement/0.0/0 .follow: {'loop'}
loop_statement/0.2/0  -> ( Choice ( Seq attribute loop_statement/0.2/0 ) ε )
loop_statement/0.2/0 .reg_info.index: 1472
loop_statement/0.2/0 .first: {'@' ε}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'{'}
loop_statement/0.4/0  -> ( Choice ( Seq statement loop_statement/0.4/0 ) ε )
loop_statement/0.4/0 .reg_info.index: 1476
loop_statement/0.4/0 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.4/0 .derives_empty: True
loop_statement/0.4/0 .follow: {'continuing' '}'}
for_statement/0.0/0  -> ( Choice ( Seq attribute for_statement/0.0/0 ) ε )
for_statement/0.0/0 .reg_info.index: 1481
for_statement/0.0/0 .first: {'@' ε}
for_statement/0.0/0 .derives_empty: True
for_statement/0.0/0 .follow: {'for'}
while_statement/0.0/0  -> ( Choice ( Seq attribute while_statement/0.0/0 ) ε )
while_statement/0.0/0 .reg_info.index: 1488
while_statement/0.0/0 .first: {'@' ε}
while_statement/0.0/0 .derives_empty: True
while_statement/0.0/0 .follow: {'while'}
continuing_compound_statement/0.0/0  -> ( Choice ( Seq attribute continuing_compound_statement/0.0/0 ) ε )
continuing_compound_statement/0.0/0 .reg_info.index: 1492
continuing_compound_statement/0.0/0 .first: {'@' ε}
continuing_compound_statement/0.0/0 .derives_empty: True
continuing_compound_statement/0.0/0 .follow: {'{'}
continuing_compound_statement/0.2/0  -> ( Choice ( Seq statement continuing_compound_statement/0.2/0 ) ε )
continuing_compound_statement/0.2/0 .reg_info.index: 1496
continuing_compound_statement/0.2/0 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.2/0 .derives_empty: True
continuing_compound_statement/0.2/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) ε )
function_decl/0.0/0 .reg_info.index: 1502
function_decl/0.0/0 .first: {'@' ε}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 ε )
function_header/0.5/0.1 .reg_info.index: 1668
function_header/0.5/0.1 .first: {'@' ε}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) ε )
param_list/0.1/0 .reg_info.index: 1646
param_list/0.1/0 .first: {',' ε}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) ε )
param/0.0/0 .reg_info.index: 1518
param/0.0/0 .first: {'@' ε}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_list/0.1/0  -> ( Choice ( Seq enable_extension_list/0.1/0/0.0 enable_extension_list/0.1/0 ) ε )
enable_extension_list/0.1/0 .reg_info.index: 1657
enable_extension_list/0.1/0 .first: {',' ε}
enable_extension_list/0.1/0 .derives_empty: True
enable_extension_list/0.1/0 .follow: {',' ';'}
software_extension_list/0.1/0  -> ( Choice ( Seq software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ) ε )
software_extension_list/0.1/0 .reg_info.index: 1664
software_extension_list/0.1/0 .first: {',' ε}
software_extension_list/0.1/0 .derives_empty: True
software_extension_list/0.1/0 .follow: {',' ';'}
template_arg_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' template_arg_expression ) )
template_arg_comma_list/0.1/0/0.0 .reg_info.index: 1545
template_arg_comma_list/0.1/0/0.0 .first: {','}
template_arg_comma_list/0.1/0/0.0 .derives_empty: False
template_arg_comma_list/0.1/0/0.0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1552
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1571
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1602
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '@' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1642
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
enable_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' enable_extension_name ) )
enable_extension_list/0.1/0/0.0 .reg_info.index: 1653
enable_extension_list/0.1/0/0.0 .first: {','}
enable_extension_list/0.1/0/0.0 .derives_empty: False
enable_extension_list/0.1/0/0.0 .follow: {',' ';'}
software_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' software_extension_name ) )
software_extension_list/0.1/0/0.0 .reg_info.index: 1660
software_extension_list/0.1/0/0.0 .first: {','}
software_extension_list/0.1/0/0.0 .derives_empty: False
software_extension_list/0.1/0/0.0 .follow: {',' ';'}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) ε )
function_header/0.5/0.1/0 .reg_info.index: 1666
function_header/0.5/0.1/0 .first: {'@' ε}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> · translation_unit EndOfText : {EndOfText}
diagnostic_directive -> · 'diagnostic' diagnostic_control ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_directive -> · 'enable' enable_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · diagnostic_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> · 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit -> · translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit · EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 · translation_unit/0.1 : {EndOfText}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var'}
attribute -> · align_attr : {'@' 'fn' 'override' 'var'}
attribute -> · binding_attr : {'@' 'fn' 'override' 'var'}
attribute -> · blend_src_attr : {'@' 'fn' 'override' 'var'}
attribute -> · builtin_attr : {'@' 'fn' 'override' 'var'}
attribute -> · compute_attr : {'@' 'fn' 'override' 'var'}
attribute -> · const_attr : {'@' 'fn' 'override' 'var'}
attribute -> · diagnostic_attr : {'@' 'fn' 'override' 'var'}
attribute -> · fragment_attr : {'@' 'fn' 'override' 'var'}
attribute -> · group_attr : {'@' 'fn' 'override' 'var'}
attribute -> · id_attr : {'@' 'fn' 'override' 'var'}
attribute -> · interpolate_attr : {'@' 'fn' 'override' 'var'}
attribute -> · invariant_attr : {'@' 'fn' 'override' 'var'}
attribute -> · location_attr : {'@' 'fn' 'override' 'var'}
attribute -> · must_use_attr : {'@' 'fn' 'override' 'var'}
attribute -> · size_attr : {'@' 'fn' 'override' 'var'}
attribute -> · vertex_attr : {'@' 'fn' 'override' 'var'}
attribute -> · workgroup_size_attr : {'@' 'fn' 'override' 'var'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
compute_attr -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
fragment_attr -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_value_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_value_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_value_decl -> · global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 : {';'}
global_value_decl/1.0 -> · global_value_decl/1.0/0 : {'override'}
global_value_decl/1.0/0 -> · attribute global_value_decl/1.0/0 : {'override'}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'override' 'var'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
invariant_attr -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
must_use_attr -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> · translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
diagnostic_directive -> · 'diagnostic' diagnostic_control ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_directive -> · 'enable' enable_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · diagnostic_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> · 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> diagnostic_directive · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#6
global_directive -> enable_directive · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#7
global_directive -> requires_directive · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#8
diagnostic_directive -> 'diagnostic' · diagnostic_control ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
diagnostic_control -> · '(' severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 ')' : {';'}

#9
enable_directive -> 'enable' · enable_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_list -> · enable_extension_name enable_extension_list/0.1 enable_extension_list/0.2 : {';'}
enable_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#10
requires_directive -> 'requires' · software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list -> · software_extension_name software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#11
requires_directive -> 'requires' software_extension_list · ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#12
software_extension_list -> software_extension_name · software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_list/0.1 -> · software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> · software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> · ',' software_extension_name : {',' ';'}

#13
software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {',' ';'}

#14
enable_directive -> 'enable' enable_extension_list · ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#15
enable_extension_list -> enable_extension_name · enable_extension_list/0.1 enable_extension_list/0.2 : {';'}
enable_extension_list/0.1 -> · enable_extension_list/0.1/0 : {',' ';'}
enable_extension_list/0.1/0 -> · enable_extension_list/0.1/0/0.0 enable_extension_list/0.1/0 : {',' ';'}
enable_extension_list/0.1/0/0.0 -> · ',' enable_extension_name : {',' ';'}

#16
enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {',' ';'}

#17
diagnostic_directive -> 'diagnostic' diagnostic_control · ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#18
diagnostic_control -> '(' · severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
severity_control_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {','}

#19
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#20
translation_unit -> translation_unit/0.0 translation_unit/0.1 · : {EndOfText}

#21
translation_unit/0.1 -> translation_unit/0.1/0 · : {EndOfText}

#22
translation_unit/0.1/0 -> global_decl · translation_unit/0.1/0 : {EndOfText}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var'}
attribute -> · align_attr : {'@' 'fn' 'override' 'var'}
attribute -> · binding_attr : {'@' 'fn' 'override' 'var'}
attribute -> · blend_src_attr : {'@' 'fn' 'override' 'var'}
attribute -> · builtin_attr : {'@' 'fn' 'override' 'var'}
attribute -> · compute_attr : {'@' 'fn' 'override' 'var'}
attribute -> · const_attr : {'@' 'fn' 'override' 'var'}
attribute -> · diagnostic_attr : {'@' 'fn' 'override' 'var'}
attribute -> · fragment_attr : {'@' 'fn' 'override' 'var'}
attribute -> · group_attr : {'@' 'fn' 'override' 'var'}
attribute -> · id_attr : {'@' 'fn' 'override' 'var'}
attribute -> · interpolate_attr : {'@' 'fn' 'override' 'var'}
attribute -> · invariant_attr : {'@' 'fn' 'override' 'var'}
attribute -> · location_attr : {'@' 'fn' 'override' 'var'}
attribute -> · must_use_attr : {'@' 'fn' 'override' 'var'}
attribute -> · size_attr : {'@' 'fn' 'override' 'var'}
attribute -> · vertex_attr : {'@' 'fn' 'override' 'var'}
attribute -> · workgroup_size_attr : {'@' 'fn' 'override' 'var'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
compute_attr -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
fragment_attr -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_value_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_value_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_value_decl -> · global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 : {';'}
global_value_decl/1.0 -> · global_value_decl/1.0/0 : {'override'}
global_value_decl/1.0/0 -> · attribute global_value_decl/1.0/0 : {'override'}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'override' 'var'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
invariant_attr -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
must_use_attr -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}

#23
global_decl -> ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#24
global_decl -> global_variable_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#25
global_decl -> global_value_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#26
global_decl -> type_alias_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#27
global_decl -> struct_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#28
global_decl -> function_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#29
global_decl -> const_assert_statement · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#30
global_variable_decl -> global_variable_decl/0.0 · variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#31
global_value_decl -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#32
global_value_decl -> global_value_decl/1.0 · 'override' optionally_typed_ident global_value_decl/1.3 : {';'}

#33
type_alias_decl -> 'alias' · ident '=' type_specifier : {';'}
ident -> · ident_pattern_token _disambiguate_template : {'='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#34
struct_decl -> 'struct' · ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> · ident_pattern_token _disambiguate_template : {'{'}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#35
function_decl -> function_decl/0.0 · function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> · 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'@' '{'}

#36
const_assert_statement -> 'const_assert' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#37
global_variable_decl/0.0 -> global_variable_decl/0.0/0 · : {'var'}

#38
global_value_decl/1.0 -> global_value_decl/1.0/0 · : {'override'}

#39
function_decl/0.0 -> function_decl/0.0/0 · : {'fn'}

#40
function_decl/0.0/0 -> attribute · function_decl/0.0/0 : {'fn'}
global_value_decl/1.0/0 -> attribute · global_value_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute · global_variable_decl/0.0/0 : {'var'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var'}
attribute -> · align_attr : {'@' 'fn' 'override' 'var'}
attribute -> · binding_attr : {'@' 'fn' 'override' 'var'}
attribute -> · blend_src_attr : {'@' 'fn' 'override' 'var'}
attribute -> · builtin_attr : {'@' 'fn' 'override' 'var'}
attribute -> · compute_attr : {'@' 'fn' 'override' 'var'}
attribute -> · const_attr : {'@' 'fn' 'override' 'var'}
attribute -> · diagnostic_attr : {'@' 'fn' 'override' 'var'}
attribute -> · fragment_attr : {'@' 'fn' 'override' 'var'}
attribute -> · group_attr : {'@' 'fn' 'override' 'var'}
attribute -> · id_attr : {'@' 'fn' 'override' 'var'}
attribute -> · interpolate_attr : {'@' 'fn' 'override' 'var'}
attribute -> · invariant_attr : {'@' 'fn' 'override' 'var'}
attribute -> · location_attr : {'@' 'fn' 'override' 'var'}
attribute -> · must_use_attr : {'@' 'fn' 'override' 'var'}
attribute -> · size_attr : {'@' 'fn' 'override' 'var'}
attribute -> · vertex_attr : {'@' 'fn' 'override' 'var'}
attribute -> · workgroup_size_attr : {'@' 'fn' 'override' 'var'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
compute_attr -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
const_attr -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
fragment_attr -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_value_decl/1.0/0 -> · attribute global_value_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'override' 'var'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
invariant_attr -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
must_use_attr -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}
vertex_attr -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'override' 'var'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'fn' 'override' 'var'}

#41
align_attr -> '@' · 'align' '(' expression align_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · ident_pattern_token attribute/0.2 : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> '@' · 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> '@' · 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> '@' · 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> '@' · 'compute' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> '@' · 'const' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> '@' · 'diagnostic' diagnostic_control : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> '@' · 'fragment' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> '@' · 'group' '(' expression group_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> '@' · 'id' '(' expression id_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> '@' · 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> '@' · 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> '@' · 'invariant' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> '@' · 'location' '(' expression location_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> '@' · 'must_use' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> '@' · 'size' '(' expression size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> '@' · 'vertex' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' · 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' · 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' · 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> align_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> binding_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> blend_src_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
attribute -> builtin_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#46
attribute -> const_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#47
attribute -> diagnostic_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#48
attribute -> group_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#49
attribute -> id_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#50
attribute -> interpolate_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#51
attribute -> invariant_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#52
attribute -> location_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#53
attribute -> must_use_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#54
attribute -> size_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#55
attribute -> workgroup_size_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#56
attribute -> vertex_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#57
attribute -> fragment_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#58
attribute -> compute_attr · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#59
attribute -> '@' ident_pattern_token · attribute/0.2 : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute/0.2 -> · argument_expression_list : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#60
align_attr -> '@' 'align' · '(' expression align_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#61
binding_attr -> '@' 'binding' · '(' expression binding_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#62
blend_src_attr -> '@' 'blend_src' · '(' expression blend_src_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#63
builtin_attr -> '@' 'builtin' · '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#64
const_attr -> '@' 'const' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#65
diagnostic_attr -> '@' 'diagnostic' · diagnostic_control : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_control -> · '(' severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#66
group_attr -> '@' 'group' · '(' expression group_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#67
id_attr -> '@' 'id' · '(' expression id_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#68
interpolate_attr -> '@' 'interpolate' · '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> '@' 'interpolate' · '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#69
invariant_attr -> '@' 'invariant' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#70
location_attr -> '@' 'location' · '(' expression location_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#71
must_use_attr -> '@' 'must_use' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#72
size_attr -> '@' 'size' · '(' expression size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#73
workgroup_size_attr -> '@' 'workgroup_size' · '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' · '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' · '(' expression workgroup_size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#74
vertex_attr -> '@' 'vertex' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#75
fragment_attr -> '@' 'fragment' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#76
compute_attr -> '@' 'compute' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#77
ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'(' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/}

#78
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 · : {'var'}

#79
global_value_decl/1.0/0 -> attribute global_value_decl/1.0/0 · : {'override'}

#80
function_decl/0.0/0 -> attribute function_decl/0.0/0 · : {'fn'}

#81
const_assert_statement -> 'const_assert' expression · : {';'}

#82
expression -> relational_expression · : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}

#83
expression -> short_circuit_or_expression · '||' relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}

#84
expression -> short_circuit_and_expression · '&&' relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}

#85
expression -> bitwise_expression · : {')' ',' ':' ';' '@' ']' '{'}

#86
relational_expression -> shift_expression · '!=' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · '==' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _greater_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _less_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
_greater_than -> · /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> · /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> · /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> · /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#87
binary_and_expression -> binary_and_expression · '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression · '&' unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#88
binary_or_expression -> binary_or_expression · '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression · '|' unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#89
binary_xor_expression -> binary_xor_expression · '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression · '^' unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#90
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> additive_expression · : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#91
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#92
additive_expression -> multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#93
unary_expression -> singular_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#94
unary_expression -> '-' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#95
unary_expression -> '!' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#96
unary_expression -> '~' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#97
unary_expression -> '*' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#98
unary_expression -> '&' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#99
singular_expression -> primary_expression · singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> · component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#100
call_expression -> template_elaborated_ident · argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> template_elaborated_ident · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#101
primary_expression -> call_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#102
primary_expression -> literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#103
primary_expression -> paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#104
template_elaborated_ident -> ident · _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#105
literal -> int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#106
literal -> float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#107
literal -> bool_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#108
paren_expression -> '(' · expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')'}
expression -> · relational_expression : {')'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')'}
expression -> · short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#109
ident -> ident_pattern_token · _disambiguate_template : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#110
int_literal -> decimal_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#111
int_literal -> hex_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#112
float_literal -> decimal_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#113
float_literal -> hex_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#114
bool_literal -> 'true' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#115
bool_literal -> 'false' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#116
decimal_int_literal -> /0[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#117
decimal_int_literal -> /[1-9][0-9]*[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#118
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#119
decimal_float_literal -> /0[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#120
decimal_float_literal -> /[1-9][0-9]*[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#121
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#122
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#123
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#124
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#125
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#126
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#127
function_decl -> function_decl/0.0 function_header · compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#128
function_header -> 'fn' · ident '(' function_header/0.3 ')' function_header/0.5 : {'@' '{'}
ident -> · ident_pattern_token _disambiguate_template : {'('}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#129
struct_decl -> 'struct' ident · struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> · '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#130
type_alias_decl -> 'alias' ident · '=' type_specifier : {';'}

#131
global_value_decl -> global_value_decl/1.0 'override' · optionally_typed_ident global_value_decl/1.3 : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#132
global_value_decl -> 'const' optionally_typed_ident · '=' expression : {';'}

#133
optionally_typed_ident -> ident · optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> · ':' type_specifier : {';' '='}

#134
global_variable_decl -> global_variable_decl/0.0 variable_decl · global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> · '=' expression : {';'}

#135
variable_decl -> 'var' · _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#136
global_decl -> const_assert_statement ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#137
global_decl -> type_alias_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#138
global_decl -> global_value_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#139
global_decl -> global_variable_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#140
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 · : {EndOfText}

#141
diagnostic_control -> '(' severity_control_name · ',' diagnostic_rule_name diagnostic_control/0.4 ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#142
severity_control_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {','}

#143
diagnostic_directive -> 'diagnostic' diagnostic_control ';' · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#144
enable_extension_list -> enable_extension_name enable_extension_list/0.1 · enable_extension_list/0.2 : {';'}
enable_extension_list/0.2 -> · ',' : {';'}

#145
enable_extension_list/0.1 -> enable_extension_list/0.1/0 · : {',' ';'}

#146
enable_extension_list/0.1/0 -> enable_extension_list/0.1/0/0.0 · enable_extension_list/0.1/0 : {',' ';'}
enable_extension_list/0.1/0 -> · enable_extension_list/0.1/0/0.0 enable_extension_list/0.1/0 : {',' ';'}
enable_extension_list/0.1/0/0.0 -> · ',' enable_extension_name : {',' ';'}

#147
enable_extension_list/0.1/0/0.0 -> ',' · enable_extension_name : {',' ';'}
enable_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#148
enable_directive -> 'enable' enable_extension_list ';' · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#149
software_extension_list -> software_extension_name software_extension_list/0.1 · software_extension_list/0.2 : {';'}
software_extension_list/0.2 -> · ',' : {';'}

#150
software_extension_list/0.1 -> software_extension_list/0.1/0 · : {',' ';'}

#151
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 · software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> · software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> · ',' software_extension_name : {',' ';'}

#152
software_extension_list/0.1/0/0.0 -> ',' · software_extension_name : {',' ';'}
software_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#153
requires_directive -> 'requires' software_extension_list ';' · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#154
software_extension_list/0.1/0/0.0 -> ',' software_extension_name · : {',' ';'}

#155
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 · : {',' ';'}

#156
software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 · : {';'}

#157
software_extension_list/0.2 -> ',' · : {';'}

#158
enable_extension_list/0.1/0/0.0 -> ',' enable_extension_name · : {',' ';'}

#159
enable_extension_list/0.1/0 -> enable_extension_list/0.1/0/0.0 enable_extension_list/0.1/0 · : {',' ';'}

#160
enable_extension_list -> enable_extension_name enable_extension_list/0.1 enable_extension_list/0.2 · : {';'}

#161
enable_extension_list/0.2 -> ',' · : {';'}

#162
diagnostic_control -> '(' severity_control_name ',' · diagnostic_rule_name diagnostic_control/0.4 ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_name_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ',' '.'}
diagnostic_rule_name -> · diagnostic_name_token '.' diagnostic_name_token : {')' ','}
diagnostic_rule_name -> · diagnostic_name_token : {')' ','}

#163
variable_decl -> 'var' _disambiguate_template · variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_decl/0.2 -> · template_list : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#164
_disambiguate_template -> /\u200B_disambiguate_template/ · : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#165
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 · : {';'}

#166
global_variable_decl/0.2 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#167
optionally_typed_ident -> ident optionally_typed_ident/0.1 · : {';' '='}

#168
optionally_typed_ident/0.1 -> ':' · type_specifier : {';' '='}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {';' '='}

#169
global_value_decl -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#170
global_value_decl -> global_value_decl/1.0 'override' optionally_typed_ident · global_value_decl/1.3 : {';'}
global_value_decl/1.3 -> · '=' expression : {';'}

#171
type_alias_decl -> 'alias' ident '=' · type_specifier : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {';'}

#172
struct_decl -> 'struct' ident struct_body_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#173
struct_body_decl -> '{' · struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#174
function_header -> 'fn' ident · '(' function_header/0.3 ')' function_header/0.5 : {'@' '{'}

#175
function_decl -> function_decl/0.0 function_header compound_statement · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#176
compound_statement -> compound_statement/0.0 · '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#177
compound_statement/0.0 -> compound_statement/0.0/0 · : {'{'}

#178
compound_statement/0.0/0 -> attribute · compound_statement/0.0/0 : {'{'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#179
ident -> ident_pattern_token _disambiguate_template · : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#180
paren_expression -> '(' expression · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#181
template_elaborated_ident -> ident _disambiguate_template · template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> · template_list : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#182
call_expression -> template_elaborated_ident argument_expression_list · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#183
argument_expression_list -> '(' · argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> · expression_comma_list : {')'}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> · expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#184
singular_expression -> primary_expression singular_expression/0.1 · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#185
singular_expression/0.1 -> component_or_swizzle_specifier · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#186
component_or_swizzle_specifier -> '[' · expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {']'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {']'}
expression -> · relational_expression : {']'}
expression -> · short_circuit_and_expression '&&' relational_expression : {']'}
expression -> · short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#187
component_or_swizzle_specifier -> '.' · member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' · swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[rgba]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[rgba][rgba]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[rgba][rgba][rgba]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[rgba][rgba][rgba][rgba]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[xyzw]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[xyzw][xyzw]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[xyzw][xyzw][xyzw]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · /[xyzw][xyzw][xyzw][xyzw]/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#188
unary_expression -> '&' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#189
unary_expression -> '*' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#190
unary_expression -> '~' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#191
unary_expression -> '!' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#192
unary_expression -> '-' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#193
multiplicative_expression -> multiplicative_expression multiplicative_operator · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#194
multiplicative_operator -> '*' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#195
multiplicative_operator -> '/' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#196
multiplicative_operator -> '%' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#197
shift_expression -> unary_expression _shift_left · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#198
shift_expression -> unary_expression _shift_right · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#199
_shift_left -> /\u200B_shift_left/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#200
_shift_right -> /\u200B_shift_right/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#201
additive_expression -> additive_expression additive_operator · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#202
additive_operator -> '+' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#203
additive_operator -> '-' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#204
binary_xor_expression -> binary_xor_expression '^' · unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' · unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}

#205
binary_or_expression -> binary_or_expression '|' · unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' · unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}

#206
binary_and_expression -> binary_and_expression '&' · unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' · unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
literal -> · float_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
literal -> · int_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'&' '(' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#207
relational_expression -> shift_expression _less_than · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#208
relational_expression -> shift_expression _greater_than · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#209
relational_expression -> shift_expression _less_than_equal · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#210
relational_expression -> shift_expression _greater_than_equal · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#211
relational_expression -> shift_expression '==' · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#212
relational_expression -> shift_expression '!=' · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#213
_less_than -> /\u200B_less_than/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#214
_greater_than -> /\u200B_greater_than/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#215
_less_than_equal -> /\u200B_less_than_equal/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#216
_greater_than_equal -> /\u200B_greater_than_equal/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#217
expression -> short_circuit_and_expression '&&' · relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#218
expression -> short_circuit_or_expression '||' · relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
shift_expression -> · additive_expression : {'!=' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#219
workgroup_size_attr -> '@' 'workgroup_size' '(' · expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' '(' · expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' '(' · expression workgroup_size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#220
size_attr -> '@' 'size' '(' · expression size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#221
location_attr -> '@' 'location' '(' · expression location_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#222
interpolate_attr -> '@' 'interpolate' '(' · interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> '@' 'interpolate' '(' · interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_type_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}

#223
id_attr -> '@' 'id' '(' · expression id_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#224
group_attr -> '@' 'group' '(' · expression group_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#225
diagnostic_attr -> '@' 'diagnostic' diagnostic_control · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#226
builtin_attr -> '@' 'builtin' '(' · builtin_value_name builtin_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_value_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}

#227
blend_src_attr -> '@' 'blend_src' '(' · expression blend_src_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#228
binding_attr -> '@' 'binding' '(' · expression binding_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#229
align_attr -> '@' 'align' '(' · expression align_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#230
attribute -> '@' ident_pattern_token attribute/0.2 · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#231
attribute/0.2 -> argument_expression_list · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#232
align_attr -> '@' 'align' '(' expression · align_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr/0.4 -> · ',' : {')'}

#233
binding_attr -> '@' 'binding' '(' expression · binding_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr/0.4 -> · ',' : {')'}

#234
blend_src_attr -> '@' 'blend_src' '(' expression · blend_src_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr/0.4 -> · ',' : {')'}

#235
builtin_attr -> '@' 'builtin' '(' builtin_value_name · builtin_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr/0.4 -> · ',' : {')'}

#236
builtin_value_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {')' ','}

#237
group_attr -> '@' 'group' '(' expression · group_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr/0.4 -> · ',' : {')'}

#238
id_attr -> '@' 'id' '(' expression · id_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr/0.4 -> · ',' : {')'}

#239
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name · ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name · interpolate_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr/0.4 -> · ',' : {')'}

#240
interpolate_type_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {')' ','}

#241
location_attr -> '@' 'location' '(' expression · location_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr/0.4 -> · ',' : {')'}

#242
size_attr -> '@' 'size' '(' expression · size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr/0.4 -> · ',' : {')'}

#243
workgroup_size_attr -> '@' 'workgroup_size' '(' expression · ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' '(' expression · ',' expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' '(' expression · workgroup_size_attr/0.4 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr/0.4 -> · ',' : {')'}

#244
expression -> short_circuit_or_expression '||' relational_expression · : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}

#245
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#246
expression -> short_circuit_and_expression '&&' relational_expression · : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}

#247
relational_expression -> shift_expression '!=' shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#248
relational_expression -> shift_expression '==' shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#249
relational_expression -> shift_expression _greater_than_equal shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#250
relational_expression -> shift_expression _less_than_equal shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#251
relational_expression -> shift_expression _greater_than shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#252
relational_expression -> shift_expression _less_than shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#253
binary_and_expression -> binary_and_expression '&' unary_expression · : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression · : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#254
binary_or_expression -> binary_or_expression '|' unary_expression · : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression · : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#255
binary_xor_expression -> binary_xor_expression '^' unary_expression · : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression · : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#256
additive_expression -> additive_expression additive_operator multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#257
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#258
shift_expression -> unary_expression _shift_right unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#259
shift_expression -> unary_expression _shift_left unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#260
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#261
component_or_swizzle_specifier -> '.' member_ident · component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#262
component_or_swizzle_specifier -> '.' swizzle_name · component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#263
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#264
swizzle_name -> /[rgba]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#265
swizzle_name -> /[rgba][rgba]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#266
swizzle_name -> /[rgba][rgba][rgba]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#267
swizzle_name -> /[rgba][rgba][rgba][rgba]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#268
swizzle_name -> /[xyzw]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#269
swizzle_name -> /[xyzw][xyzw]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#270
swizzle_name -> /[xyzw][xyzw][xyzw]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#271
swizzle_name -> /[xyzw][xyzw][xyzw][xyzw]/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#272
component_or_swizzle_specifier -> '[' expression · ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#273
argument_expression_list -> '(' argument_expression_list/0.1 · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#274
argument_expression_list/0.1 -> expression_comma_list · : {')'}

#275
expression_comma_list -> expression · expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#276
template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#277
template_elaborated_ident/0.2 -> template_list · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#278
template_list -> _template_args_start · template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list -> · template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_expression -> · bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#279
_template_args_start -> /\u200B_template_args_start/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#280
paren_expression -> '(' expression ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#281
compound_statement/0.0/0 -> attribute compound_statement/0.0/0 · : {'{'}

#282
compound_statement -> compound_statement/0.0 '{' · compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compound_statement/0.2 -> · compound_statement/0.2/0 : {'}'}
compound_statement/0.2/0 -> · statement compound_statement/0.2/0 : {'}'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
return_statement -> · 'return' return_statement/0.1 : {';'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#283
function_header -> 'fn' ident '(' · function_header/0.3 ')' function_header/0.5 : {'@' '{'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> · param_list : {')'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> · param param_list/0.1 param_list/0.2 : {')'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#284
struct_body_decl -> '{' struct_member · struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#285
struct_member -> struct_member/0.0 · member_ident ':' type_specifier : {',' '}'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#286
struct_member/0.0 -> struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#287
struct_member/0.0/0 -> attribute · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#288
type_alias_decl -> 'alias' ident '=' type_specifier · : {';'}

#289
type_specifier -> ident · _disambiguate_template template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {')' ',' ';' '=' '}' /\u200B_template_args_start/}

#290
global_value_decl -> global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 · : {';'}

#291
global_value_decl/1.3 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#292
global_value_decl -> 'const' optionally_typed_ident '=' expression · : {';'}

#293
optionally_typed_ident/0.1 -> ':' type_specifier · : {';' '='}

#294
global_variable_decl/0.2 -> '=' expression · : {';'}

#295
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 · optionally_typed_ident : {';' '='}
ident -> · ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#296
variable_decl/0.2 -> template_list · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#297
diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name · diagnostic_control/0.4 ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_control/0.4 -> · ',' : {')'}

#298
diagnostic_rule_name -> diagnostic_name_token · '.' diagnostic_name_token : {')' ','}
diagnostic_rule_name -> diagnostic_name_token · : {')' ','}

#299
diagnostic_name_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {')' ',' '.'}

#300
diagnostic_rule_name -> diagnostic_name_token '.' · diagnostic_name_token : {')' ','}
diagnostic_name_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}

#301
diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 · ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#302
diagnostic_control/0.4 -> ',' · : {')'}

#303
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident · : {';' '='}

#304
global_value_decl/1.3 -> '=' expression · : {';'}

#305
type_specifier -> ident _disambiguate_template · template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> · template_list : {')' ',' ';' '=' '}'}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {')' ',' ';' '=' '}'}

#306
struct_member/0.0/0 -> attribute struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#307
struct_member -> struct_member/0.0 member_ident · ':' type_specifier : {',' '}'}

#308
struct_body_decl -> '{' struct_member struct_body_decl/0.2 · struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> · ',' : {'}'}

#309
struct_body_decl/0.2 -> struct_body_decl/0.2/0 · : {',' '}'}

#310
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#311
struct_body_decl/0.2/0/0.0 -> ',' · struct_member : {',' '}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#312
function_header -> 'fn' ident '(' function_header/0.3 · ')' function_header/0.5 : {'@' '{'}

#313
function_header/0.3 -> param_list · : {')'}

#314
param_list -> param · param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#315
param -> param/0.0 · ident ':' type_specifier : {')' ','}
ident -> · ident_pattern_token _disambiguate_template : {':'}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#316
param/0.0 -> param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#317
param/0.0/0 -> attribute · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#318
compound_statement -> compound_statement/0.0 '{' compound_statement/0.2 · '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#319
compound_statement/0.2 -> compound_statement/0.2/0 · : {'}'}

#320
compound_statement/0.2/0 -> statement · compound_statement/0.2/0 : {'}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compound_statement/0.2/0 -> · statement compound_statement/0.2/0 : {'}'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
return_statement -> · 'return' return_statement/0.1 : {';'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#321
statement -> ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#322
statement -> return_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#323
statement -> if_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#324
statement -> switch_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#325
statement -> loop_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#326
statement -> for_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#327
statement -> while_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#328
statement -> func_call_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#329
statement -> variable_or_value_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#330
statement -> break_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#331
statement -> continue_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#332
statement -> 'discard' · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#333
statement -> variable_updating_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#334
statement -> compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#335
statement -> const_assert_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#336
return_statement -> 'return' · return_statement/0.1 : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> · expression : {';'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#337
if_statement -> if_statement/0.0 · if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#338
switch_statement -> switch_statement/0.0 · 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#339
loop_statement -> loop_statement/0.0 · 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#340
for_statement -> for_statement/0.0 · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#341
while_statement -> while_statement/0.0 · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#342
func_call_statement -> template_elaborated_ident · argument_expression_list : {')' ';'}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {')' ';'}

#343
variable_or_value_statement -> variable_decl · '=' expression : {';'}
variable_or_value_statement -> variable_decl · : {';'}

#344
variable_or_value_statement -> 'let' · optionally_typed_ident '=' expression : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#345
variable_or_value_statement -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#346
break_statement -> 'break' · : {';'}

#347
continue_statement -> 'continue' · : {';'}

#348
variable_updating_statement -> assignment_statement · : {')' ';'}

#349
variable_updating_statement -> increment_statement · : {')' ';'}

#350
variable_updating_statement -> decrement_statement · : {')' ';'}

#351
if_statement/0.0 -> if_statement/0.0/0 · : {'if'}

#352
switch_statement/0.0 -> switch_statement/0.0/0 · : {'switch'}

#353
loop_statement/0.0 -> loop_statement/0.0/0 · : {'loop'}

#354
for_statement/0.0 -> for_statement/0.0/0 · : {'for'}

#355
while_statement/0.0 -> while_statement/0.0/0 · : {'while'}

#356
core_lhs_expression -> ident · _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident · _disambiguate_template template_elaborated_ident/0.2 : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/ /\u200B_template_args_start/}

#357
assignment_statement -> lhs_expression · assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression · '--' : {')' ';'}
increment_statement -> lhs_expression · '++' : {')' ';'}
_shift_left_assign -> · /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> · /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · '=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · compound_assignment_operator : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '%=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '&=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '*=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '+=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '-=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '/=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '^=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '|=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_left_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_right_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#358
assignment_statement -> '_' · '=' expression : {')' ';'}

#359
compound_statement/0.0/0 -> attribute · compound_statement/0.0/0 : {'{'}
for_statement/0.0/0 -> attribute · for_statement/0.0/0 : {'for'}
if_statement/0.0/0 -> attribute · if_statement/0.0/0 : {'if'}
loop_statement/0.0/0 -> attribute · loop_statement/0.0/0 : {'loop'}
switch_statement/0.0/0 -> attribute · switch_statement/0.0/0 : {'switch'}
while_statement/0.0/0 -> attribute · while_statement/0.0/0 : {'while'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#360
lhs_expression -> core_lhs_expression · lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> · component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#361
lhs_expression -> '*' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#362
lhs_expression -> '&' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#363
core_lhs_expression -> '(' · lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> · ident _disambiguate_template : {')' '.' '['}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> · '&' lhs_expression : {')'}
lhs_expression -> · '*' lhs_expression : {')'}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {')'}

#364
template_list -> _template_args_start template_arg_comma_list · _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#365
template_arg_comma_list -> template_arg_expression · template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.1 -> · template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> · template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> · ',' template_arg_expression : {',' /\u200B_template_args_end/}

#366
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}
template_arg_expression -> relational_expression · : {',' /\u200B_template_args_end/}

#367
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression · '||' relational_expression : {',' /\u200B_template_args_end/}

#368
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression · '&&' relational_expression : {',' /\u200B_template_args_end/}

#369
template_arg_expression -> bitwise_expression · : {',' /\u200B_template_args_end/}

#370
expression_comma_list -> expression expression_comma_list/0.1 · expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> · ',' : {')'}

#371
expression_comma_list/0.1 -> expression_comma_list/0.1/0 · : {')' ','}

#372
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#373
expression_comma_list/0.1/0/0.0 -> ',' · expression : {')' ','}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#374
argument_expression_list -> '(' argument_expression_list/0.1 ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#375
component_or_swizzle_specifier -> '[' expression ']' · component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#376
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#377
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#378
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#379
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#380
workgroup_size_attr -> '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#381
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' · expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' · expression workgroup_size_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr/0.4 -> ',' · : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#382
size_attr -> '@' 'size' '(' expression size_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#383
size_attr/0.4 -> ',' · : {')'}

#384
location_attr -> '@' 'location' '(' expression location_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#385
location_attr/0.4 -> ',' · : {')'}

#386
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#387
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name ',' · interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr/0.4 -> ',' · : {')'}
interpolate_sampling_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}

#388
id_attr -> '@' 'id' '(' expression id_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#389
id_attr/0.4 -> ',' · : {')'}

#390
group_attr -> '@' 'group' '(' expression group_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#391
group_attr/0.4 -> ',' · : {')'}

#392
builtin_attr -> '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#393
builtin_attr/0.4 -> ',' · : {')'}

#394
blend_src_attr -> '@' 'blend_src' '(' expression blend_src_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#395
blend_src_attr/0.4 -> ',' · : {')'}

#396
binding_attr -> '@' 'binding' '(' expression binding_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#397
binding_attr/0.4 -> ',' · : {')'}

#398
align_attr -> '@' 'align' '(' expression align_attr/0.4 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#399
align_attr/0.4 -> ',' · : {')'}

#400
align_attr -> '@' 'align' '(' expression align_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#401
binding_attr -> '@' 'binding' '(' expression binding_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#402
blend_src_attr -> '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#403
builtin_attr -> '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#404
group_attr -> '@' 'group' '(' expression group_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#405
id_attr -> '@' 'id' '(' expression id_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#406
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name · interpolate_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr/1.6 -> · ',' : {')'}

#407
interpolate_sampling_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {')' ','}

#408
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#409
location_attr -> '@' 'location' '(' expression location_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#410
size_attr -> '@' 'size' '(' expression size_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#411
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression · ',' expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression · workgroup_size_attr/1.6 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr/1.6 -> · ',' : {')'}

#412
workgroup_size_attr -> '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#413
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#414
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#415
expression_comma_list/0.1/0/0.0 -> ',' expression · : {')' ','}

#416
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 · : {')' ','}

#417
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 · : {')'}

#418
expression_comma_list/0.2 -> ',' · : {')'}

#419
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' · relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#420
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression '||' · relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#421
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 · template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.2 -> · ',' : {/\u200B_template_args_end/}

#422
template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 · : {',' /\u200B_template_args_end/}

#423
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 · template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> · template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> · ',' template_arg_expression : {',' /\u200B_template_args_end/}

#424
template_arg_comma_list/0.1/0/0.0 -> ',' · template_arg_expression : {',' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_expression -> · bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#425
template_list -> _template_args_start template_arg_comma_list _template_args_end · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#426
_template_args_end -> /\u200B_template_args_end/ · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#427
core_lhs_expression -> '(' lhs_expression · ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#428
core_lhs_expression -> ident · _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#429
lhs_expression -> '&' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#430
lhs_expression -> '*' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#431
lhs_expression -> core_lhs_expression lhs_expression/0.1 · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#432
lhs_expression/0.1 -> component_or_swizzle_specifier · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#433
if_statement/0.0/0 -> attribute if_statement/0.0/0 · : {'if'}

#434
switch_statement/0.0/0 -> attribute switch_statement/0.0/0 · : {'switch'}

#435
loop_statement/0.0/0 -> attribute loop_statement/0.0/0 · : {'loop'}

#436
for_statement/0.0/0 -> attribute for_statement/0.0/0 · : {'for'}

#437
while_statement/0.0/0 -> attribute while_statement/0.0/0 · : {'while'}

#438
assignment_statement -> '_' '=' · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#439
assignment_statement -> lhs_expression assignment_statement/0.1 · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#440
increment_statement -> lhs_expression '++' · : {')' ';'}

#441
decrement_statement -> lhs_expression '--' · : {')' ';'}

#442
assignment_statement/0.1 -> '=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#443
assignment_statement/0.1 -> compound_assignment_operator · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#444
compound_assignment_operator -> '+=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#445
compound_assignment_operator -> '-=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#446
compound_assignment_operator -> '*=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#447
compound_assignment_operator -> '/=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#448
compound_assignment_operator -> '%=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#449
compound_assignment_operator -> '&=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#450
compound_assignment_operator -> '|=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#451
compound_assignment_operator -> '^=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#452
compound_assignment_operator -> _shift_right_assign · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#453
compound_assignment_operator -> _shift_left_assign · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#454
_shift_right_assign -> /\u200B_shift_right_assign/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#455
_shift_left_assign -> /\u200B_shift_left_assign/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#456
core_lhs_expression -> ident _disambiguate_template · : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident _disambiguate_template · template_elaborated_ident/0.2 : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> · template_list : {'('}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {'('}

#457
variable_or_value_statement -> 'const' optionally_typed_ident · '=' expression : {';'}

#458
variable_or_value_statement -> 'let' optionally_typed_ident · '=' expression : {';'}

#459
variable_or_value_statement -> variable_decl '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#460
func_call_statement -> template_elaborated_ident argument_expression_list · : {')' ';'}

#461
while_statement -> while_statement/0.0 'while' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#462
for_statement -> for_statement/0.0 'for' · '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#463
loop_statement -> loop_statement/0.0 'loop' · loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
loop_statement/0.2 -> · loop_statement/0.2/0 : {'{'}
loop_statement/0.2/0 -> · attribute loop_statement/0.2/0 : {'{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#464
switch_statement -> switch_statement/0.0 'switch' · expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#465
if_statement -> if_statement/0.0 if_clause · if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> · if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2/0 -> · else_if_clause if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#466
if_clause -> 'if' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#467
return_statement -> 'return' return_statement/0.1 · : {';'}

#468
return_statement/0.1 -> expression · : {';'}

#469
statement -> const_assert_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#470
statement -> variable_updating_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#471
statement -> 'discard' ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#472
statement -> continue_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#473
statement -> break_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#474
statement -> variable_or_value_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#475
statement -> func_call_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#476
statement -> return_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#477
compound_statement/0.2/0 -> statement compound_statement/0.2/0 · : {'}'}

#478
compound_statement -> compound_statement/0.0 '{' compound_statement/0.2 '}' · : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#479
param/0.0/0 -> attribute param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#480
param -> param/0.0 ident · ':' type_specifier : {')' ','}

#481
param_list -> param param_list/0.1 · param_list/0.2 : {')'}
param_list/0.2 -> · ',' : {')'}

#482
param_list/0.1 -> param_list/0.1/0 · : {')' ','}

#483
param_list/0.1/0 -> param_list/0.1/0/0.0 · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#484
param_list/0.1/0/0.0 -> ',' · param : {')' ','}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#485
function_header -> 'fn' ident '(' function_header/0.3 ')' · function_header/0.5 : {'@' '{'}
function_header/0.5 -> · '->' function_header/0.5/0.1 template_elaborated_ident : {'@' '{'}

#486
struct_body_decl/0.2/0/0.0 -> ',' struct_member · : {',' '}'}

#487
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 · : {',' '}'}

#488
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 · '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#489
struct_body_decl/0.3 -> ',' · : {'}'}

#490
struct_member -> struct_member/0.0 member_ident ':' · type_specifier : {',' '}'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {',' '}'}

#491
type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 · : {')' ',' ';' '=' '}'}

#492
diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 ')' · : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#493
diagnostic_rule_name -> diagnostic_name_token '.' diagnostic_name_token · : {')' ','}

#494
struct_member -> struct_member/0.0 member_ident ':' type_specifier · : {',' '}'}

#495
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#496
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 · : {'@' '{'}

#497
function_header/0.5 -> '->' · function_header/0.5/0.1 template_elaborated_ident : {'@' '{'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> · function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#498
param_list/0.1/0/0.0 -> ',' param · : {')' ','}

#499
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 · : {')' ','}

#500
param_list -> param param_list/0.1 param_list/0.2 · : {')'}

#501
param_list/0.2 -> ',' · : {')'}

#502
param -> param/0.0 ident ':' · type_specifier : {')' ','}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {')' ','}

#503
if_clause -> 'if' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#504
if_statement -> if_statement/0.0 if_clause if_statement/0.2 · if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> · 'else' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.3 -> · else_clause : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#505
if_statement/0.2 -> if_statement/0.2/0 · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#506
if_statement/0.2/0 -> else_if_clause · if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2/0 -> · else_if_clause if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#507
else_if_clause -> 'else' · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#508
switch_statement -> switch_statement/0.0 'switch' expression · switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
switch_body -> · switch_body/0.0 '{' switch_body/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body/0.0 -> · switch_body/0.0/0 : {'{'}
switch_body/0.0/0 -> · attribute switch_body/0.0/0 : {'{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#509
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 · '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#510
loop_statement/0.2 -> loop_statement/0.2/0 · : {'{'}

#511
loop_statement/0.2/0 -> attribute · loop_statement/0.2/0 : {'{'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
loop_statement/0.2/0 -> · attribute loop_statement/0.2/0 : {'{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#512
for_statement -> for_statement/0.0 'for' '(' · for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_header -> · for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> · for_init : {';'}
for_init -> · func_call_statement : {';'}
for_init -> · variable_or_value_statement : {';'}
for_init -> · variable_updating_statement : {';'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}

#513
while_statement -> while_statement/0.0 'while' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#514
variable_or_value_statement -> variable_decl '=' expression · : {';'}

#515
variable_or_value_statement -> 'let' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#516
variable_or_value_statement -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#517
assignment_statement -> lhs_expression assignment_statement/0.1 expression · : {')' ';'}

#518
assignment_statement -> '_' '=' expression · : {')' ';'}

#519
core_lhs_expression -> ident _disambiguate_template · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#520
core_lhs_expression -> '(' lhs_expression ')' · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#521
template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression · : {',' /\u200B_template_args_end/}

#522
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 · : {',' /\u200B_template_args_end/}

#523
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 · : {/\u200B_template_args_end/}

#524
template_arg_comma_list/0.2 -> ',' · : {/\u200B_template_args_end/}

#525
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}
template_arg_expression -> short_circuit_or_expression '||' relational_expression · : {',' /\u200B_template_args_end/}

#526
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' relational_expression · : {',' /\u200B_template_args_end/}

#527
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#528
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression ',' · expression workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr/1.6 -> ',' · : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#529
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#530
interpolate_attr/1.6 -> ',' · : {')'}

#531
interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#532
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression ',' expression · workgroup_size_attr/2.8 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr/2.8 -> · ',' : {')'}

#533
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#534
variable_or_value_statement -> 'const' optionally_typed_ident '=' expression · : {';'}

#535
variable_or_value_statement -> 'let' optionally_typed_ident '=' expression · : {';'}

#536
while_statement -> while_statement/0.0 'while' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#537
for_statement -> for_statement/0.0 'for' '(' for_header · ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#538
for_header -> for_header/0.0 · ';' for_header/0.2 ';' for_header/0.4 : {')'}

#539
for_header/0.0 -> for_init · : {';'}

#540
for_init -> variable_or_value_statement · : {';'}

#541
for_init -> variable_updating_statement · : {';'}

#542
for_init -> func_call_statement · : {';'}

#543
loop_statement/0.2/0 -> attribute loop_statement/0.2/0 · : {'{'}

#544
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' · loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
loop_statement/0.4 -> · loop_statement/0.4/0 : {'continuing' '}'}
loop_statement/0.4/0 -> · statement loop_statement/0.4/0 : {'continuing' '}'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
return_statement -> · 'return' return_statement/0.1 : {';'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#545
switch_statement -> switch_statement/0.0 'switch' expression switch_body · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#546
switch_body -> switch_body/0.0 · '{' switch_body/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#547
switch_body/0.0 -> switch_body/0.0/0 · : {'{'}

#548
switch_body/0.0/0 -> attribute · switch_body/0.0/0 : {'{'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
switch_body/0.0/0 -> · attribute switch_body/0.0/0 : {'{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#549
else_if_clause -> 'else' 'if' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#550
if_statement/0.2/0 -> else_if_clause if_statement/0.2/0 · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#551
if_statement -> if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#552
if_statement/0.3 -> else_clause · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#553
else_clause -> 'else' · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#554
if_clause -> 'if' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#555
param -> param/0.0 ident ':' type_specifier · : {')' ','}

#556
function_header/0.5 -> '->' function_header/0.5/0.1 · template_elaborated_ident : {'@' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'@' '{'}

#557
function_header/0.5/0.1 -> function_header/0.5/0.1/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#558
function_header/0.5/0.1/0 -> attribute · function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · align_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · binding_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · blend_src_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · builtin_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · compute_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · const_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · diagnostic_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · fragment_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · group_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · id_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · interpolate_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · invariant_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · location_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · must_use_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · vertex_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · workgroup_size_attr : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compute_attr -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_attr -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
fragment_attr -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
invariant_attr -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
must_use_attr -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
vertex_attr -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#559
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#560
function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident · : {'@' '{'}

#561
else_clause -> 'else' compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#562
else_if_clause -> 'else' 'if' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#563
switch_body/0.0/0 -> attribute switch_body/0.0/0 · : {'{'}

#564
switch_body -> switch_body/0.0 '{' · switch_body/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body/0.2 -> · switch_body/0.2/0 : {'}'}
switch_body/0.2/0 -> · switch_clause switch_body/0.2/0 : {'}'}
switch_clause -> · case_clause : {'case' 'default' '}'}
switch_clause -> · default_alone_clause : {'case' 'default' '}'}

#565
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 · loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> · 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.5 -> · continuing_statement : {'}'}

#566
loop_statement/0.4 -> loop_statement/0.4/0 · : {'continuing' '}'}

#567
loop_statement/0.4/0 -> statement · loop_statement/0.4/0 : {'continuing' '}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
loop_statement/0.4/0 -> · statement loop_statement/0.4/0 : {'continuing' '}'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
return_statement -> · 'return' return_statement/0.1 : {';'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#568
for_header -> for_header/0.0 ';' · for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> · expression : {';'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#569
for_statement -> for_statement/0.0 'for' '(' for_header ')' · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#570
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 · ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#571
workgroup_size_attr/2.8 -> ',' · : {')'}

#572
workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#573
for_statement -> for_statement/0.0 'for' '(' for_header ')' compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#574
for_header -> for_header/0.0 ';' for_header/0.2 · ';' for_header/0.4 : {')'}

#575
for_header/0.2 -> expression · : {';'}

#576
loop_statement/0.4/0 -> statement loop_statement/0.4/0 · : {'continuing' '}'}

#577
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 · '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#578
loop_statement/0.5 -> continuing_statement · : {'}'}

#579
continuing_statement -> 'continuing' · continuing_compound_statement : {'}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
continuing_compound_statement -> · continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' : {'}'}
continuing_compound_statement/0.0 -> · continuing_compound_statement/0.0/0 : {'{'}
continuing_compound_statement/0.0/0 -> · attribute continuing_compound_statement/0.0/0 : {'{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#580
switch_body -> switch_body/0.0 '{' switch_body/0.2 · '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#581
switch_body/0.2 -> switch_body/0.2/0 · : {'}'}

#582
switch_body/0.2/0 -> switch_clause · switch_body/0.2/0 : {'}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body/0.2/0 -> · switch_clause switch_body/0.2/0 : {'}'}
switch_clause -> · case_clause : {'case' 'default' '}'}
switch_clause -> · default_alone_clause : {'case' 'default' '}'}

#583
switch_clause -> case_clause · : {'case' 'default' '}'}

#584
switch_clause -> default_alone_clause · : {'case' 'default' '}'}

#585
case_clause -> 'case' · case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> · 'default' : {',' ':' '@' '{'}
case_selector -> · expression : {',' ':' '@' '{'}
case_selectors -> · case_selector case_selectors/0.1 case_selectors/0.2 : {':' '@' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {',' ':' '@' '{'}
expression -> · relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#586
default_alone_clause -> 'default' · default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> · ':' : {'@' '{'}

#587
else_if_clause -> 'else' 'if' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#588
default_alone_clause -> 'default' default_alone_clause/0.1 · compound_statement : {'case' 'default' '}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'case' 'default' '}'}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#589
default_alone_clause/0.1 -> ':' · : {'@' '{'}

#590
case_clause -> 'case' case_selectors · case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> · ':' : {'@' '{'}

#591
case_selectors -> case_selector · case_selectors/0.1 case_selectors/0.2 : {':' '@' '{'}
case_selectors/0.1 -> · case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '@' '{'}

#592
case_selector -> 'default' · : {',' ':' '@' '{'}

#593
case_selector -> expression · : {',' ':' '@' '{'}

#594
switch_body/0.2/0 -> switch_clause switch_body/0.2/0 · : {'}'}

#595
switch_body -> switch_body/0.0 '{' switch_body/0.2 '}' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#596
continuing_statement -> 'continuing' continuing_compound_statement · : {'}'}

#597
continuing_compound_statement -> continuing_compound_statement/0.0 · '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' : {'}'}

#598
continuing_compound_statement/0.0 -> continuing_compound_statement/0.0/0 · : {'{'}

#599
continuing_compound_statement/0.0/0 -> attribute · continuing_compound_statement/0.0/0 : {'{'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
continuing_compound_statement/0.0/0 -> · attribute continuing_compound_statement/0.0/0 : {'{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#600
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#601
for_header -> for_header/0.0 ';' for_header/0.2 ';' · for_header/0.4 : {')'}
assignment_statement -> · '_' '=' expression : {')'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {')'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {')'}
for_header/0.4 -> · for_update : {')'}
for_update -> · func_call_statement : {')'}
for_update -> · variable_updating_statement : {')'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {')'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> · lhs_expression '++' : {')'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_updating_statement -> · assignment_statement : {')'}
variable_updating_statement -> · decrement_statement : {')'}
variable_updating_statement -> · increment_statement : {')'}

#602
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 · : {')'}

#603
for_header/0.4 -> for_update · : {')'}

#604
for_update -> variable_updating_statement · : {')'}

#605
for_update -> func_call_statement · : {')'}

#606
continuing_compound_statement/0.0/0 -> attribute continuing_compound_statement/0.0/0 · : {'{'}

#607
continuing_compound_statement -> continuing_compound_statement/0.0 '{' · continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' : {'}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.2 -> · continuing_compound_statement/0.2/0 : {'break' '}'}
continuing_compound_statement/0.2/0 -> · statement continuing_compound_statement/0.2/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
return_statement -> · 'return' return_statement/0.1 : {';'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#608
case_selectors -> case_selector case_selectors/0.1 · case_selectors/0.2 : {':' '@' '{'}
case_selectors/0.2 -> · ',' : {':' '@' '{'}

#609
case_selectors/0.1 -> case_selectors/0.1/0 · : {',' ':' '@' '{'}

#610
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 · case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '@' '{'}

#611
case_selectors/0.1/0/0.0 -> ',' · case_selector : {',' ':' '@' '{'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> · 'default' : {',' ':' '@' '{'}
case_selector -> · expression : {',' ':' '@' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {',' ':' '@' '{'}
expression -> · relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#612
case_clause -> 'case' case_selectors case_clause/0.2 · compound_statement : {'case' 'default' '}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' '{'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' '{'}
attribute -> · align_attr : {'@' '{'}
attribute -> · binding_attr : {'@' '{'}
attribute -> · blend_src_attr : {'@' '{'}
attribute -> · builtin_attr : {'@' '{'}
attribute -> · compute_attr : {'@' '{'}
attribute -> · const_attr : {'@' '{'}
attribute -> · diagnostic_attr : {'@' '{'}
attribute -> · fragment_attr : {'@' '{'}
attribute -> · group_attr : {'@' '{'}
attribute -> · id_attr : {'@' '{'}
attribute -> · interpolate_attr : {'@' '{'}
attribute -> · invariant_attr : {'@' '{'}
attribute -> · location_attr : {'@' '{'}
attribute -> · must_use_attr : {'@' '{'}
attribute -> · size_attr : {'@' '{'}
attribute -> · vertex_attr : {'@' '{'}
attribute -> · workgroup_size_attr : {'@' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' '{'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'case' 'default' '}'}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' '{'}
const_attr -> · '@' 'const' : {'@' '{'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
fragment_attr -> · '@' 'fragment' : {'@' '{'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' '{'}
invariant_attr -> · '@' 'invariant' : {'@' '{'}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' '{'}
must_use_attr -> · '@' 'must_use' : {'@' '{'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' '{'}
vertex_attr -> · '@' 'vertex' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' '{'}

#613
case_clause/0.2 -> ':' · : {'@' '{'}

#614
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement · : {'case' 'default' '}'}

#615
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement · : {'case' 'default' '}'}

#616
case_selectors/0.1/0/0.0 -> ',' case_selector · : {',' ':' '@' '{'}

#617
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 · : {',' ':' '@' '{'}

#618
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 · : {':' '@' '{'}

#619
case_selectors/0.2 -> ',' · : {':' '@' '{'}

#620
continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 · continuing_compound_statement/0.3 '}' : {'}'}
break_if_statement -> · 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.3 -> · break_if_statement : {'}'}

#621
continuing_compound_statement/0.2 -> continuing_compound_statement/0.2/0 · : {'break' '}'}

#622
continuing_compound_statement/0.2/0 -> statement · continuing_compound_statement/0.2/0 : {'break' '}'}
align_attr -> · '@' 'align' '(' expression align_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' ident_pattern_token attribute/0.2 : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · align_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · binding_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · blend_src_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · builtin_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · compute_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · const_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · diagnostic_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · fragment_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · group_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · id_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · interpolate_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · invariant_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · location_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · must_use_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · vertex_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · workgroup_size_attr : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
binding_attr -> · '@' 'binding' '(' expression binding_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
blend_src_attr -> · '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
builtin_attr -> · '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compute_attr -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
const_assert_statement -> · 'const_assert' expression : {';'}
const_attr -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.2/0 -> · statement continuing_compound_statement/0.2/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
diagnostic_attr -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
fragment_attr -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
group_attr -> · '@' 'group' '(' expression group_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
id_attr -> · '@' 'id' '(' expression id_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
interpolate_attr -> · '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
invariant_attr -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
location_attr -> · '@' 'location' '(' expression location_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
must_use_attr -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
return_statement -> · 'return' return_statement/0.1 : {';'}
size_attr -> · '@' 'size' '(' expression size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vertex_attr -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
workgroup_size_attr -> · '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}

#623
continuing_compound_statement/0.2/0 -> statement continuing_compound_statement/0.2/0 · : {'break' '}'}

#624
continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 · '}' : {'}'}

#625
continuing_compound_statement/0.3 -> break_if_statement · : {'}'}

#626
break_if_statement -> 'break' · 'if' expression ';' : {'}'}

#627
break_if_statement -> 'break' 'if' · expression ';' : {'}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#628
continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' · : {'}'}

#629
break_if_statement -> 'break' 'if' expression · ';' : {'}'}

#630
break_if_statement -> 'break' 'if' expression ';' · : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 ·
r#1 global_directive -> diagnostic_directive ·
r#2 global_directive -> enable_directive ·
r#3 global_directive -> requires_directive ·
r#4 software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#5 enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#6 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 ·
r#7 translation_unit -> translation_unit/0.0 translation_unit/0.1 ·
r#8 translation_unit/0.1 -> translation_unit/0.1/0 ·
r#9 global_decl -> ';' ·
r#10 global_decl -> struct_decl ·
r#11 global_decl -> function_decl ·
r#12 global_variable_decl/0.0 -> global_variable_decl/0.0/0 ·
r#13 global_value_decl/1.0 -> global_value_decl/1.0/0 ·
r#14 function_decl/0.0 -> function_decl/0.0/0 ·
r#15 attribute -> align_attr ·
r#16 attribute -> binding_attr ·
r#17 attribute -> blend_src_attr ·
r#18 attribute -> builtin_attr ·
r#19 attribute -> const_attr ·
r#20 attribute -> diagnostic_attr ·
r#21 attribute -> group_attr ·
r#22 attribute -> id_attr ·
r#23 attribute -> interpolate_attr ·
r#24 attribute -> invariant_attr ·
r#25 attribute -> location_attr ·
r#26 attribute -> must_use_attr ·
r#27 attribute -> size_attr ·
r#28 attribute -> workgroup_size_attr ·
r#29 attribute -> vertex_attr ·
r#30 attribute -> fragment_attr ·
r#31 attribute -> compute_attr ·
r#32 const_attr -> '@' 'const' ·
r#33 invariant_attr -> '@' 'invariant' ·
r#34 must_use_attr -> '@' 'must_use' ·
r#35 vertex_attr -> '@' 'vertex' ·
r#36 fragment_attr -> '@' 'fragment' ·
r#37 compute_attr -> '@' 'compute' ·
r#38 ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#39 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 ·
r#40 global_value_decl/1.0/0 -> attribute global_value_decl/1.0/0 ·
r#41 function_decl/0.0/0 -> attribute function_decl/0.0/0 ·
r#42 const_assert_statement -> 'const_assert' expression ·
r#43 expression -> relational_expression ·
r#44 short_circuit_or_expression -> relational_expression ·
r#45 short_circuit_and_expression -> relational_expression ·
r#46 expression -> bitwise_expression ·
r#47 relational_expression -> shift_expression ·
r#48 shift_expression -> additive_expression ·
r#49 binary_and_expression -> unary_expression ·
r#50 binary_or_expression -> unary_expression ·
r#51 binary_xor_expression -> unary_expression ·
r#52 multiplicative_expression -> unary_expression ·
r#53 additive_expression -> multiplicative_expression ·
r#54 unary_expression -> singular_expression ·
r#55 primary_expression -> template_elaborated_ident ·
r#56 primary_expression -> call_expression ·
r#57 primary_expression -> literal ·
r#58 primary_expression -> paren_expression ·
r#59 literal -> int_literal ·
r#60 literal -> float_literal ·
r#61 literal -> bool_literal ·
r#62 int_literal -> decimal_int_literal ·
r#63 int_literal -> hex_int_literal ·
r#64 float_literal -> decimal_float_literal ·
r#65 float_literal -> hex_float_literal ·
r#66 bool_literal -> 'true' ·
r#67 bool_literal -> 'false' ·
r#68 decimal_int_literal -> /0[iu]?/ ·
r#69 decimal_int_literal -> /[1-9][0-9]*[iu]?/ ·
r#70 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ ·
r#71 decimal_float_literal -> /0[fh]/ ·
r#72 decimal_float_literal -> /[1-9][0-9]*[fh]/ ·
r#73 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ ·
r#74 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ ·
r#75 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ ·
r#76 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ ·
r#77 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ ·
r#78 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ ·
r#79 global_decl -> const_assert_statement ';' ·
r#80 global_decl -> type_alias_decl ';' ·
r#81 global_decl -> global_value_decl ';' ·
r#82 global_decl -> global_variable_decl ';' ·
r#83 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 ·
r#84 severity_control_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#85 diagnostic_directive -> 'diagnostic' diagnostic_control ';' ·
r#86 enable_extension_list/0.1 -> enable_extension_list/0.1/0 ·
r#87 enable_directive -> 'enable' enable_extension_list ';' ·
r#88 software_extension_list/0.1 -> software_extension_list/0.1/0 ·
r#89 requires_directive -> 'requires' software_extension_list ';' ·
r#90 software_extension_list/0.1/0/0.0 -> ',' software_extension_name ·
r#91 software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ·
r#92 software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 ·
r#93 software_extension_list/0.2 -> ',' ·
r#94 enable_extension_list/0.1/0/0.0 -> ',' enable_extension_name ·
r#95 enable_extension_list/0.1/0 -> enable_extension_list/0.1/0/0.0 enable_extension_list/0.1/0 ·
r#96 enable_extension_list -> enable_extension_name enable_extension_list/0.1 enable_extension_list/0.2 ·
r#97 enable_extension_list/0.2 -> ',' ·
r#98 _disambiguate_template -> /\u200B_disambiguate_template/ ·
r#99 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ·
r#100 optionally_typed_ident -> ident optionally_typed_ident/0.1 ·
r#101 struct_decl -> 'struct' ident struct_body_decl ·
r#102 function_decl -> function_decl/0.0 function_header compound_statement ·
r#103 compound_statement/0.0 -> compound_statement/0.0/0 ·
r#104 ident -> ident_pattern_token _disambiguate_template ·
r#105 call_expression -> template_elaborated_ident argument_expression_list ·
r#106 singular_expression -> primary_expression singular_expression/0.1 ·
r#107 singular_expression/0.1 -> component_or_swizzle_specifier ·
r#108 unary_expression -> '&' unary_expression ·
r#109 unary_expression -> '*' unary_expression ·
r#110 unary_expression -> '~' unary_expression ·
r#111 unary_expression -> '!' unary_expression ·
r#112 unary_expression -> '-' unary_expression ·
r#113 multiplicative_operator -> '*' ·
r#114 multiplicative_operator -> '/' ·
r#115 multiplicative_operator -> '%' ·
r#116 _shift_left -> /\u200B_shift_left/ ·
r#117 _shift_right -> /\u200B_shift_right/ ·
r#118 additive_operator -> '+' ·
r#119 additive_operator -> '-' ·
r#120 _less_than -> /\u200B_less_than/ ·
r#121 _greater_than -> /\u200B_greater_than/ ·
r#122 _less_than_equal -> /\u200B_less_than_equal/ ·
r#123 _greater_than_equal -> /\u200B_greater_than_equal/ ·
r#124 diagnostic_attr -> '@' 'diagnostic' diagnostic_control ·
r#125 attribute -> '@' ident_pattern_token attribute/0.2 ·
r#126 attribute/0.2 -> argument_expression_list ·
r#127 builtin_value_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#128 interpolate_type_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#129 expression -> short_circuit_or_expression '||' relational_expression ·
r#130 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression ·
r#131 expression -> short_circuit_and_expression '&&' relational_expression ·
r#132 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression ·
r#133 relational_expression -> shift_expression '!=' shift_expression ·
r#134 relational_expression -> shift_expression '==' shift_expression ·
r#135 relational_expression -> shift_expression _greater_than_equal shift_expression ·
r#136 relational_expression -> shift_expression _less_than_equal shift_expression ·
r#137 relational_expression -> shift_expression _greater_than shift_expression ·
r#138 relational_expression -> shift_expression _less_than shift_expression ·
r#139 bitwise_expression -> binary_and_expression '&' unary_expression ·
r#140 binary_and_expression -> binary_and_expression '&' unary_expression ·
r#141 bitwise_expression -> binary_or_expression '|' unary_expression ·
r#142 binary_or_expression -> binary_or_expression '|' unary_expression ·
r#143 bitwise_expression -> binary_xor_expression '^' unary_expression ·
r#144 binary_xor_expression -> binary_xor_expression '^' unary_expression ·
r#145 additive_expression -> additive_expression additive_operator multiplicative_expression ·
r#146 shift_expression -> unary_expression _shift_right unary_expression ·
r#147 shift_expression -> unary_expression _shift_left unary_expression ·
r#148 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression ·
r#149 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#150 swizzle_name -> /[rgba]/ ·
r#151 swizzle_name -> /[rgba][rgba]/ ·
r#152 swizzle_name -> /[rgba][rgba][rgba]/ ·
r#153 swizzle_name -> /[rgba][rgba][rgba][rgba]/ ·
r#154 swizzle_name -> /[xyzw]/ ·
r#155 swizzle_name -> /[xyzw][xyzw]/ ·
r#156 swizzle_name -> /[xyzw][xyzw][xyzw]/ ·
r#157 swizzle_name -> /[xyzw][xyzw][xyzw][xyzw]/ ·
r#158 argument_expression_list/0.1 -> expression_comma_list ·
r#159 template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 ·
r#160 template_elaborated_ident/0.2 -> template_list ·
r#161 _template_args_start -> /\u200B_template_args_start/ ·
r#162 paren_expression -> '(' expression ')' ·
r#163 compound_statement/0.0/0 -> attribute compound_statement/0.0/0 ·
r#164 struct_member/0.0 -> struct_member/0.0/0 ·
r#165 type_alias_decl -> 'alias' ident '=' type_specifier ·
r#166 global_value_decl -> global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 ·
r#167 global_value_decl -> 'const' optionally_typed_ident '=' expression ·
r#168 optionally_typed_ident/0.1 -> ':' type_specifier ·
r#169 global_variable_decl/0.2 -> '=' expression ·
r#170 variable_decl/0.2 -> template_list ·
r#171 diagnostic_rule_name -> diagnostic_name_token ·
r#172 diagnostic_name_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#173 diagnostic_control/0.4 -> ',' ·
r#174 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ·
r#175 global_value_decl/1.3 -> '=' expression ·
r#176 struct_member/0.0/0 -> attribute struct_member/0.0/0 ·
r#177 struct_body_decl/0.2 -> struct_body_decl/0.2/0 ·
r#178 function_header/0.3 -> param_list ·
r#179 param/0.0 -> param/0.0/0 ·
r#180 compound_statement/0.2 -> compound_statement/0.2/0 ·
r#181 statement -> ';' ·
r#182 statement -> if_statement ·
r#183 statement -> switch_statement ·
r#184 statement -> loop_statement ·
r#185 statement -> for_statement ·
r#186 statement -> while_statement ·
r#187 statement -> compound_statement ·
r#188 variable_or_value_statement -> variable_decl ·
r#189 break_statement -> 'break' ·
r#190 continue_statement -> 'continue' ·
r#191 variable_updating_statement -> assignment_statement ·
r#192 variable_updating_statement -> increment_statement ·
r#193 variable_updating_statement -> decrement_statement ·
r#194 if_statement/0.0 -> if_statement/0.0/0 ·
r#195 switch_statement/0.0 -> switch_statement/0.0/0 ·
r#196 loop_statement/0.0 -> loop_statement/0.0/0 ·
r#197 for_statement/0.0 -> for_statement/0.0/0 ·
r#198 while_statement/0.0 -> while_statement/0.0/0 ·
r#199 template_arg_expression -> relational_expression ·
r#200 template_arg_expression -> bitwise_expression ·
r#201 expression_comma_list/0.1 -> expression_comma_list/0.1/0 ·
r#202 argument_expression_list -> '(' argument_expression_list/0.1 ')' ·
r#203 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 ·
r#204 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier ·
r#205 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 ·
r#206 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier ·
r#207 workgroup_size_attr/0.4 -> ',' ·
r#208 size_attr/0.4 -> ',' ·
r#209 location_attr/0.4 -> ',' ·
r#210 interpolate_attr/0.4 -> ',' ·
r#211 id_attr/0.4 -> ',' ·
r#212 group_attr/0.4 -> ',' ·
r#213 builtin_attr/0.4 -> ',' ·
r#214 blend_src_attr/0.4 -> ',' ·
r#215 binding_attr/0.4 -> ',' ·
r#216 align_attr/0.4 -> ',' ·
r#217 align_attr -> '@' 'align' '(' expression align_attr/0.4 ')' ·
r#218 binding_attr -> '@' 'binding' '(' expression binding_attr/0.4 ')' ·
r#219 blend_src_attr -> '@' 'blend_src' '(' expression blend_src_attr/0.4 ')' ·
r#220 builtin_attr -> '@' 'builtin' '(' builtin_value_name builtin_attr/0.4 ')' ·
r#221 group_attr -> '@' 'group' '(' expression group_attr/0.4 ')' ·
r#222 id_attr -> '@' 'id' '(' expression id_attr/0.4 ')' ·
r#223 interpolate_sampling_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#224 interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name interpolate_attr/0.4 ')' ·
r#225 location_attr -> '@' 'location' '(' expression location_attr/0.4 ')' ·
r#226 size_attr -> '@' 'size' '(' expression size_attr/0.4 ')' ·
r#227 workgroup_size_attr -> '@' 'workgroup_size' '(' expression workgroup_size_attr/0.4 ')' ·
r#228 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 ·
r#229 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier ·
r#230 expression_comma_list/0.1/0/0.0 -> ',' expression ·
r#231 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ·
r#232 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 ·
r#233 expression_comma_list/0.2 -> ',' ·
r#234 template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 ·
r#235 template_list -> _template_args_start template_arg_comma_list _template_args_end ·
r#236 _template_args_end -> /\u200B_template_args_end/ ·
r#237 lhs_expression -> '&' lhs_expression ·
r#238 lhs_expression -> '*' lhs_expression ·
r#239 lhs_expression -> core_lhs_expression lhs_expression/0.1 ·
r#240 lhs_expression/0.1 -> component_or_swizzle_specifier ·
r#241 if_statement/0.0/0 -> attribute if_statement/0.0/0 ·
r#242 switch_statement/0.0/0 -> attribute switch_statement/0.0/0 ·
r#243 loop_statement/0.0/0 -> attribute loop_statement/0.0/0 ·
r#244 for_statement/0.0/0 -> attribute for_statement/0.0/0 ·
r#245 while_statement/0.0/0 -> attribute while_statement/0.0/0 ·
r#246 increment_statement -> lhs_expression '++' ·
r#247 decrement_statement -> lhs_expression '--' ·
r#248 assignment_statement/0.1 -> '=' ·
r#249 assignment_statement/0.1 -> compound_assignment_operator ·
r#250 compound_assignment_operator -> '+=' ·
r#251 compound_assignment_operator -> '-=' ·
r#252 compound_assignment_operator -> '*=' ·
r#253 compound_assignment_operator -> '/=' ·
r#254 compound_assignment_operator -> '%=' ·
r#255 compound_assignment_operator -> '&=' ·
r#256 compound_assignment_operator -> '|=' ·
r#257 compound_assignment_operator -> '^=' ·
r#258 compound_assignment_operator -> _shift_right_assign ·
r#259 compound_assignment_operator -> _shift_left_assign ·
r#260 _shift_right_assign -> /\u200B_shift_right_assign/ ·
r#261 _shift_left_assign -> /\u200B_shift_left_assign/ ·
r#262 core_lhs_expression -> ident _disambiguate_template ·
r#263 func_call_statement -> template_elaborated_ident argument_expression_list ·
r#264 return_statement -> 'return' return_statement/0.1 ·
r#265 return_statement/0.1 -> expression ·
r#266 statement -> const_assert_statement ';' ·
r#267 statement -> variable_updating_statement ';' ·
r#268 statement -> 'discard' ';' ·
r#269 statement -> continue_statement ';' ·
r#270 statement -> break_statement ';' ·
r#271 statement -> variable_or_value_statement ';' ·
r#272 statement -> func_call_statement ';' ·
r#273 statement -> return_statement ';' ·
r#274 compound_statement/0.2/0 -> statement compound_statement/0.2/0 ·
r#275 compound_statement -> compound_statement/0.0 '{' compound_statement/0.2 '}' ·
r#276 param/0.0/0 -> attribute param/0.0/0 ·
r#277 param_list/0.1 -> param_list/0.1/0 ·
r#278 struct_body_decl/0.2/0/0.0 -> ',' struct_member ·
r#279 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ·
r#280 struct_body_decl/0.3 -> ',' ·
r#281 type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 ·
r#282 diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name diagnostic_control/0.4 ')' ·
r#283 diagnostic_rule_name -> diagnostic_name_token '.' diagnostic_name_token ·
r#284 struct_member -> struct_member/0.0 member_ident ':' type_specifier ·
r#285 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ·
r#286 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ·
r#287 param_list/0.1/0/0.0 -> ',' param ·
r#288 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 ·
r#289 param_list -> param param_list/0.1 param_list/0.2 ·
r#290 param_list/0.2 -> ',' ·
r#291 if_statement/0.2 -> if_statement/0.2/0 ·
r#292 loop_statement/0.2 -> loop_statement/0.2/0 ·
r#293 variable_or_value_statement -> variable_decl '=' expression ·
r#294 assignment_statement -> lhs_expression assignment_statement/0.1 expression ·
r#295 assignment_statement -> '_' '=' expression ·
r#296 core_lhs_expression -> '(' lhs_expression ')' ·
r#297 template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression ·
r#298 template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ·
r#299 template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ·
r#300 template_arg_comma_list/0.2 -> ',' ·
r#301 template_arg_expression -> short_circuit_or_expression '||' relational_expression ·
r#302 template_arg_expression -> short_circuit_and_expression '&&' relational_expression ·
r#303 workgroup_size_attr/1.6 -> ',' ·
r#304 interpolate_attr/1.6 -> ',' ·
r#305 interpolate_attr -> '@' 'interpolate' '(' interpolate_type_name ',' interpolate_sampling_name interpolate_attr/1.6 ')' ·
r#306 workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression workgroup_size_attr/1.6 ')' ·
r#307 variable_or_value_statement -> 'const' optionally_typed_ident '=' expression ·
r#308 variable_or_value_statement -> 'let' optionally_typed_ident '=' expression ·
r#309 while_statement -> while_statement/0.0 'while' expression compound_statement ·
r#310 for_header/0.0 -> for_init ·
r#311 for_init -> variable_or_value_statement ·
r#312 for_init -> variable_updating_statement ·
r#313 for_init -> func_call_statement ·
r#314 loop_statement/0.2/0 -> attribute loop_statement/0.2/0 ·
r#315 switch_statement -> switch_statement/0.0 'switch' expression switch_body ·
r#316 switch_body/0.0 -> switch_body/0.0/0 ·
r#317 if_statement/0.2/0 -> else_if_clause if_statement/0.2/0 ·
r#318 if_statement -> if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 ·
r#319 if_statement/0.3 -> else_clause ·
r#320 if_clause -> 'if' expression compound_statement ·
r#321 param -> param/0.0 ident ':' type_specifier ·
r#322 function_header/0.5/0.1 -> function_header/0.5/0.1/0 ·
r#323 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 ·
r#324 function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident ·
r#325 else_clause -> 'else' compound_statement ·
r#326 switch_body/0.0/0 -> attribute switch_body/0.0/0 ·
r#327 loop_statement/0.4 -> loop_statement/0.4/0 ·
r#328 workgroup_size_attr/2.8 -> ',' ·
r#329 workgroup_size_attr -> '@' 'workgroup_size' '(' expression ',' expression ',' expression workgroup_size_attr/2.8 ')' ·
r#330 for_statement -> for_statement/0.0 'for' '(' for_header ')' compound_statement ·
r#331 for_header/0.2 -> expression ·
r#332 loop_statement/0.4/0 -> statement loop_statement/0.4/0 ·
r#333 loop_statement/0.5 -> continuing_statement ·
r#334 switch_body/0.2 -> switch_body/0.2/0 ·
r#335 switch_clause -> case_clause ·
r#336 switch_clause -> default_alone_clause ·
r#337 else_if_clause -> 'else' 'if' expression compound_statement ·
r#338 default_alone_clause/0.1 -> ':' ·
r#339 case_selector -> 'default' ·
r#340 case_selector -> expression ·
r#341 switch_body/0.2/0 -> switch_clause switch_body/0.2/0 ·
r#342 switch_body -> switch_body/0.0 '{' switch_body/0.2 '}' ·
r#343 continuing_statement -> 'continuing' continuing_compound_statement ·
r#344 continuing_compound_statement/0.0 -> continuing_compound_statement/0.0/0 ·
r#345 loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' ·
r#346 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ·
r#347 for_header/0.4 -> for_update ·
r#348 for_update -> variable_updating_statement ·
r#349 for_update -> func_call_statement ·
r#350 continuing_compound_statement/0.0/0 -> attribute continuing_compound_statement/0.0/0 ·
r#351 case_selectors/0.1 -> case_selectors/0.1/0 ·
r#352 case_clause/0.2 -> ':' ·
r#353 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement ·
r#354 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement ·
r#355 case_selectors/0.1/0/0.0 -> ',' case_selector ·
r#356 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 ·
r#357 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 ·
r#358 case_selectors/0.2 -> ',' ·
r#359 continuing_compound_statement/0.2 -> continuing_compound_statement/0.2/0 ·
r#360 continuing_compound_statement/0.2/0 -> statement continuing_compound_statement/0.2/0 ·
r#361 continuing_compound_statement/0.3 -> break_if_statement ·
r#362 continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' ·
r#363 break_if_statement -> 'break' 'if' expression ';' ·

=Action:
[#0 'diagnostic']: s#8
[#0 'enable']: s#9
[#0 'requires']: s#10
[#1 EndOfText]: acc
[#2 ';']: s#23
[#2 '@']: s#41
[#2 'alias']: s#33
[#2 'const']: s#31
[#2 'const_assert']: s#36
[#2 'struct']: s#34
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'diagnostic']: s#8
[#4 'enable']: s#9
[#4 'requires']: s#10
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'alias']: r#1
[#5 'const']: r#1
[#5 'const_assert']: r#1
[#5 'diagnostic']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'requires']: r#1
[#5 'struct']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'alias']: r#2
[#6 'const']: r#2
[#6 'const_assert']: r#2
[#6 'diagnostic']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'requires']: r#2
[#6 'struct']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 ';']: r#3
[#7 '@']: r#3
[#7 'alias']: r#3
[#7 'const']: r#3
[#7 'const_assert']: r#3
[#7 'diagnostic']: r#3
[#7 'enable']: r#3
[#7 'fn']: r#3
[#7 'override']: r#3
[#7 'requires']: r#3
[#7 'struct']: r#3
[#7 'var']: r#3
[#7 EndOfText]: r#3
[#8 '(']: s#18
[#9 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#16
[#10 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#13
[#11 ';']: s#153
[#12 ',']: s#152
[#13 ',']: r#4
[#13 ';']: r#4
[#14 ';']: s#148
[#15 ',']: s#147
[#16 ',']: r#5
[#16 ';']: r#5
[#17 ';']: s#143
[#18 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#142
[#19 ';']: r#6
[#19 '@']: r#6
[#19 'alias']: r#6
[#19 'const']: r#6
[#19 'const_assert']: r#6
[#19 'fn']: r#6
[#19 'override']: r#6
[#19 'struct']: r#6
[#19 'var']: r#6
[#19 EndOfText]: r#6
[#20 EndOfText]: r#7
[#21 EndOfText]: r#8
[#22 ';']: s#23
[#22 '@']: s#41
[#22 'alias']: s#33
[#22 'const']: s#31
[#22 'const_assert']: s#36
[#22 'struct']: s#34
[#23 ';']: r#9
[#23 '@']: r#9
[#23 'alias']: r#9
[#23 'const']: r#9
[#23 'const_assert']: r#9
[#23 'fn']: r#9
[#23 'override']: r#9
[#23 'struct']: r#9
[#23 'var']: r#9
[#23 EndOfText]: r#9
[#24 ';']: s#139
[#25 ';']: s#138
[#26 ';']: s#137
[#27 ';']: r#10
[#27 '@']: r#10
[#27 'alias']: r#10
[#27 'const']: r#10
[#27 'const_assert']: r#10
[#27 'fn']: r#10
[#27 'override']: r#10
[#27 'struct']: r#10
[#27 'var']: r#10
[#27 EndOfText]: r#10
[#28 ';']: r#11
[#28 '@']: r#11
[#28 'alias']: r#11
[#28 'const']: r#11
[#28 'const_assert']: r#11
[#28 'fn']: r#11
[#28 'override']: r#11
[#28 'struct']: r#11
[#28 'var']: r#11
[#28 EndOfText]: r#11
[#29 ';']: s#136
[#30 'var']: s#135
[#31 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#32 'override']: s#131
[#33 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#34 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#35 'fn']: s#128
[#36 '!']: s#95
[#36 '&']: s#98
[#36 '(']: s#108
[#36 '*']: s#97
[#36 '-']: s#94
[#36 'false']: s#115
[#36 'true']: s#114
[#36 '~']: s#96
[#36 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#36 /0[fh]/]: s#119
[#36 /0[iu]?/]: s#116
[#36 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#36 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#36 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#36 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#36 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#36 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#36 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#36 /[1-9][0-9]*[fh]/]: s#120
[#36 /[1-9][0-9]*[iu]?/]: s#117
[#37 'var']: r#12
[#38 'override']: r#13
[#39 'fn']: r#14
[#40 '@']: s#41
[#41 'align']: s#60
[#41 'binding']: s#61
[#41 'blend_src']: s#62
[#41 'builtin']: s#63
[#41 'compute']: s#76
[#41 'const']: s#64
[#41 'diagnostic']: s#65
[#41 'fragment']: s#75
[#41 'group']: s#66
[#41 'id']: s#67
[#41 'interpolate']: s#68
[#41 'invariant']: s#69
[#41 'location']: s#70
[#41 'must_use']: s#71
[#41 'size']: s#72
[#41 'vertex']: s#74
[#41 'workgroup_size']: s#73
[#41 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#42 '@']: r#15
[#42 'fn']: r#15
[#42 'for']: r#15
[#42 'if']: r#15
[#42 'loop']: r#15
[#42 'override']: r#15
[#42 'switch']: r#15
[#42 'var']: r#15
[#42 'while']: r#15
[#42 '{']: r#15
[#42 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#43 '@']: r#16
[#43 'fn']: r#16
[#43 'for']: r#16
[#43 'if']: r#16
[#43 'loop']: r#16
[#43 'override']: r#16
[#43 'switch']: r#16
[#43 'var']: r#16
[#43 'while']: r#16
[#43 '{']: r#16
[#43 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#16
[#44 '@']: r#17
[#44 'fn']: r#17
[#44 'for']: r#17
[#44 'if']: r#17
[#44 'loop']: r#17
[#44 'override']: r#17
[#44 'switch']: r#17
[#44 'var']: r#17
[#44 'while']: r#17
[#44 '{']: r#17
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#17
[#45 '@']: r#18
[#45 'fn']: r#18
[#45 'for']: r#18
[#45 'if']: r#18
[#45 'loop']: r#18
[#45 'override']: r#18
[#45 'switch']: r#18
[#45 'var']: r#18
[#45 'while']: r#18
[#45 '{']: r#18
[#45 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#18
[#46 '@']: r#19
[#46 'fn']: r#19
[#46 'for']: r#19
[#46 'if']: r#19
[#46 'loop']: r#19
[#46 'override']: r#19
[#46 'switch']: r#19
[#46 'var']: r#19
[#46 'while']: r#19
[#46 '{']: r#19
[#46 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#19
[#47 '@']: r#20
[#47 'fn']: r#20
[#47 'for']: r#20
[#47 'if']: r#20
[#47 'loop']: r#20
[#47 'override']: r#20
[#47 'switch']: r#20
[#47 'var']: r#20
[#47 'while']: r#20
[#47 '{']: r#20
[#47 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#20
[#48 '@']: r#21
[#48 'fn']: r#21
[#48 'for']: r#21
[#48 'if']: r#21
[#48 'loop']: r#21
[#48 'override']: r#21
[#48 'switch']: r#21
[#48 'var']: r#21
[#48 'while']: r#21
[#48 '{']: r#21
[#48 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#21
[#49 '@']: r#22
[#49 'fn']: r#22
[#49 'for']: r#22
[#49 'if']: r#22
[#49 'loop']: r#22
[#49 'override']: r#22
[#49 'switch']: r#22
[#49 'var']: r#22
[#49 'while']: r#22
[#49 '{']: r#22
[#49 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#22
[#50 '@']: r#23
[#50 'fn']: r#23
[#50 'for']: r#23
[#50 'if']: r#23
[#50 'loop']: r#23
[#50 'override']: r#23
[#50 'switch']: r#23
[#50 'var']: r#23
[#50 'while']: r#23
[#50 '{']: r#23
[#50 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#23
[#51 '@']: r#24
[#51 'fn']: r#24
[#51 'for']: r#24
[#51 'if']: r#24
[#51 'loop']: r#24
[#51 'override']: r#24
[#51 'switch']: r#24
[#51 'var']: r#24
[#51 'while']: r#24
[#51 '{']: r#24
[#51 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#24
[#52 '@']: r#25
[#52 'fn']: r#25
[#52 'for']: r#25
[#52 'if']: r#25
[#52 'loop']: r#25
[#52 'override']: r#25
[#52 'switch']: r#25
[#52 'var']: r#25
[#52 'while']: r#25
[#52 '{']: r#25
[#52 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#25
[#53 '@']: r#26
[#53 'fn']: r#26
[#53 'for']: r#26
[#53 'if']: r#26
[#53 'loop']: r#26
[#53 'override']: r#26
[#53 'switch']: r#26
[#53 'var']: r#26
[#53 'while']: r#26
[#53 '{']: r#26
[#53 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#26
[#54 '@']: r#27
[#54 'fn']: r#27
[#54 'for']: r#27
[#54 'if']: r#27
[#54 'loop']: r#27
[#54 'override']: r#27
[#54 'switch']: r#27
[#54 'var']: r#27
[#54 'while']: r#27
[#54 '{']: r#27
[#54 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#27
[#55 '@']: r#28
[#55 'fn']: r#28
[#55 'for']: r#28
[#55 'if']: r#28
[#55 'loop']: r#28
[#55 'override']: r#28
[#55 'switch']: r#28
[#55 'var']: r#28
[#55 'while']: r#28
[#55 '{']: r#28
[#55 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#28
[#56 '@']: r#29
[#56 'fn']: r#29
[#56 'for']: r#29
[#56 'if']: r#29
[#56 'loop']: r#29
[#56 'override']: r#29
[#56 'switch']: r#29
[#56 'var']: r#29
[#56 'while']: r#29
[#56 '{']: r#29
[#56 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#29
[#57 '@']: r#30
[#57 'fn']: r#30
[#57 'for']: r#30
[#57 'if']: r#30
[#57 'loop']: r#30
[#57 'override']: r#30
[#57 'switch']: r#30
[#57 'var']: r#30
[#57 'while']: r#30
[#57 '{']: r#30
[#57 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#30
[#58 '@']: r#31
[#58 'fn']: r#31
[#58 'for']: r#31
[#58 'if']: r#31
[#58 'loop']: r#31
[#58 'override']: r#31
[#58 'switch']: r#31
[#58 'var']: r#31
[#58 'while']: r#31
[#58 '{']: r#31
[#58 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#31
[#59 '(']: s#183
[#60 '(']: s#229
[#61 '(']: s#228
[#62 '(']: s#227
[#63 '(']: s#226
[#64 '@']: r#32
[#64 'fn']: r#32
[#64 'for']: r#32
[#64 'if']: r#32
[#64 'loop']: r#32
[#64 'override']: r#32
[#64 'switch']: r#32
[#64 'var']: r#32
[#64 'while']: r#32
[#64 '{']: r#32
[#64 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#32
[#65 '(']: s#18
[#66 '(']: s#224
[#67 '(']: s#223
[#68 '(']: s#222
[#69 '@']: r#33
[#69 'fn']: r#33
[#69 'for']: r#33
[#69 'if']: r#33
[#69 'loop']: r#33
[#69 'override']: r#33
[#69 'switch']: r#33
[#69 'var']: r#33
[#69 'while']: r#33
[#69 '{']: r#33
[#69 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#33
[#70 '(']: s#221
[#71 '@']: r#34
[#71 'fn']: r#34
[#71 'for']: r#34
[#71 'if']: r#34
[#71 'loop']: r#34
[#71 'override']: r#34
[#71 'switch']: r#34
[#71 'var']: r#34
[#71 'while']: r#34
[#71 '{']: r#34
[#71 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#34
[#72 '(']: s#220
[#73 '(']: s#219
[#74 '@']: r#35
[#74 'fn']: r#35
[#74 'for']: r#35
[#74 'if']: r#35
[#74 'loop']: r#35
[#74 'override']: r#35
[#74 'switch']: r#35
[#74 'var']: r#35
[#74 'while']: r#35
[#74 '{']: r#35
[#74 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#35
[#75 '@']: r#36
[#75 'fn']: r#36
[#75 'for']: r#36
[#75 'if']: r#36
[#75 'loop']: r#36
[#75 'override']: r#36
[#75 'switch']: r#36
[#75 'var']: r#36
[#75 'while']: r#36
[#75 '{']: r#36
[#75 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#36
[#76 '@']: r#37
[#76 'fn']: r#37
[#76 'for']: r#37
[#76 'if']: r#37
[#76 'loop']: r#37
[#76 'override']: r#37
[#76 'switch']: r#37
[#76 'var']: r#37
[#76 'while']: r#37
[#76 '{']: r#37
[#76 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#37
[#77 '(']: r#38
[#77 '@']: r#38
[#77 'fn']: r#38
[#77 'for']: r#38
[#77 'if']: r#38
[#77 'loop']: r#38
[#77 'override']: r#38
[#77 'switch']: r#38
[#77 'var']: r#38
[#77 'while']: r#38
[#77 '{']: r#38
[#77 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#38
[#77 /\u200B_disambiguate_template/]: r#38
[#78 'var']: r#39
[#79 'override']: r#40
[#80 'fn']: r#41
[#81 ';']: r#42
[#82 '&&']: r#45
[#82 ')']: r#43
[#82 ',']: r#43
[#82 ':']: r#43
[#82 ';']: r#43
[#82 '@']: r#43
[#82 ']']: r#43
[#82 '{']: r#43
[#82 '||']: r#44
[#83 '||']: s#218
[#84 '&&']: s#217
[#85 ')']: r#46
[#85 ',']: r#46
[#85 ':']: r#46
[#85 ';']: r#46
[#85 '@']: r#46
[#85 ']']: r#46
[#85 '{']: r#46
[#86 '!=']: s#212
[#86 '&&']: r#47
[#86 ')']: r#47
[#86 ',']: r#47
[#86 ':']: r#47
[#86 ';']: r#47
[#86 '==']: s#211
[#86 '@']: r#47
[#86 ']']: r#47
[#86 '{']: r#47
[#86 '||']: r#47
[#86 /\u200B_greater_than/]: s#214
[#86 /\u200B_greater_than_equal/]: s#216
[#86 /\u200B_less_than/]: s#213
[#86 /\u200B_less_than_equal/]: s#215
[#86 /\u200B_template_args_end/]: r#47
[#87 '&']: s#206
[#88 '|']: s#205
[#89 '^']: s#204
[#90 '!=']: r#48
[#90 '&&']: r#48
[#90 ')']: r#48
[#90 '+']: s#202
[#90 ',']: r#48
[#90 '-']: s#203
[#90 ':']: r#48
[#90 ';']: r#48
[#90 '==']: r#48
[#90 '@']: r#48
[#90 ']']: r#48
[#90 '{']: r#48
[#90 '||']: r#48
[#90 /\u200B_greater_than/]: r#48
[#90 /\u200B_greater_than_equal/]: r#48
[#90 /\u200B_less_than/]: r#48
[#90 /\u200B_less_than_equal/]: r#48
[#90 /\u200B_template_args_end/]: r#48
[#91 '!=']: r#52
[#91 '%']: r#52
[#91 '&&']: r#52
[#91 '&']: r#49
[#91 ')']: r#52
[#91 '*']: r#52
[#91 '+']: r#52
[#91 ',']: r#52
[#91 '-']: r#52
[#91 '/']: r#52
[#91 ':']: r#52
[#91 ';']: r#52
[#91 '==']: r#52
[#91 '@']: r#52
[#91 ']']: r#52
[#91 '^']: r#51
[#91 '{']: r#52
[#91 '|']: r#50
[#91 '||']: r#52
[#91 /\u200B_greater_than/]: r#52
[#91 /\u200B_greater_than_equal/]: r#52
[#91 /\u200B_less_than/]: r#52
[#91 /\u200B_less_than_equal/]: r#52
[#91 /\u200B_shift_left/]: s#199
[#91 /\u200B_shift_right/]: s#200
[#91 /\u200B_template_args_end/]: r#52
[#92 '!=']: r#53
[#92 '%']: s#196
[#92 '&&']: r#53
[#92 ')']: r#53
[#92 '*']: s#194
[#92 '+']: r#53
[#92 ',']: r#53
[#92 '-']: r#53
[#92 '/']: s#195
[#92 ':']: r#53
[#92 ';']: r#53
[#92 '==']: r#53
[#92 '@']: r#53
[#92 ']']: r#53
[#92 '{']: r#53
[#92 '||']: r#53
[#92 /\u200B_greater_than/]: r#53
[#92 /\u200B_greater_than_equal/]: r#53
[#92 /\u200B_less_than/]: r#53
[#92 /\u200B_less_than_equal/]: r#53
[#92 /\u200B_template_args_end/]: r#53
[#93 '!=']: r#54
[#93 '%']: r#54
[#93 '&&']: r#54
[#93 '&']: r#54
[#93 ')']: r#54
[#93 '*']: r#54
[#93 '+']: r#54
[#93 ',']: r#54
[#93 '-']: r#54
[#93 '/']: r#54
[#93 ':']: r#54
[#93 ';']: r#54
[#93 '==']: r#54
[#93 '@']: r#54
[#93 ']']: r#54
[#93 '^']: r#54
[#93 '{']: r#54
[#93 '|']: r#54
[#93 '||']: r#54
[#93 /\u200B_greater_than/]: r#54
[#93 /\u200B_greater_than_equal/]: r#54
[#93 /\u200B_less_than/]: r#54
[#93 /\u200B_less_than_equal/]: r#54
[#93 /\u200B_shift_left/]: r#54
[#93 /\u200B_shift_right/]: r#54
[#93 /\u200B_template_args_end/]: r#54
[#94 '!']: s#95
[#94 '&']: s#98
[#94 '(']: s#108
[#94 '*']: s#97
[#94 '-']: s#94
[#94 'false']: s#115
[#94 'true']: s#114
[#94 '~']: s#96
[#94 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#94 /0[fh]/]: s#119
[#94 /0[iu]?/]: s#116
[#94 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#94 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#94 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#94 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#94 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#94 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#94 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#94 /[1-9][0-9]*[fh]/]: s#120
[#94 /[1-9][0-9]*[iu]?/]: s#117
[#95 '!']: s#95
[#95 '&']: s#98
[#95 '(']: s#108
[#95 '*']: s#97
[#95 '-']: s#94
[#95 'false']: s#115
[#95 'true']: s#114
[#95 '~']: s#96
[#95 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#95 /0[fh]/]: s#119
[#95 /0[iu]?/]: s#116
[#95 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#95 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#95 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#95 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#95 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#95 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#95 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#95 /[1-9][0-9]*[fh]/]: s#120
[#95 /[1-9][0-9]*[iu]?/]: s#117
[#96 '!']: s#95
[#96 '&']: s#98
[#96 '(']: s#108
[#96 '*']: s#97
[#96 '-']: s#94
[#96 'false']: s#115
[#96 'true']: s#114
[#96 '~']: s#96
[#96 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#96 /0[fh]/]: s#119
[#96 /0[iu]?/]: s#116
[#96 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#96 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#96 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#96 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#96 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#96 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#96 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#96 /[1-9][0-9]*[fh]/]: s#120
[#96 /[1-9][0-9]*[iu]?/]: s#117
[#97 '!']: s#95
[#97 '&']: s#98
[#97 '(']: s#108
[#97 '*']: s#97
[#97 '-']: s#94
[#97 'false']: s#115
[#97 'true']: s#114
[#97 '~']: s#96
[#97 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#97 /0[fh]/]: s#119
[#97 /0[iu]?/]: s#116
[#97 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#97 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#97 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#97 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#97 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#97 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#97 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#97 /[1-9][0-9]*[fh]/]: s#120
[#97 /[1-9][0-9]*[iu]?/]: s#117
[#98 '!']: s#95
[#98 '&']: s#98
[#98 '(']: s#108
[#98 '*']: s#97
[#98 '-']: s#94
[#98 'false']: s#115
[#98 'true']: s#114
[#98 '~']: s#96
[#98 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#98 /0[fh]/]: s#119
[#98 /0[iu]?/]: s#116
[#98 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#98 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#98 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#98 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#98 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#98 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#98 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#98 /[1-9][0-9]*[fh]/]: s#120
[#98 /[1-9][0-9]*[iu]?/]: s#117
[#99 '.']: s#187
[#99 '[']: s#186
[#100 '!=']: r#55
[#100 '%']: r#55
[#100 '&&']: r#55
[#100 '&']: r#55
[#100 '(']: s#183
[#100 ')']: r#55
[#100 '*']: r#55
[#100 '+']: r#55
[#100 ',']: r#55
[#100 '-']: r#55
[#100 '.']: r#55
[#100 '/']: r#55
[#100 ':']: r#55
[#100 ';']: r#55
[#100 '==']: r#55
[#100 '@']: r#55
[#100 '[']: r#55
[#100 ']']: r#55
[#100 '^']: r#55
[#100 '{']: r#55
[#100 '|']: r#55
[#100 '||']: r#55
[#100 /\u200B_greater_than/]: r#55
[#100 /\u200B_greater_than_equal/]: r#55
[#100 /\u200B_less_than/]: r#55
[#100 /\u200B_less_than_equal/]: r#55
[#100 /\u200B_shift_left/]: r#55
[#100 /\u200B_shift_right/]: r#55
[#100 /\u200B_template_args_end/]: r#55
[#101 '!=']: r#56
[#101 '%']: r#56
[#101 '&&']: r#56
[#101 '&']: r#56
[#101 ')']: r#56
[#101 '*']: r#56
[#101 '+']: r#56
[#101 ',']: r#56
[#101 '-']: r#56
[#101 '.']: r#56
[#101 '/']: r#56
[#101 ':']: r#56
[#101 ';']: r#56
[#101 '==']: r#56
[#101 '@']: r#56
[#101 '[']: r#56
[#101 ']']: r#56
[#101 '^']: r#56
[#101 '{']: r#56
[#101 '|']: r#56
[#101 '||']: r#56
[#101 /\u200B_greater_than/]: r#56
[#101 /\u200B_greater_than_equal/]: r#56
[#101 /\u200B_less_than/]: r#56
[#101 /\u200B_less_than_equal/]: r#56
[#101 /\u200B_shift_left/]: r#56
[#101 /\u200B_shift_right/]: r#56
[#101 /\u200B_template_args_end/]: r#56
[#102 '!=']: r#57
[#102 '%']: r#57
[#102 '&&']: r#57
[#102 '&']: r#57
[#102 ')']: r#57
[#102 '*']: r#57
[#102 '+']: r#57
[#102 ',']: r#57
[#102 '-']: r#57
[#102 '.']: r#57
[#102 '/']: r#57
[#102 ':']: r#57
[#102 ';']: r#57
[#102 '==']: r#57
[#102 '@']: r#57
[#102 '[']: r#57
[#102 ']']: r#57
[#102 '^']: r#57
[#102 '{']: r#57
[#102 '|']: r#57
[#102 '||']: r#57
[#102 /\u200B_greater_than/]: r#57
[#102 /\u200B_greater_than_equal/]: r#57
[#102 /\u200B_less_than/]: r#57
[#102 /\u200B_less_than_equal/]: r#57
[#102 /\u200B_shift_left/]: r#57
[#102 /\u200B_shift_right/]: r#57
[#102 /\u200B_template_args_end/]: r#57
[#103 '!=']: r#58
[#103 '%']: r#58
[#103 '&&']: r#58
[#103 '&']: r#58
[#103 ')']: r#58
[#103 '*']: r#58
[#103 '+']: r#58
[#103 ',']: r#58
[#103 '-']: r#58
[#103 '.']: r#58
[#103 '/']: r#58
[#103 ':']: r#58
[#103 ';']: r#58
[#103 '==']: r#58
[#103 '@']: r#58
[#103 '[']: r#58
[#103 ']']: r#58
[#103 '^']: r#58
[#103 '{']: r#58
[#103 '|']: r#58
[#103 '||']: r#58
[#103 /\u200B_greater_than/]: r#58
[#103 /\u200B_greater_than_equal/]: r#58
[#103 /\u200B_less_than/]: r#58
[#103 /\u200B_less_than_equal/]: r#58
[#103 /\u200B_shift_left/]: r#58
[#103 /\u200B_shift_right/]: r#58
[#103 /\u200B_template_args_end/]: r#58
[#104 /\u200B_disambiguate_template/]: s#164
[#105 '!=']: r#59
[#105 '%']: r#59
[#105 '&&']: r#59
[#105 '&']: r#59
[#105 ')']: r#59
[#105 '*']: r#59
[#105 '+']: r#59
[#105 ',']: r#59
[#105 '-']: r#59
[#105 '.']: r#59
[#105 '/']: r#59
[#105 ':']: r#59
[#105 ';']: r#59
[#105 '==']: r#59
[#105 '@']: r#59
[#105 '[']: r#59
[#105 ']']: r#59
[#105 '^']: r#59
[#105 '{']: r#59
[#105 '|']: r#59
[#105 '||']: r#59
[#105 /\u200B_greater_than/]: r#59
[#105 /\u200B_greater_than_equal/]: r#59
[#105 /\u200B_less_than/]: r#59
[#105 /\u200B_less_than_equal/]: r#59
[#105 /\u200B_shift_left/]: r#59
[#105 /\u200B_shift_right/]: r#59
[#105 /\u200B_template_args_end/]: r#59
[#106 '!=']: r#60
[#106 '%']: r#60
[#106 '&&']: r#60
[#106 '&']: r#60
[#106 ')']: r#60
[#106 '*']: r#60
[#106 '+']: r#60
[#106 ',']: r#60
[#106 '-']: r#60
[#106 '.']: r#60
[#106 '/']: r#60
[#106 ':']: r#60
[#106 ';']: r#60
[#106 '==']: r#60
[#106 '@']: r#60
[#106 '[']: r#60
[#106 ']']: r#60
[#106 '^']: r#60
[#106 '{']: r#60
[#106 '|']: r#60
[#106 '||']: r#60
[#106 /\u200B_greater_than/]: r#60
[#106 /\u200B_greater_than_equal/]: r#60
[#106 /\u200B_less_than/]: r#60
[#106 /\u200B_less_than_equal/]: r#60
[#106 /\u200B_shift_left/]: r#60
[#106 /\u200B_shift_right/]: r#60
[#106 /\u200B_template_args_end/]: r#60
[#107 '!=']: r#61
[#107 '%']: r#61
[#107 '&&']: r#61
[#107 '&']: r#61
[#107 ')']: r#61
[#107 '*']: r#61
[#107 '+']: r#61
[#107 ',']: r#61
[#107 '-']: r#61
[#107 '.']: r#61
[#107 '/']: r#61
[#107 ':']: r#61
[#107 ';']: r#61
[#107 '==']: r#61
[#107 '@']: r#61
[#107 '[']: r#61
[#107 ']']: r#61
[#107 '^']: r#61
[#107 '{']: r#61
[#107 '|']: r#61
[#107 '||']: r#61
[#107 /\u200B_greater_than/]: r#61
[#107 /\u200B_greater_than_equal/]: r#61
[#107 /\u200B_less_than/]: r#61
[#107 /\u200B_less_than_equal/]: r#61
[#107 /\u200B_shift_left/]: r#61
[#107 /\u200B_shift_right/]: r#61
[#107 /\u200B_template_args_end/]: r#61
[#108 '!']: s#95
[#108 '&']: s#98
[#108 '(']: s#108
[#108 '*']: s#97
[#108 '-']: s#94
[#108 'false']: s#115
[#108 'true']: s#114
[#108 '~']: s#96
[#108 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#108 /0[fh]/]: s#119
[#108 /0[iu]?/]: s#116
[#108 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#108 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#108 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#108 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#108 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#108 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#108 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#108 /[1-9][0-9]*[fh]/]: s#120
[#108 /[1-9][0-9]*[iu]?/]: s#117
[#109 /\u200B_disambiguate_template/]: s#164
[#110 '!=']: r#62
[#110 '%']: r#62
[#110 '&&']: r#62
[#110 '&']: r#62
[#110 ')']: r#62
[#110 '*']: r#62
[#110 '+']: r#62
[#110 ',']: r#62
[#110 '-']: r#62
[#110 '.']: r#62
[#110 '/']: r#62
[#110 ':']: r#62
[#110 ';']: r#62
[#110 '==']: r#62
[#110 '@']: r#62
[#110 '[']: r#62
[#110 ']']: r#62
[#110 '^']: r#62
[#110 '{']: r#62
[#110 '|']: r#62
[#110 '||']: r#62
[#110 /\u200B_greater_than/]: r#62
[#110 /\u200B_greater_than_equal/]: r#62
[#110 /\u200B_less_than/]: r#62
[#110 /\u200B_less_than_equal/]: r#62
[#110 /\u200B_shift_left/]: r#62
[#110 /\u200B_shift_right/]: r#62
[#110 /\u200B_template_args_end/]: r#62
[#111 '!=']: r#63
[#111 '%']: r#63
[#111 '&&']: r#63
[#111 '&']: r#63
[#111 ')']: r#63
[#111 '*']: r#63
[#111 '+']: r#63
[#111 ',']: r#63
[#111 '-']: r#63
[#111 '.']: r#63
[#111 '/']: r#63
[#111 ':']: r#63
[#111 ';']: r#63
[#111 '==']: r#63
[#111 '@']: r#63
[#111 '[']: r#63
[#111 ']']: r#63
[#111 '^']: r#63
[#111 '{']: r#63
[#111 '|']: r#63
[#111 '||']: r#63
[#111 /\u200B_greater_than/]: r#63
[#111 /\u200B_greater_than_equal/]: r#63
[#111 /\u200B_less_than/]: r#63
[#111 /\u200B_less_than_equal/]: r#63
[#111 /\u200B_shift_left/]: r#63
[#111 /\u200B_shift_right/]: r#63
[#111 /\u200B_template_args_end/]: r#63
[#112 '!=']: r#64
[#112 '%']: r#64
[#112 '&&']: r#64
[#112 '&']: r#64
[#112 ')']: r#64
[#112 '*']: r#64
[#112 '+']: r#64
[#112 ',']: r#64
[#112 '-']: r#64
[#112 '.']: r#64
[#112 '/']: r#64
[#112 ':']: r#64
[#112 ';']: r#64
[#112 '==']: r#64
[#112 '@']: r#64
[#112 '[']: r#64
[#112 ']']: r#64
[#112 '^']: r#64
[#112 '{']: r#64
[#112 '|']: r#64
[#112 '||']: r#64
[#112 /\u200B_greater_than/]: r#64
[#112 /\u200B_greater_than_equal/]: r#64
[#112 /\u200B_less_than/]: r#64
[#112 /\u200B_less_than_equal/]: r#64
[#112 /\u200B_shift_left/]: r#64
[#112 /\u200B_shift_right/]: r#64
[#112 /\u200B_template_args_end/]: r#64
[#113 '!=']: r#65
[#113 '%']: r#65
[#113 '&&']: r#65
[#113 '&']: r#65
[#113 ')']: r#65
[#113 '*']: r#65
[#113 '+']: r#65
[#113 ',']: r#65
[#113 '-']: r#65
[#113 '.']: r#65
[#113 '/']: r#65
[#113 ':']: r#65
[#113 ';']: r#65
[#113 '==']: r#65
[#113 '@']: r#65
[#113 '[']: r#65
[#113 ']']: r#65
[#113 '^']: r#65
[#113 '{']: r#65
[#113 '|']: r#65
[#113 '||']: r#65
[#113 /\u200B_greater_than/]: r#65
[#113 /\u200B_greater_than_equal/]: r#65
[#113 /\u200B_less_than/]: r#65
[#113 /\u200B_less_than_equal/]: r#65
[#113 /\u200B_shift_left/]: r#65
[#113 /\u200B_shift_right/]: r#65
[#113 /\u200B_template_args_end/]: r#65
[#114 '!=']: r#66
[#114 '%']: r#66
[#114 '&&']: r#66
[#114 '&']: r#66
[#114 ')']: r#66
[#114 '*']: r#66
[#114 '+']: r#66
[#114 ',']: r#66
[#114 '-']: r#66
[#114 '.']: r#66
[#114 '/']: r#66
[#114 ':']: r#66
[#114 ';']: r#66
[#114 '==']: r#66
[#114 '@']: r#66
[#114 '[']: r#66
[#114 ']']: r#66
[#114 '^']: r#66
[#114 '{']: r#66
[#114 '|']: r#66
[#114 '||']: r#66
[#114 /\u200B_greater_than/]: r#66
[#114 /\u200B_greater_than_equal/]: r#66
[#114 /\u200B_less_than/]: r#66
[#114 /\u200B_less_than_equal/]: r#66
[#114 /\u200B_shift_left/]: r#66
[#114 /\u200B_shift_right/]: r#66
[#114 /\u200B_template_args_end/]: r#66
[#115 '!=']: r#67
[#115 '%']: r#67
[#115 '&&']: r#67
[#115 '&']: r#67
[#115 ')']: r#67
[#115 '*']: r#67
[#115 '+']: r#67
[#115 ',']: r#67
[#115 '-']: r#67
[#115 '.']: r#67
[#115 '/']: r#67
[#115 ':']: r#67
[#115 ';']: r#67
[#115 '==']: r#67
[#115 '@']: r#67
[#115 '[']: r#67
[#115 ']']: r#67
[#115 '^']: r#67
[#115 '{']: r#67
[#115 '|']: r#67
[#115 '||']: r#67
[#115 /\u200B_greater_than/]: r#67
[#115 /\u200B_greater_than_equal/]: r#67
[#115 /\u200B_less_than/]: r#67
[#115 /\u200B_less_than_equal/]: r#67
[#115 /\u200B_shift_left/]: r#67
[#115 /\u200B_shift_right/]: r#67
[#115 /\u200B_template_args_end/]: r#67
[#116 '!=']: r#68
[#116 '%']: r#68
[#116 '&&']: r#68
[#116 '&']: r#68
[#116 ')']: r#68
[#116 '*']: r#68
[#116 '+']: r#68
[#116 ',']: r#68
[#116 '-']: r#68
[#116 '.']: r#68
[#116 '/']: r#68
[#116 ':']: r#68
[#116 ';']: r#68
[#116 '==']: r#68
[#116 '@']: r#68
[#116 '[']: r#68
[#116 ']']: r#68
[#116 '^']: r#68
[#116 '{']: r#68
[#116 '|']: r#68
[#116 '||']: r#68
[#116 /\u200B_greater_than/]: r#68
[#116 /\u200B_greater_than_equal/]: r#68
[#116 /\u200B_less_than/]: r#68
[#116 /\u200B_less_than_equal/]: r#68
[#116 /\u200B_shift_left/]: r#68
[#116 /\u200B_shift_right/]: r#68
[#116 /\u200B_template_args_end/]: r#68
[#117 '!=']: r#69
[#117 '%']: r#69
[#117 '&&']: r#69
[#117 '&']: r#69
[#117 ')']: r#69
[#117 '*']: r#69
[#117 '+']: r#69
[#117 ',']: r#69
[#117 '-']: r#69
[#117 '.']: r#69
[#117 '/']: r#69
[#117 ':']: r#69
[#117 ';']: r#69
[#117 '==']: r#69
[#117 '@']: r#69
[#117 '[']: r#69
[#117 ']']: r#69
[#117 '^']: r#69
[#117 '{']: r#69
[#117 '|']: r#69
[#117 '||']: r#69
[#117 /\u200B_greater_than/]: r#69
[#117 /\u200B_greater_than_equal/]: r#69
[#117 /\u200B_less_than/]: r#69
[#117 /\u200B_less_than_equal/]: r#69
[#117 /\u200B_shift_left/]: r#69
[#117 /\u200B_shift_right/]: r#69
[#117 /\u200B_template_args_end/]: r#69
[#118 '!=']: r#70
[#118 '%']: r#70
[#118 '&&']: r#70
[#118 '&']: r#70
[#118 ')']: r#70
[#118 '*']: r#70
[#118 '+']: r#70
[#118 ',']: r#70
[#118 '-']: r#70
[#118 '.']: r#70
[#118 '/']: r#70
[#118 ':']: r#70
[#118 ';']: r#70
[#118 '==']: r#70
[#118 '@']: r#70
[#118 '[']: r#70
[#118 ']']: r#70
[#118 '^']: r#70
[#118 '{']: r#70
[#118 '|']: r#70
[#118 '||']: r#70
[#118 /\u200B_greater_than/]: r#70
[#118 /\u200B_greater_than_equal/]: r#70
[#118 /\u200B_less_than/]: r#70
[#118 /\u200B_less_than_equal/]: r#70
[#118 /\u200B_shift_left/]: r#70
[#118 /\u200B_shift_right/]: r#70
[#118 /\u200B_template_args_end/]: r#70
[#119 '!=']: r#71
[#119 '%']: r#71
[#119 '&&']: r#71
[#119 '&']: r#71
[#119 ')']: r#71
[#119 '*']: r#71
[#119 '+']: r#71
[#119 ',']: r#71
[#119 '-']: r#71
[#119 '.']: r#71
[#119 '/']: r#71
[#119 ':']: r#71
[#119 ';']: r#71
[#119 '==']: r#71
[#119 '@']: r#71
[#119 '[']: r#71
[#119 ']']: r#71
[#119 '^']: r#71
[#119 '{']: r#71
[#119 '|']: r#71
[#119 '||']: r#71
[#119 /\u200B_greater_than/]: r#71
[#119 /\u200B_greater_than_equal/]: r#71
[#119 /\u200B_less_than/]: r#71
[#119 /\u200B_less_than_equal/]: r#71
[#119 /\u200B_shift_left/]: r#71
[#119 /\u200B_shift_right/]: r#71
[#119 /\u200B_template_args_end/]: r#71
[#120 '!=']: r#72
[#120 '%']: r#72
[#120 '&&']: r#72
[#120 '&']: r#72
[#120 ')']: r#72
[#120 '*']: r#72
[#120 '+']: r#72
[#120 ',']: r#72
[#120 '-']: r#72
[#120 '.']: r#72
[#120 '/']: r#72
[#120 ':']: r#72
[#120 ';']: r#72
[#120 '==']: r#72
[#120 '@']: r#72
[#120 '[']: r#72
[#120 ']']: r#72
[#120 '^']: r#72
[#120 '{']: r#72
[#120 '|']: r#72
[#120 '||']: r#72
[#120 /\u200B_greater_than/]: r#72
[#120 /\u200B_greater_than_equal/]: r#72
[#120 /\u200B_less_than/]: r#72
[#120 /\u200B_less_than_equal/]: r#72
[#120 /\u200B_shift_left/]: r#72
[#120 /\u200B_shift_right/]: r#72
[#120 /\u200B_template_args_end/]: r#72
[#121 '!=']: r#73
[#121 '%']: r#73
[#121 '&&']: r#73
[#121 '&']: r#73
[#121 ')']: r#73
[#121 '*']: r#73
[#121 '+']: r#73
[#121 ',']: r#73
[#121 '-']: r#73
[#121 '.']: r#73
[#121 '/']: r#73
[#121 ':']: r#73
[#121 ';']: r#73
[#121 '==']: r#73
[#121 '@']: r#73
[#121 '[']: r#73
[#121 ']']: r#73
[#121 '^']: r#73
[#121 '{']: r#73
[#121 '|']: r#73
[#121 '||']: r#73
[#121 /\u200B_greater_than/]: r#73
[#121 /\u200B_greater_than_equal/]: r#73
[#121 /\u200B_less_than/]: r#73
[#121 /\u200B_less_than_equal/]: r#73
[#121 /\u200B_shift_left/]: r#73
[#121 /\u200B_shift_right/]: r#73
[#121 /\u200B_template_args_end/]: r#73
[#122 '!=']: r#74
[#122 '%']: r#74
[#122 '&&']: r#74
[#122 '&']: r#74
[#122 ')']: r#74
[#122 '*']: r#74
[#122 '+']: r#74
[#122 ',']: r#74
[#122 '-']: r#74
[#122 '.']: r#74
[#122 '/']: r#74
[#122 ':']: r#74
[#122 ';']: r#74
[#122 '==']: r#74
[#122 '@']: r#74
[#122 '[']: r#74
[#122 ']']: r#74
[#122 '^']: r#74
[#122 '{']: r#74
[#122 '|']: r#74
[#122 '||']: r#74
[#122 /\u200B_greater_than/]: r#74
[#122 /\u200B_greater_than_equal/]: r#74
[#122 /\u200B_less_than/]: r#74
[#122 /\u200B_less_than_equal/]: r#74
[#122 /\u200B_shift_left/]: r#74
[#122 /\u200B_shift_right/]: r#74
[#122 /\u200B_template_args_end/]: r#74
[#123 '!=']: r#75
[#123 '%']: r#75
[#123 '&&']: r#75
[#123 '&']: r#75
[#123 ')']: r#75
[#123 '*']: r#75
[#123 '+']: r#75
[#123 ',']: r#75
[#123 '-']: r#75
[#123 '.']: r#75
[#123 '/']: r#75
[#123 ':']: r#75
[#123 ';']: r#75
[#123 '==']: r#75
[#123 '@']: r#75
[#123 '[']: r#75
[#123 ']']: r#75
[#123 '^']: r#75
[#123 '{']: r#75
[#123 '|']: r#75
[#123 '||']: r#75
[#123 /\u200B_greater_than/]: r#75
[#123 /\u200B_greater_than_equal/]: r#75
[#123 /\u200B_less_than/]: r#75
[#123 /\u200B_less_than_equal/]: r#75
[#123 /\u200B_shift_left/]: r#75
[#123 /\u200B_shift_right/]: r#75
[#123 /\u200B_template_args_end/]: r#75
[#124 '!=']: r#76
[#124 '%']: r#76
[#124 '&&']: r#76
[#124 '&']: r#76
[#124 ')']: r#76
[#124 '*']: r#76
[#124 '+']: r#76
[#124 ',']: r#76
[#124 '-']: r#76
[#124 '.']: r#76
[#124 '/']: r#76
[#124 ':']: r#76
[#124 ';']: r#76
[#124 '==']: r#76
[#124 '@']: r#76
[#124 '[']: r#76
[#124 ']']: r#76
[#124 '^']: r#76
[#124 '{']: r#76
[#124 '|']: r#76
[#124 '||']: r#76
[#124 /\u200B_greater_than/]: r#76
[#124 /\u200B_greater_than_equal/]: r#76
[#124 /\u200B_less_than/]: r#76
[#124 /\u200B_less_than_equal/]: r#76
[#124 /\u200B_shift_left/]: r#76
[#124 /\u200B_shift_right/]: r#76
[#124 /\u200B_template_args_end/]: r#76
[#125 '!=']: r#77
[#125 '%']: r#77
[#125 '&&']: r#77
[#125 '&']: r#77
[#125 ')']: r#77
[#125 '*']: r#77
[#125 '+']: r#77
[#125 ',']: r#77
[#125 '-']: r#77
[#125 '.']: r#77
[#125 '/']: r#77
[#125 ':']: r#77
[#125 ';']: r#77
[#125 '==']: r#77
[#125 '@']: r#77
[#125 '[']: r#77
[#125 ']']: r#77
[#125 '^']: r#77
[#125 '{']: r#77
[#125 '|']: r#77
[#125 '||']: r#77
[#125 /\u200B_greater_than/]: r#77
[#125 /\u200B_greater_than_equal/]: r#77
[#125 /\u200B_less_than/]: r#77
[#125 /\u200B_less_than_equal/]: r#77
[#125 /\u200B_shift_left/]: r#77
[#125 /\u200B_shift_right/]: r#77
[#125 /\u200B_template_args_end/]: r#77
[#126 '!=']: r#78
[#126 '%']: r#78
[#126 '&&']: r#78
[#126 '&']: r#78
[#126 ')']: r#78
[#126 '*']: r#78
[#126 '+']: r#78
[#126 ',']: r#78
[#126 '-']: r#78
[#126 '.']: r#78
[#126 '/']: r#78
[#126 ':']: r#78
[#126 ';']: r#78
[#126 '==']: r#78
[#126 '@']: r#78
[#126 '[']: r#78
[#126 ']']: r#78
[#126 '^']: r#78
[#126 '{']: r#78
[#126 '|']: r#78
[#126 '||']: r#78
[#126 /\u200B_greater_than/]: r#78
[#126 /\u200B_greater_than_equal/]: r#78
[#126 /\u200B_less_than/]: r#78
[#126 /\u200B_less_than_equal/]: r#78
[#126 /\u200B_shift_left/]: r#78
[#126 /\u200B_shift_right/]: r#78
[#126 /\u200B_template_args_end/]: r#78
[#127 '@']: s#41
[#128 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#129 '{']: s#173
[#130 '=']: s#171
[#131 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#132 '=']: s#169
[#133 ':']: s#168
[#134 '=']: s#166
[#135 /\u200B_disambiguate_template/]: s#164
[#136 ';']: r#79
[#136 '@']: r#79
[#136 'alias']: r#79
[#136 'const']: r#79
[#136 'const_assert']: r#79
[#136 'fn']: r#79
[#136 'override']: r#79
[#136 'struct']: r#79
[#136 'var']: r#79
[#136 EndOfText]: r#79
[#137 ';']: r#80
[#137 '@']: r#80
[#137 'alias']: r#80
[#137 'const']: r#80
[#137 'const_assert']: r#80
[#137 'fn']: r#80
[#137 'override']: r#80
[#137 'struct']: r#80
[#137 'var']: r#80
[#137 EndOfText]: r#80
[#138 ';']: r#81
[#138 '@']: r#81
[#138 'alias']: r#81
[#138 'const']: r#81
[#138 'const_assert']: r#81
[#138 'fn']: r#81
[#138 'override']: r#81
[#138 'struct']: r#81
[#138 'var']: r#81
[#138 EndOfText]: r#81
[#139 ';']: r#82
[#139 '@']: r#82
[#139 'alias']: r#82
[#139 'const']: r#82
[#139 'const_assert']: r#82
[#139 'fn']: r#82
[#139 'override']: r#82
[#139 'struct']: r#82
[#139 'var']: r#82
[#139 EndOfText]: r#82
[#140 EndOfText]: r#83
[#141 ',']: s#162
[#142 ',']: r#84
[#143 ';']: r#85
[#143 '@']: r#85
[#143 'alias']: r#85
[#143 'const']: r#85
[#143 'const_assert']: r#85
[#143 'diagnostic']: r#85
[#143 'enable']: r#85
[#143 'fn']: r#85
[#143 'override']: r#85
[#143 'requires']: r#85
[#143 'struct']: r#85
[#143 'var']: r#85
[#143 EndOfText]: r#85
[#144 ',']: s#161
[#145 ',']: r#86
[#145 ';']: r#86
[#146 ',']: s#147
[#147 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#16
[#148 ';']: r#87
[#148 '@']: r#87
[#148 'alias']: r#87
[#148 'const']: r#87
[#148 'const_assert']: r#87
[#148 'diagnostic']: r#87
[#148 'enable']: r#87
[#148 'fn']: r#87
[#148 'override']: r#87
[#148 'requires']: r#87
[#148 'struct']: r#87
[#148 'var']: r#87
[#148 EndOfText]: r#87
[#149 ',']: s#157
[#150 ',']: r#88
[#150 ';']: r#88
[#151 ',']: s#152
[#152 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#13
[#153 ';']: r#89
[#153 '@']: r#89
[#153 'alias']: r#89
[#153 'const']: r#89
[#153 'const_assert']: r#89
[#153 'diagnostic']: r#89
[#153 'enable']: r#89
[#153 'fn']: r#89
[#153 'override']: r#89
[#153 'requires']: r#89
[#153 'struct']: r#89
[#153 'var']: r#89
[#153 EndOfText]: r#89
[#154 ',']: r#90
[#154 ';']: r#90
[#155 ',']: r#91
[#155 ';']: r#91
[#156 ';']: r#92
[#157 ';']: r#93
[#158 ',']: r#94
[#158 ';']: r#94
[#159 ',']: r#95
[#159 ';']: r#95
[#160 ';']: r#96
[#161 ';']: r#97
[#162 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#299
[#163 /\u200B_template_args_start/]: s#279
[#164 '!=']: r#98
[#164 '%']: r#98
[#164 '%=']: r#98
[#164 '&&']: r#98
[#164 '&']: r#98
[#164 '&=']: r#98
[#164 '(']: r#98
[#164 ')']: r#98
[#164 '*']: r#98
[#164 '*=']: r#98
[#164 '+']: r#98
[#164 '++']: r#98
[#164 '+=']: r#98
[#164 ',']: r#98
[#164 '-']: r#98
[#164 '--']: r#98
[#164 '-=']: r#98
[#164 '.']: r#98
[#164 '/']: r#98
[#164 '/=']: r#98
[#164 ':']: r#98
[#164 ';']: r#98
[#164 '=']: r#98
[#164 '==']: r#98
[#164 '@']: r#98
[#164 '[']: r#98
[#164 ']']: r#98
[#164 '^']: r#98
[#164 '^=']: r#98
[#164 '{']: r#98
[#164 '|']: r#98
[#164 '|=']: r#98
[#164 '||']: r#98
[#164 '}']: r#98
[#164 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#98
[#164 /\u200B_disambiguate_template/]: r#98
[#164 /\u200B_greater_than/]: r#98
[#164 /\u200B_greater_than_equal/]: r#98
[#164 /\u200B_less_than/]: r#98
[#164 /\u200B_less_than_equal/]: r#98
[#164 /\u200B_shift_left/]: r#98
[#164 /\u200B_shift_left_assign/]: r#98
[#164 /\u200B_shift_right/]: r#98
[#164 /\u200B_shift_right_assign/]: r#98
[#164 /\u200B_template_args_end/]: r#98
[#164 /\u200B_template_args_start/]: r#98
[#165 ';']: r#99
[#166 '!']: s#95
[#166 '&']: s#98
[#166 '(']: s#108
[#166 '*']: s#97
[#166 '-']: s#94
[#166 'false']: s#115
[#166 'true']: s#114
[#166 '~']: s#96
[#166 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#166 /0[fh]/]: s#119
[#166 /0[iu]?/]: s#116
[#166 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#166 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#166 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#166 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#166 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#166 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#166 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#166 /[1-9][0-9]*[fh]/]: s#120
[#166 /[1-9][0-9]*[iu]?/]: s#117
[#167 ';']: r#100
[#167 '=']: r#100
[#168 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#169 '!']: s#95
[#169 '&']: s#98
[#169 '(']: s#108
[#169 '*']: s#97
[#169 '-']: s#94
[#169 'false']: s#115
[#169 'true']: s#114
[#169 '~']: s#96
[#169 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#169 /0[fh]/]: s#119
[#169 /0[iu]?/]: s#116
[#169 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#169 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#169 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#169 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#169 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#169 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#169 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#169 /[1-9][0-9]*[fh]/]: s#120
[#169 /[1-9][0-9]*[iu]?/]: s#117
[#170 '=']: s#291
[#171 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#172 ';']: r#101
[#172 '@']: r#101
[#172 'alias']: r#101
[#172 'const']: r#101
[#172 'const_assert']: r#101
[#172 'fn']: r#101
[#172 'override']: r#101
[#172 'struct']: r#101
[#172 'var']: r#101
[#172 EndOfText]: r#101
[#173 '@']: s#41
[#174 '(']: s#283
[#175 ';']: r#102
[#175 '@']: r#102
[#175 'alias']: r#102
[#175 'const']: r#102
[#175 'const_assert']: r#102
[#175 'fn']: r#102
[#175 'override']: r#102
[#175 'struct']: r#102
[#175 'var']: r#102
[#175 EndOfText]: r#102
[#176 '{']: s#282
[#177 '{']: r#103
[#178 '@']: s#41
[#179 '(']: r#104
[#179 ':']: r#104
[#179 ';']: r#104
[#179 '=']: r#104
[#179 '{']: r#104
[#179 /\u200B_disambiguate_template/]: r#104
[#180 ')']: s#280
[#181 /\u200B_template_args_start/]: s#279
[#182 '!=']: r#105
[#182 '%']: r#105
[#182 '&&']: r#105
[#182 '&']: r#105
[#182 ')']: r#105
[#182 '*']: r#105
[#182 '+']: r#105
[#182 ',']: r#105
[#182 '-']: r#105
[#182 '.']: r#105
[#182 '/']: r#105
[#182 ':']: r#105
[#182 ';']: r#105
[#182 '==']: r#105
[#182 '@']: r#105
[#182 '[']: r#105
[#182 ']']: r#105
[#182 '^']: r#105
[#182 '{']: r#105
[#182 '|']: r#105
[#182 '||']: r#105
[#182 /\u200B_greater_than/]: r#105
[#182 /\u200B_greater_than_equal/]: r#105
[#182 /\u200B_less_than/]: r#105
[#182 /\u200B_less_than_equal/]: r#105
[#182 /\u200B_shift_left/]: r#105
[#182 /\u200B_shift_right/]: r#105
[#182 /\u200B_template_args_end/]: r#105
[#183 '!']: s#95
[#183 '&']: s#98
[#183 '(']: s#108
[#183 '*']: s#97
[#183 '-']: s#94
[#183 'false']: s#115
[#183 'true']: s#114
[#183 '~']: s#96
[#183 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#183 /0[fh]/]: s#119
[#183 /0[iu]?/]: s#116
[#183 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#183 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#183 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#183 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#183 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#183 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#183 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#183 /[1-9][0-9]*[fh]/]: s#120
[#183 /[1-9][0-9]*[iu]?/]: s#117
[#184 '!=']: r#106
[#184 '%']: r#106
[#184 '&&']: r#106
[#184 '&']: r#106
[#184 ')']: r#106
[#184 '*']: r#106
[#184 '+']: r#106
[#184 ',']: r#106
[#184 '-']: r#106
[#184 '/']: r#106
[#184 ':']: r#106
[#184 ';']: r#106
[#184 '==']: r#106
[#184 '@']: r#106
[#184 ']']: r#106
[#184 '^']: r#106
[#184 '{']: r#106
[#184 '|']: r#106
[#184 '||']: r#106
[#184 /\u200B_greater_than/]: r#106
[#184 /\u200B_greater_than_equal/]: r#106
[#184 /\u200B_less_than/]: r#106
[#184 /\u200B_less_than_equal/]: r#106
[#184 /\u200B_shift_left/]: r#106
[#184 /\u200B_shift_right/]: r#106
[#184 /\u200B_template_args_end/]: r#106
[#185 '!=']: r#107
[#185 '%']: r#107
[#185 '&&']: r#107
[#185 '&']: r#107
[#185 ')']: r#107
[#185 '*']: r#107
[#185 '+']: r#107
[#185 ',']: r#107
[#185 '-']: r#107
[#185 '/']: r#107
[#185 ':']: r#107
[#185 ';']: r#107
[#185 '==']: r#107
[#185 '@']: r#107
[#185 ']']: r#107
[#185 '^']: r#107
[#185 '{']: r#107
[#185 '|']: r#107
[#185 '||']: r#107
[#185 /\u200B_greater_than/]: r#107
[#185 /\u200B_greater_than_equal/]: r#107
[#185 /\u200B_less_than/]: r#107
[#185 /\u200B_less_than_equal/]: r#107
[#185 /\u200B_shift_left/]: r#107
[#185 /\u200B_shift_right/]: r#107
[#185 /\u200B_template_args_end/]: r#107
[#186 '!']: s#95
[#186 '&']: s#98
[#186 '(']: s#108
[#186 '*']: s#97
[#186 '-']: s#94
[#186 'false']: s#115
[#186 'true']: s#114
[#186 '~']: s#96
[#186 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#186 /0[fh]/]: s#119
[#186 /0[iu]?/]: s#116
[#186 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#186 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#186 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#186 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#186 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#186 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#186 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#186 /[1-9][0-9]*[fh]/]: s#120
[#186 /[1-9][0-9]*[iu]?/]: s#117
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#263
[#187 /[rgba]/]: s#264
[#187 /[rgba][rgba]/]: s#265
[#187 /[rgba][rgba][rgba]/]: s#266
[#187 /[rgba][rgba][rgba][rgba]/]: s#267
[#187 /[xyzw]/]: s#268
[#187 /[xyzw][xyzw]/]: s#269
[#187 /[xyzw][xyzw][xyzw]/]: s#270
[#187 /[xyzw][xyzw][xyzw][xyzw]/]: s#271
[#188 '!=']: r#108
[#188 '%']: r#108
[#188 '&&']: r#108
[#188 '&']: r#108
[#188 ')']: r#108
[#188 '*']: r#108
[#188 '+']: r#108
[#188 ',']: r#108
[#188 '-']: r#108
[#188 '/']: r#108
[#188 ':']: r#108
[#188 ';']: r#108
[#188 '==']: r#108
[#188 '@']: r#108
[#188 ']']: r#108
[#188 '^']: r#108
[#188 '{']: r#108
[#188 '|']: r#108
[#188 '||']: r#108
[#188 /\u200B_greater_than/]: r#108
[#188 /\u200B_greater_than_equal/]: r#108
[#188 /\u200B_less_than/]: r#108
[#188 /\u200B_less_than_equal/]: r#108
[#188 /\u200B_shift_left/]: r#108
[#188 /\u200B_shift_right/]: r#108
[#188 /\u200B_template_args_end/]: r#108
[#189 '!=']: r#109
[#189 '%']: r#109
[#189 '&&']: r#109
[#189 '&']: r#109
[#189 ')']: r#109
[#189 '*']: r#109
[#189 '+']: r#109
[#189 ',']: r#109
[#189 '-']: r#109
[#189 '/']: r#109
[#189 ':']: r#109
[#189 ';']: r#109
[#189 '==']: r#109
[#189 '@']: r#109
[#189 ']']: r#109
[#189 '^']: r#109
[#189 '{']: r#109
[#189 '|']: r#109
[#189 '||']: r#109
[#189 /\u200B_greater_than/]: r#109
[#189 /\u200B_greater_than_equal/]: r#109
[#189 /\u200B_less_than/]: r#109
[#189 /\u200B_less_than_equal/]: r#109
[#189 /\u200B_shift_left/]: r#109
[#189 /\u200B_shift_right/]: r#109
[#189 /\u200B_template_args_end/]: r#109
[#190 '!=']: r#110
[#190 '%']: r#110
[#190 '&&']: r#110
[#190 '&']: r#110
[#190 ')']: r#110
[#190 '*']: r#110
[#190 '+']: r#110
[#190 ',']: r#110
[#190 '-']: r#110
[#190 '/']: r#110
[#190 ':']: r#110
[#190 ';']: r#110
[#190 '==']: r#110
[#190 '@']: r#110
[#190 ']']: r#110
[#190 '^']: r#110
[#190 '{']: r#110
[#190 '|']: r#110
[#190 '||']: r#110
[#190 /\u200B_greater_than/]: r#110
[#190 /\u200B_greater_than_equal/]: r#110
[#190 /\u200B_less_than/]: r#110
[#190 /\u200B_less_than_equal/]: r#110
[#190 /\u200B_shift_left/]: r#110
[#190 /\u200B_shift_right/]: r#110
[#190 /\u200B_template_args_end/]: r#110
[#191 '!=']: r#111
[#191 '%']: r#111
[#191 '&&']: r#111
[#191 '&']: r#111
[#191 ')']: r#111
[#191 '*']: r#111
[#191 '+']: r#111
[#191 ',']: r#111
[#191 '-']: r#111
[#191 '/']: r#111
[#191 ':']: r#111
[#191 ';']: r#111
[#191 '==']: r#111
[#191 '@']: r#111
[#191 ']']: r#111
[#191 '^']: r#111
[#191 '{']: r#111
[#191 '|']: r#111
[#191 '||']: r#111
[#191 /\u200B_greater_than/]: r#111
[#191 /\u200B_greater_than_equal/]: r#111
[#191 /\u200B_less_than/]: r#111
[#191 /\u200B_less_than_equal/]: r#111
[#191 /\u200B_shift_left/]: r#111
[#191 /\u200B_shift_right/]: r#111
[#191 /\u200B_template_args_end/]: r#111
[#192 '!=']: r#112
[#192 '%']: r#112
[#192 '&&']: r#112
[#192 '&']: r#112
[#192 ')']: r#112
[#192 '*']: r#112
[#192 '+']: r#112
[#192 ',']: r#112
[#192 '-']: r#112
[#192 '/']: r#112
[#192 ':']: r#112
[#192 ';']: r#112
[#192 '==']: r#112
[#192 '@']: r#112
[#192 ']']: r#112
[#192 '^']: r#112
[#192 '{']: r#112
[#192 '|']: r#112
[#192 '||']: r#112
[#192 /\u200B_greater_than/]: r#112
[#192 /\u200B_greater_than_equal/]: r#112
[#192 /\u200B_less_than/]: r#112
[#192 /\u200B_less_than_equal/]: r#112
[#192 /\u200B_shift_left/]: r#112
[#192 /\u200B_shift_right/]: r#112
[#192 /\u200B_template_args_end/]: r#112
[#193 '!']: s#95
[#193 '&']: s#98
[#193 '(']: s#108
[#193 '*']: s#97
[#193 '-']: s#94
[#193 'false']: s#115
[#193 'true']: s#114
[#193 '~']: s#96
[#193 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#193 /0[fh]/]: s#119
[#193 /0[iu]?/]: s#116
[#193 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#193 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#193 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#193 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#193 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#193 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#193 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#193 /[1-9][0-9]*[fh]/]: s#120
[#193 /[1-9][0-9]*[iu]?/]: s#117
[#194 '!']: r#113
[#194 '&']: r#113
[#194 '(']: r#113
[#194 '*']: r#113
[#194 '-']: r#113
[#194 'false']: r#113
[#194 'true']: r#113
[#194 '~']: r#113
[#194 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#113
[#194 /0[fh]/]: r#113
[#194 /0[iu]?/]: r#113
[#194 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#113
[#194 /0[xX][0-9a-fA-F]+[iu]?/]: r#113
[#194 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#113
[#194 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#113
[#194 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#113
[#194 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#113
[#194 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#113
[#194 /[1-9][0-9]*[fh]/]: r#113
[#194 /[1-9][0-9]*[iu]?/]: r#113
[#195 '!']: r#114
[#195 '&']: r#114
[#195 '(']: r#114
[#195 '*']: r#114
[#195 '-']: r#114
[#195 'false']: r#114
[#195 'true']: r#114
[#195 '~']: r#114
[#195 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#114
[#195 /0[fh]/]: r#114
[#195 /0[iu]?/]: r#114
[#195 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#114
[#195 /0[xX][0-9a-fA-F]+[iu]?/]: r#114
[#195 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#114
[#195 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#114
[#195 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#114
[#195 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#114
[#195 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#114
[#195 /[1-9][0-9]*[fh]/]: r#114
[#195 /[1-9][0-9]*[iu]?/]: r#114
[#196 '!']: r#115
[#196 '&']: r#115
[#196 '(']: r#115
[#196 '*']: r#115
[#196 '-']: r#115
[#196 'false']: r#115
[#196 'true']: r#115
[#196 '~']: r#115
[#196 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#115
[#196 /0[fh]/]: r#115
[#196 /0[iu]?/]: r#115
[#196 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#115
[#196 /0[xX][0-9a-fA-F]+[iu]?/]: r#115
[#196 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#115
[#196 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#115
[#196 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#115
[#196 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#115
[#196 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#115
[#196 /[1-9][0-9]*[fh]/]: r#115
[#196 /[1-9][0-9]*[iu]?/]: r#115
[#197 '!']: s#95
[#197 '&']: s#98
[#197 '(']: s#108
[#197 '*']: s#97
[#197 '-']: s#94
[#197 'false']: s#115
[#197 'true']: s#114
[#197 '~']: s#96
[#197 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#197 /0[fh]/]: s#119
[#197 /0[iu]?/]: s#116
[#197 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#197 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#197 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#197 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#197 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#197 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#197 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#197 /[1-9][0-9]*[fh]/]: s#120
[#197 /[1-9][0-9]*[iu]?/]: s#117
[#198 '!']: s#95
[#198 '&']: s#98
[#198 '(']: s#108
[#198 '*']: s#97
[#198 '-']: s#94
[#198 'false']: s#115
[#198 'true']: s#114
[#198 '~']: s#96
[#198 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#198 /0[fh]/]: s#119
[#198 /0[iu]?/]: s#116
[#198 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#198 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#198 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#198 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#198 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#198 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#198 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#198 /[1-9][0-9]*[fh]/]: s#120
[#198 /[1-9][0-9]*[iu]?/]: s#117
[#199 '!']: r#116
[#199 '&']: r#116
[#199 '(']: r#116
[#199 '*']: r#116
[#199 '-']: r#116
[#199 'false']: r#116
[#199 'true']: r#116
[#199 '~']: r#116
[#199 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#116
[#199 /0[fh]/]: r#116
[#199 /0[iu]?/]: r#116
[#199 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#116
[#199 /0[xX][0-9a-fA-F]+[iu]?/]: r#116
[#199 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#116
[#199 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#116
[#199 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#116
[#199 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#116
[#199 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#116
[#199 /[1-9][0-9]*[fh]/]: r#116
[#199 /[1-9][0-9]*[iu]?/]: r#116
[#200 '!']: r#117
[#200 '&']: r#117
[#200 '(']: r#117
[#200 '*']: r#117
[#200 '-']: r#117
[#200 'false']: r#117
[#200 'true']: r#117
[#200 '~']: r#117
[#200 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#117
[#200 /0[fh]/]: r#117
[#200 /0[iu]?/]: r#117
[#200 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#117
[#200 /0[xX][0-9a-fA-F]+[iu]?/]: r#117
[#200 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#117
[#200 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#117
[#200 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#117
[#200 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#117
[#200 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#117
[#200 /[1-9][0-9]*[fh]/]: r#117
[#200 /[1-9][0-9]*[iu]?/]: r#117
[#201 '!']: s#95
[#201 '&']: s#98
[#201 '(']: s#108
[#201 '*']: s#97
[#201 '-']: s#94
[#201 'false']: s#115
[#201 'true']: s#114
[#201 '~']: s#96
[#201 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#201 /0[fh]/]: s#119
[#201 /0[iu]?/]: s#116
[#201 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#201 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#201 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#201 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#201 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#201 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#201 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#201 /[1-9][0-9]*[fh]/]: s#120
[#201 /[1-9][0-9]*[iu]?/]: s#117
[#202 '!']: r#118
[#202 '&']: r#118
[#202 '(']: r#118
[#202 '*']: r#118
[#202 '-']: r#118
[#202 'false']: r#118
[#202 'true']: r#118
[#202 '~']: r#118
[#202 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#118
[#202 /0[fh]/]: r#118
[#202 /0[iu]?/]: r#118
[#202 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#118
[#202 /0[xX][0-9a-fA-F]+[iu]?/]: r#118
[#202 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#118
[#202 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#118
[#202 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#118
[#202 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#118
[#202 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#118
[#202 /[1-9][0-9]*[fh]/]: r#118
[#202 /[1-9][0-9]*[iu]?/]: r#118
[#203 '!']: r#119
[#203 '&']: r#119
[#203 '(']: r#119
[#203 '*']: r#119
[#203 '-']: r#119
[#203 'false']: r#119
[#203 'true']: r#119
[#203 '~']: r#119
[#203 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#119
[#203 /0[fh]/]: r#119
[#203 /0[iu]?/]: r#119
[#203 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#119
[#203 /0[xX][0-9a-fA-F]+[iu]?/]: r#119
[#203 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#119
[#203 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#119
[#203 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#119
[#203 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#119
[#203 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#119
[#203 /[1-9][0-9]*[fh]/]: r#119
[#203 /[1-9][0-9]*[iu]?/]: r#119
[#204 '!']: s#95
[#204 '&']: s#98
[#204 '(']: s#108
[#204 '*']: s#97
[#204 '-']: s#94
[#204 'false']: s#115
[#204 'true']: s#114
[#204 '~']: s#96
[#204 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#204 /0[fh]/]: s#119
[#204 /0[iu]?/]: s#116
[#204 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#204 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#204 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#204 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#204 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#204 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#204 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#204 /[1-9][0-9]*[fh]/]: s#120
[#204 /[1-9][0-9]*[iu]?/]: s#117
[#205 '!']: s#95
[#205 '&']: s#98
[#205 '(']: s#108
[#205 '*']: s#97
[#205 '-']: s#94
[#205 'false']: s#115
[#205 'true']: s#114
[#205 '~']: s#96
[#205 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#205 /0[fh]/]: s#119
[#205 /0[iu]?/]: s#116
[#205 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#205 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#205 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#205 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#205 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#205 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#205 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#205 /[1-9][0-9]*[fh]/]: s#120
[#205 /[1-9][0-9]*[iu]?/]: s#117
[#206 '!']: s#95
[#206 '&']: s#98
[#206 '(']: s#108
[#206 '*']: s#97
[#206 '-']: s#94
[#206 'false']: s#115
[#206 'true']: s#114
[#206 '~']: s#96
[#206 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#206 /0[fh]/]: s#119
[#206 /0[iu]?/]: s#116
[#206 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#206 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#206 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#206 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#206 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#206 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#206 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#206 /[1-9][0-9]*[fh]/]: s#120
[#206 /[1-9][0-9]*[iu]?/]: s#117
[#207 '!']: s#95
[#207 '&']: s#98
[#207 '(']: s#108
[#207 '*']: s#97
[#207 '-']: s#94
[#207 'false']: s#115
[#207 'true']: s#114
[#207 '~']: s#96
[#207 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#207 /0[fh]/]: s#119
[#207 /0[iu]?/]: s#116
[#207 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#207 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#207 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#207 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#207 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#207 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#207 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#207 /[1-9][0-9]*[fh]/]: s#120
[#207 /[1-9][0-9]*[iu]?/]: s#117
[#208 '!']: s#95
[#208 '&']: s#98
[#208 '(']: s#108
[#208 '*']: s#97
[#208 '-']: s#94
[#208 'false']: s#115
[#208 'true']: s#114
[#208 '~']: s#96
[#208 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#208 /0[fh]/]: s#119
[#208 /0[iu]?/]: s#116
[#208 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#208 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#208 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#208 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#208 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#208 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#208 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#208 /[1-9][0-9]*[fh]/]: s#120
[#208 /[1-9][0-9]*[iu]?/]: s#117
[#209 '!']: s#95
[#209 '&']: s#98
[#209 '(']: s#108
[#209 '*']: s#97
[#209 '-']: s#94
[#209 'false']: s#115
[#209 'true']: s#114
[#209 '~']: s#96
[#209 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#209 /0[fh]/]: s#119
[#209 /0[iu]?/]: s#116
[#209 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#209 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#209 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#209 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#209 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#209 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#209 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#209 /[1-9][0-9]*[fh]/]: s#120
[#209 /[1-9][0-9]*[iu]?/]: s#117
[#210 '!']: s#95
[#210 '&']: s#98
[#210 '(']: s#108
[#210 '*']: s#97
[#210 '-']: s#94
[#210 'false']: s#115
[#210 'true']: s#114
[#210 '~']: s#96
[#210 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#210 /0[fh]/]: s#119
[#210 /0[iu]?/]: s#116
[#210 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#210 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#210 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#210 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#210 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#210 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#210 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#210 /[1-9][0-9]*[fh]/]: s#120
[#210 /[1-9][0-9]*[iu]?/]: s#117
[#211 '!']: s#95
[#211 '&']: s#98
[#211 '(']: s#108
[#211 '*']: s#97
[#211 '-']: s#94
[#211 'false']: s#115
[#211 'true']: s#114
[#211 '~']: s#96
[#211 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#211 /0[fh]/]: s#119
[#211 /0[iu]?/]: s#116
[#211 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#211 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#211 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#211 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#211 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#211 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#211 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#211 /[1-9][0-9]*[fh]/]: s#120
[#211 /[1-9][0-9]*[iu]?/]: s#117
[#212 '!']: s#95
[#212 '&']: s#98
[#212 '(']: s#108
[#212 '*']: s#97
[#212 '-']: s#94
[#212 'false']: s#115
[#212 'true']: s#114
[#212 '~']: s#96
[#212 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#212 /0[fh]/]: s#119
[#212 /0[iu]?/]: s#116
[#212 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#212 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#212 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#212 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#212 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#212 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#212 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#212 /[1-9][0-9]*[fh]/]: s#120
[#212 /[1-9][0-9]*[iu]?/]: s#117
[#213 '!']: r#120
[#213 '&']: r#120
[#213 '(']: r#120
[#213 '*']: r#120
[#213 '-']: r#120
[#213 'false']: r#120
[#213 'true']: r#120
[#213 '~']: r#120
[#213 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#120
[#213 /0[fh]/]: r#120
[#213 /0[iu]?/]: r#120
[#213 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#120
[#213 /0[xX][0-9a-fA-F]+[iu]?/]: r#120
[#213 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#120
[#213 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#120
[#213 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#120
[#213 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#120
[#213 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#120
[#213 /[1-9][0-9]*[fh]/]: r#120
[#213 /[1-9][0-9]*[iu]?/]: r#120
[#214 '!']: r#121
[#214 '&']: r#121
[#214 '(']: r#121
[#214 '*']: r#121
[#214 '-']: r#121
[#214 'false']: r#121
[#214 'true']: r#121
[#214 '~']: r#121
[#214 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#121
[#214 /0[fh]/]: r#121
[#214 /0[iu]?/]: r#121
[#214 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#121
[#214 /0[xX][0-9a-fA-F]+[iu]?/]: r#121
[#214 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#121
[#214 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#121
[#214 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#121
[#214 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#121
[#214 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#121
[#214 /[1-9][0-9]*[fh]/]: r#121
[#214 /[1-9][0-9]*[iu]?/]: r#121
[#215 '!']: r#122
[#215 '&']: r#122
[#215 '(']: r#122
[#215 '*']: r#122
[#215 '-']: r#122
[#215 'false']: r#122
[#215 'true']: r#122
[#215 '~']: r#122
[#215 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#122
[#215 /0[fh]/]: r#122
[#215 /0[iu]?/]: r#122
[#215 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#122
[#215 /0[xX][0-9a-fA-F]+[iu]?/]: r#122
[#215 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#122
[#215 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#122
[#215 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#122
[#215 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#122
[#215 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#122
[#215 /[1-9][0-9]*[fh]/]: r#122
[#215 /[1-9][0-9]*[iu]?/]: r#122
[#216 '!']: r#123
[#216 '&']: r#123
[#216 '(']: r#123
[#216 '*']: r#123
[#216 '-']: r#123
[#216 'false']: r#123
[#216 'true']: r#123
[#216 '~']: r#123
[#216 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#123
[#216 /0[fh]/]: r#123
[#216 /0[iu]?/]: r#123
[#216 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#123
[#216 /0[xX][0-9a-fA-F]+[iu]?/]: r#123
[#216 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#123
[#216 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#123
[#216 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#123
[#216 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#123
[#216 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#123
[#216 /[1-9][0-9]*[fh]/]: r#123
[#216 /[1-9][0-9]*[iu]?/]: r#123
[#217 '!']: s#95
[#217 '&']: s#98
[#217 '(']: s#108
[#217 '*']: s#97
[#217 '-']: s#94
[#217 'false']: s#115
[#217 'true']: s#114
[#217 '~']: s#96
[#217 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#217 /0[fh]/]: s#119
[#217 /0[iu]?/]: s#116
[#217 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#217 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#217 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#217 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#217 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#217 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#217 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#217 /[1-9][0-9]*[fh]/]: s#120
[#217 /[1-9][0-9]*[iu]?/]: s#117
[#218 '!']: s#95
[#218 '&']: s#98
[#218 '(']: s#108
[#218 '*']: s#97
[#218 '-']: s#94
[#218 'false']: s#115
[#218 'true']: s#114
[#218 '~']: s#96
[#218 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#218 /0[fh]/]: s#119
[#218 /0[iu]?/]: s#116
[#218 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#218 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#218 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#218 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#218 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#218 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#218 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#218 /[1-9][0-9]*[fh]/]: s#120
[#218 /[1-9][0-9]*[iu]?/]: s#117
[#219 '!']: s#95
[#219 '&']: s#98
[#219 '(']: s#108
[#219 '*']: s#97
[#219 '-']: s#94
[#219 'false']: s#115
[#219 'true']: s#114
[#219 '~']: s#96
[#219 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#219 /0[fh]/]: s#119
[#219 /0[iu]?/]: s#116
[#219 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#219 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#219 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#219 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#219 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#219 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#219 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#219 /[1-9][0-9]*[fh]/]: s#120
[#219 /[1-9][0-9]*[iu]?/]: s#117
[#220 '!']: s#95
[#220 '&']: s#98
[#220 '(']: s#108
[#220 '*']: s#97
[#220 '-']: s#94
[#220 'false']: s#115
[#220 'true']: s#114
[#220 '~']: s#96
[#220 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#220 /0[fh]/]: s#119
[#220 /0[iu]?/]: s#116
[#220 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#220 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#220 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#220 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#220 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#220 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#220 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#220 /[1-9][0-9]*[fh]/]: s#120
[#220 /[1-9][0-9]*[iu]?/]: s#117
[#221 '!']: s#95
[#221 '&']: s#98
[#221 '(']: s#108
[#221 '*']: s#97
[#221 '-']: s#94
[#221 'false']: s#115
[#221 'true']: s#114
[#221 '~']: s#96
[#221 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#221 /0[fh]/]: s#119
[#221 /0[iu]?/]: s#116
[#221 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#221 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#221 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#221 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#221 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#221 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#221 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#221 /[1-9][0-9]*[fh]/]: s#120
[#221 /[1-9][0-9]*[iu]?/]: s#117
[#222 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#240
[#223 '!']: s#95
[#223 '&']: s#98
[#223 '(']: s#108
[#223 '*']: s#97
[#223 '-']: s#94
[#223 'false']: s#115
[#223 'true']: s#114
[#223 '~']: s#96
[#223 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#223 /0[fh]/]: s#119
[#223 /0[iu]?/]: s#116
[#223 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#223 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#223 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#223 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#223 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#223 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#223 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#223 /[1-9][0-9]*[fh]/]: s#120
[#223 /[1-9][0-9]*[iu]?/]: s#117
[#224 '!']: s#95
[#224 '&']: s#98
[#224 '(']: s#108
[#224 '*']: s#97
[#224 '-']: s#94
[#224 'false']: s#115
[#224 'true']: s#114
[#224 '~']: s#96
[#224 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#224 /0[fh]/]: s#119
[#224 /0[iu]?/]: s#116
[#224 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#224 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#224 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#224 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#224 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#224 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#224 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#224 /[1-9][0-9]*[fh]/]: s#120
[#224 /[1-9][0-9]*[iu]?/]: s#117
[#225 '@']: r#124
[#225 'fn']: r#124
[#225 'for']: r#124
[#225 'if']: r#124
[#225 'loop']: r#124
[#225 'override']: r#124
[#225 'switch']: r#124
[#225 'var']: r#124
[#225 'while']: r#124
[#225 '{']: r#124
[#225 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#124
[#226 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#236
[#227 '!']: s#95
[#227 '&']: s#98
[#227 '(']: s#108
[#227 '*']: s#97
[#227 '-']: s#94
[#227 'false']: s#115
[#227 'true']: s#114
[#227 '~']: s#96
[#227 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#227 /0[fh]/]: s#119
[#227 /0[iu]?/]: s#116
[#227 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#227 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#227 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#227 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#227 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#227 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#227 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#227 /[1-9][0-9]*[fh]/]: s#120
[#227 /[1-9][0-9]*[iu]?/]: s#117
[#228 '!']: s#95
[#228 '&']: s#98
[#228 '(']: s#108
[#228 '*']: s#97
[#228 '-']: s#94
[#228 'false']: s#115
[#228 'true']: s#114
[#228 '~']: s#96
[#228 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#228 /0[fh]/]: s#119
[#228 /0[iu]?/]: s#116
[#228 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#228 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#228 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#228 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#228 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#228 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#228 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#228 /[1-9][0-9]*[fh]/]: s#120
[#228 /[1-9][0-9]*[iu]?/]: s#117
[#229 '!']: s#95
[#229 '&']: s#98
[#229 '(']: s#108
[#229 '*']: s#97
[#229 '-']: s#94
[#229 'false']: s#115
[#229 'true']: s#114
[#229 '~']: s#96
[#229 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#229 /0[fh]/]: s#119
[#229 /0[iu]?/]: s#116
[#229 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#229 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#229 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#229 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#229 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#229 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#229 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#229 /[1-9][0-9]*[fh]/]: s#120
[#229 /[1-9][0-9]*[iu]?/]: s#117
[#230 '@']: r#125
[#230 'fn']: r#125
[#230 'for']: r#125
[#230 'if']: r#125
[#230 'loop']: r#125
[#230 'override']: r#125
[#230 'switch']: r#125
[#230 'var']: r#125
[#230 'while']: r#125
[#230 '{']: r#125
[#230 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#125
[#231 '@']: r#126
[#231 'fn']: r#126
[#231 'for']: r#126
[#231 'if']: r#126
[#231 'loop']: r#126
[#231 'override']: r#126
[#231 'switch']: r#126
[#231 'var']: r#126
[#231 'while']: r#126
[#231 '{']: r#126
[#231 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#126
[#232 ',']: s#399
[#233 ',']: s#397
[#234 ',']: s#395
[#235 ',']: s#393
[#236 ')']: r#127
[#236 ',']: r#127
[#237 ',']: s#391
[#238 ',']: s#389
[#239 ',']: s#387
[#240 ')']: r#128
[#240 ',']: r#128
[#241 ',']: s#385
[#242 ',']: s#383
[#243 ',']: s#381
[#244 ')']: r#129
[#244 ',']: r#129
[#244 ':']: r#129
[#244 ';']: r#129
[#244 '@']: r#129
[#244 ']']: r#129
[#244 '{']: r#129
[#244 '||']: r#130
[#245 '!=']: r#52
[#245 '%']: r#52
[#245 '&&']: r#52
[#245 ')']: r#52
[#245 '*']: r#52
[#245 '+']: r#52
[#245 ',']: r#52
[#245 '-']: r#52
[#245 '/']: r#52
[#245 ':']: r#52
[#245 ';']: r#52
[#245 '==']: r#52
[#245 '@']: r#52
[#245 ']']: r#52
[#245 '{']: r#52
[#245 '||']: r#52
[#245 /\u200B_greater_than/]: r#52
[#245 /\u200B_greater_than_equal/]: r#52
[#245 /\u200B_less_than/]: r#52
[#245 /\u200B_less_than_equal/]: r#52
[#245 /\u200B_shift_left/]: s#199
[#245 /\u200B_shift_right/]: s#200
[#245 /\u200B_template_args_end/]: r#52
[#246 '&&']: r#132
[#246 ')']: r#131
[#246 ',']: r#131
[#246 ':']: r#131
[#246 ';']: r#131
[#246 '@']: r#131
[#246 ']']: r#131
[#246 '{']: r#131
[#247 '&&']: r#133
[#247 ')']: r#133
[#247 ',']: r#133
[#247 ':']: r#133
[#247 ';']: r#133
[#247 '@']: r#133
[#247 ']']: r#133
[#247 '{']: r#133
[#247 '||']: r#133
[#247 /\u200B_template_args_end/]: r#133
[#248 '&&']: r#134
[#248 ')']: r#134
[#248 ',']: r#134
[#248 ':']: r#134
[#248 ';']: r#134
[#248 '@']: r#134
[#248 ']']: r#134
[#248 '{']: r#134
[#248 '||']: r#134
[#248 /\u200B_template_args_end/]: r#134
[#249 '&&']: r#135
[#249 ')']: r#135
[#249 ',']: r#135
[#249 ':']: r#135
[#249 ';']: r#135
[#249 '@']: r#135
[#249 ']']: r#135
[#249 '{']: r#135
[#249 '||']: r#135
[#249 /\u200B_template_args_end/]: r#135
[#250 '&&']: r#136
[#250 ')']: r#136
[#250 ',']: r#136
[#250 ':']: r#136
[#250 ';']: r#136
[#250 '@']: r#136
[#250 ']']: r#136
[#250 '{']: r#136
[#250 '||']: r#136
[#250 /\u200B_template_args_end/]: r#136
[#251 '&&']: r#137
[#251 ')']: r#137
[#251 ',']: r#137
[#251 ':']: r#137
[#251 ';']: r#137
[#251 '@']: r#137
[#251 ']']: r#137
[#251 '{']: r#137
[#251 '||']: r#137
[#251 /\u200B_template_args_end/]: r#137
[#252 '&&']: r#138
[#252 ')']: r#138
[#252 ',']: r#138
[#252 ':']: r#138
[#252 ';']: r#138
[#252 '@']: r#138
[#252 ']']: r#138
[#252 '{']: r#138
[#252 '||']: r#138
[#252 /\u200B_template_args_end/]: r#138
[#253 '&']: r#140
[#253 ')']: r#139
[#253 ',']: r#139
[#253 ':']: r#139
[#253 ';']: r#139
[#253 '@']: r#139
[#253 ']']: r#139
[#253 '{']: r#139
[#253 /\u200B_template_args_end/]: r#139
[#254 ')']: r#141
[#254 ',']: r#141
[#254 ':']: r#141
[#254 ';']: r#141
[#254 '@']: r#141
[#254 ']']: r#141
[#254 '{']: r#141
[#254 '|']: r#142
[#254 /\u200B_template_args_end/]: r#141
[#255 ')']: r#143
[#255 ',']: r#143
[#255 ':']: r#143
[#255 ';']: r#143
[#255 '@']: r#143
[#255 ']']: r#143
[#255 '^']: r#144
[#255 '{']: r#143
[#255 /\u200B_template_args_end/]: r#143
[#256 '!=']: r#145
[#256 '%']: s#196
[#256 '&&']: r#145
[#256 ')']: r#145
[#256 '*']: s#194
[#256 '+']: r#145
[#256 ',']: r#145
[#256 '-']: r#145
[#256 '/']: s#195
[#256 ':']: r#145
[#256 ';']: r#145
[#256 '==']: r#145
[#256 '@']: r#145
[#256 ']']: r#145
[#256 '{']: r#145
[#256 '||']: r#145
[#256 /\u200B_greater_than/]: r#145
[#256 /\u200B_greater_than_equal/]: r#145
[#256 /\u200B_less_than/]: r#145
[#256 /\u200B_less_than_equal/]: r#145
[#256 /\u200B_template_args_end/]: r#145
[#257 '!=']: r#52
[#257 '%']: r#52
[#257 '&&']: r#52
[#257 ')']: r#52
[#257 '*']: r#52
[#257 '+']: r#52
[#257 ',']: r#52
[#257 '-']: r#52
[#257 '/']: r#52
[#257 ':']: r#52
[#257 ';']: r#52
[#257 '==']: r#52
[#257 '@']: r#52
[#257 ']']: r#52
[#257 '{']: r#52
[#257 '||']: r#52
[#257 /\u200B_greater_than/]: r#52
[#257 /\u200B_greater_than_equal/]: r#52
[#257 /\u200B_less_than/]: r#52
[#257 /\u200B_less_than_equal/]: r#52
[#257 /\u200B_template_args_end/]: r#52
[#258 '!=']: r#146
[#258 '&&']: r#146
[#258 ')']: r#146
[#258 ',']: r#146
[#258 ':']: r#146
[#258 ';']: r#146
[#258 '==']: r#146
[#258 '@']: r#146
[#258 ']']: r#146
[#258 '{']: r#146
[#258 '||']: r#146
[#258 /\u200B_greater_than/]: r#146
[#258 /\u200B_greater_than_equal/]: r#146
[#258 /\u200B_less_than/]: r#146
[#258 /\u200B_less_than_equal/]: r#146
[#258 /\u200B_template_args_end/]: r#146
[#259 '!=']: r#147
[#259 '&&']: r#147
[#259 ')']: r#147
[#259 ',']: r#147
[#259 ':']: r#147
[#259 ';']: r#147
[#259 '==']: r#147
[#259 '@']: r#147
[#259 ']']: r#147
[#259 '{']: r#147
[#259 '||']: r#147
[#259 /\u200B_greater_than/]: r#147
[#259 /\u200B_greater_than_equal/]: r#147
[#259 /\u200B_less_than/]: r#147
[#259 /\u200B_less_than_equal/]: r#147
[#259 /\u200B_template_args_end/]: r#147
[#260 '!=']: r#148
[#260 '%']: r#148
[#260 '&&']: r#148
[#260 ')']: r#148
[#260 '*']: r#148
[#260 '+']: r#148
[#260 ',']: r#148
[#260 '-']: r#148
[#260 '/']: r#148
[#260 ':']: r#148
[#260 ';']: r#148
[#260 '==']: r#148
[#260 '@']: r#148
[#260 ']']: r#148
[#260 '{']: r#148
[#260 '||']: r#148
[#260 /\u200B_greater_than/]: r#148
[#260 /\u200B_greater_than_equal/]: r#148
[#260 /\u200B_less_than/]: r#148
[#260 /\u200B_less_than_equal/]: r#148
[#260 /\u200B_template_args_end/]: r#148
[#261 '.']: s#187
[#261 '[']: s#186
[#262 '.']: s#187
[#262 '[']: s#186
[#263 '!=']: r#149
[#263 '%']: r#149
[#263 '%=']: r#149
[#263 '&&']: r#149
[#263 '&']: r#149
[#263 '&=']: r#149
[#263 ')']: r#149
[#263 '*']: r#149
[#263 '*=']: r#149
[#263 '+']: r#149
[#263 '++']: r#149
[#263 '+=']: r#149
[#263 ',']: r#149
[#263 '-']: r#149
[#263 '--']: r#149
[#263 '-=']: r#149
[#263 '.']: r#149
[#263 '/']: r#149
[#263 '/=']: r#149
[#263 ':']: r#149
[#263 ';']: r#149
[#263 '=']: r#149
[#263 '==']: r#149
[#263 '@']: r#149
[#263 '[']: r#149
[#263 ']']: r#149
[#263 '^']: r#149
[#263 '^=']: r#149
[#263 '{']: r#149
[#263 '|']: r#149
[#263 '|=']: r#149
[#263 '||']: r#149
[#263 /\u200B_greater_than/]: r#149
[#263 /\u200B_greater_than_equal/]: r#149
[#263 /\u200B_less_than/]: r#149
[#263 /\u200B_less_than_equal/]: r#149
[#263 /\u200B_shift_left/]: r#149
[#263 /\u200B_shift_left_assign/]: r#149
[#263 /\u200B_shift_right/]: r#149
[#263 /\u200B_shift_right_assign/]: r#149
[#263 /\u200B_template_args_end/]: r#149
[#264 '!=']: r#150
[#264 '%']: r#150
[#264 '%=']: r#150
[#264 '&&']: r#150
[#264 '&']: r#150
[#264 '&=']: r#150
[#264 ')']: r#150
[#264 '*']: r#150
[#264 '*=']: r#150
[#264 '+']: r#150
[#264 '++']: r#150
[#264 '+=']: r#150
[#264 ',']: r#150
[#264 '-']: r#150
[#264 '--']: r#150
[#264 '-=']: r#150
[#264 '.']: r#150
[#264 '/']: r#150
[#264 '/=']: r#150
[#264 ':']: r#150
[#264 ';']: r#150
[#264 '=']: r#150
[#264 '==']: r#150
[#264 '@']: r#150
[#264 '[']: r#150
[#264 ']']: r#150
[#264 '^']: r#150
[#264 '^=']: r#150
[#264 '{']: r#150
[#264 '|']: r#150
[#264 '|=']: r#150
[#264 '||']: r#150
[#264 /\u200B_greater_than/]: r#150
[#264 /\u200B_greater_than_equal/]: r#150
[#264 /\u200B_less_than/]: r#150
[#264 /\u200B_less_than_equal/]: r#150
[#264 /\u200B_shift_left/]: r#150
[#264 /\u200B_shift_left_assign/]: r#150
[#264 /\u200B_shift_right/]: r#150
[#264 /\u200B_shift_right_assign/]: r#150
[#264 /\u200B_template_args_end/]: r#150
[#265 '!=']: r#151
[#265 '%']: r#151
[#265 '%=']: r#151
[#265 '&&']: r#151
[#265 '&']: r#151
[#265 '&=']: r#151
[#265 ')']: r#151
[#265 '*']: r#151
[#265 '*=']: r#151
[#265 '+']: r#151
[#265 '++']: r#151
[#265 '+=']: r#151
[#265 ',']: r#151
[#265 '-']: r#151
[#265 '--']: r#151
[#265 '-=']: r#151
[#265 '.']: r#151
[#265 '/']: r#151
[#265 '/=']: r#151
[#265 ':']: r#151
[#265 ';']: r#151
[#265 '=']: r#151
[#265 '==']: r#151
[#265 '@']: r#151
[#265 '[']: r#151
[#265 ']']: r#151
[#265 '^']: r#151
[#265 '^=']: r#151
[#265 '{']: r#151
[#265 '|']: r#151
[#265 '|=']: r#151
[#265 '||']: r#151
[#265 /\u200B_greater_than/]: r#151
[#265 /\u200B_greater_than_equal/]: r#151
[#265 /\u200B_less_than/]: r#151
[#265 /\u200B_less_than_equal/]: r#151
[#265 /\u200B_shift_left/]: r#151
[#265 /\u200B_shift_left_assign/]: r#151
[#265 /\u200B_shift_right/]: r#151
[#265 /\u200B_shift_right_assign/]: r#151
[#265 /\u200B_template_args_end/]: r#151
[#266 '!=']: r#152
[#266 '%']: r#152
[#266 '%=']: r#152
[#266 '&&']: r#152
[#266 '&']: r#152
[#266 '&=']: r#152
[#266 ')']: r#152
[#266 '*']: r#152
[#266 '*=']: r#152
[#266 '+']: r#152
[#266 '++']: r#152
[#266 '+=']: r#152
[#266 ',']: r#152
[#266 '-']: r#152
[#266 '--']: r#152
[#266 '-=']: r#152
[#266 '.']: r#152
[#266 '/']: r#152
[#266 '/=']: r#152
[#266 ':']: r#152
[#266 ';']: r#152
[#266 '=']: r#152
[#266 '==']: r#152
[#266 '@']: r#152
[#266 '[']: r#152
[#266 ']']: r#152
[#266 '^']: r#152
[#266 '^=']: r#152
[#266 '{']: r#152
[#266 '|']: r#152
[#266 '|=']: r#152
[#266 '||']: r#152
[#266 /\u200B_greater_than/]: r#152
[#266 /\u200B_greater_than_equal/]: r#152
[#266 /\u200B_less_than/]: r#152
[#266 /\u200B_less_than_equal/]: r#152
[#266 /\u200B_shift_left/]: r#152
[#266 /\u200B_shift_left_assign/]: r#152
[#266 /\u200B_shift_right/]: r#152
[#266 /\u200B_shift_right_assign/]: r#152
[#266 /\u200B_template_args_end/]: r#152
[#267 '!=']: r#153
[#267 '%']: r#153
[#267 '%=']: r#153
[#267 '&&']: r#153
[#267 '&']: r#153
[#267 '&=']: r#153
[#267 ')']: r#153
[#267 '*']: r#153
[#267 '*=']: r#153
[#267 '+']: r#153
[#267 '++']: r#153
[#267 '+=']: r#153
[#267 ',']: r#153
[#267 '-']: r#153
[#267 '--']: r#153
[#267 '-=']: r#153
[#267 '.']: r#153
[#267 '/']: r#153
[#267 '/=']: r#153
[#267 ':']: r#153
[#267 ';']: r#153
[#267 '=']: r#153
[#267 '==']: r#153
[#267 '@']: r#153
[#267 '[']: r#153
[#267 ']']: r#153
[#267 '^']: r#153
[#267 '^=']: r#153
[#267 '{']: r#153
[#267 '|']: r#153
[#267 '|=']: r#153
[#267 '||']: r#153
[#267 /\u200B_greater_than/]: r#153
[#267 /\u200B_greater_than_equal/]: r#153
[#267 /\u200B_less_than/]: r#153
[#267 /\u200B_less_than_equal/]: r#153
[#267 /\u200B_shift_left/]: r#153
[#267 /\u200B_shift_left_assign/]: r#153
[#267 /\u200B_shift_right/]: r#153
[#267 /\u200B_shift_right_assign/]: r#153
[#267 /\u200B_template_args_end/]: r#153
[#268 '!=']: r#154
[#268 '%']: r#154
[#268 '%=']: r#154
[#268 '&&']: r#154
[#268 '&']: r#154
[#268 '&=']: r#154
[#268 ')']: r#154
[#268 '*']: r#154
[#268 '*=']: r#154
[#268 '+']: r#154
[#268 '++']: r#154
[#268 '+=']: r#154
[#268 ',']: r#154
[#268 '-']: r#154
[#268 '--']: r#154
[#268 '-=']: r#154
[#268 '.']: r#154
[#268 '/']: r#154
[#268 '/=']: r#154
[#268 ':']: r#154
[#268 ';']: r#154
[#268 '=']: r#154
[#268 '==']: r#154
[#268 '@']: r#154
[#268 '[']: r#154
[#268 ']']: r#154
[#268 '^']: r#154
[#268 '^=']: r#154
[#268 '{']: r#154
[#268 '|']: r#154
[#268 '|=']: r#154
[#268 '||']: r#154
[#268 /\u200B_greater_than/]: r#154
[#268 /\u200B_greater_than_equal/]: r#154
[#268 /\u200B_less_than/]: r#154
[#268 /\u200B_less_than_equal/]: r#154
[#268 /\u200B_shift_left/]: r#154
[#268 /\u200B_shift_left_assign/]: r#154
[#268 /\u200B_shift_right/]: r#154
[#268 /\u200B_shift_right_assign/]: r#154
[#268 /\u200B_template_args_end/]: r#154
[#269 '!=']: r#155
[#269 '%']: r#155
[#269 '%=']: r#155
[#269 '&&']: r#155
[#269 '&']: r#155
[#269 '&=']: r#155
[#269 ')']: r#155
[#269 '*']: r#155
[#269 '*=']: r#155
[#269 '+']: r#155
[#269 '++']: r#155
[#269 '+=']: r#155
[#269 ',']: r#155
[#269 '-']: r#155
[#269 '--']: r#155
[#269 '-=']: r#155
[#269 '.']: r#155
[#269 '/']: r#155
[#269 '/=']: r#155
[#269 ':']: r#155
[#269 ';']: r#155
[#269 '=']: r#155
[#269 '==']: r#155
[#269 '@']: r#155
[#269 '[']: r#155
[#269 ']']: r#155
[#269 '^']: r#155
[#269 '^=']: r#155
[#269 '{']: r#155
[#269 '|']: r#155
[#269 '|=']: r#155
[#269 '||']: r#155
[#269 /\u200B_greater_than/]: r#155
[#269 /\u200B_greater_than_equal/]: r#155
[#269 /\u200B_less_than/]: r#155
[#269 /\u200B_less_than_equal/]: r#155
[#269 /\u200B_shift_left/]: r#155
[#269 /\u200B_shift_left_assign/]: r#155
[#269 /\u200B_shift_right/]: r#155
[#269 /\u200B_shift_right_assign/]: r#155
[#269 /\u200B_template_args_end/]: r#155
[#270 '!=']: r#156
[#270 '%']: r#156
[#270 '%=']: r#156
[#270 '&&']: r#156
[#270 '&']: r#156
[#270 '&=']: r#156
[#270 ')']: r#156
[#270 '*']: r#156
[#270 '*=']: r#156
[#270 '+']: r#156
[#270 '++']: r#156
[#270 '+=']: r#156
[#270 ',']: r#156
[#270 '-']: r#156
[#270 '--']: r#156
[#270 '-=']: r#156
[#270 '.']: r#156
[#270 '/']: r#156
[#270 '/=']: r#156
[#270 ':']: r#156
[#270 ';']: r#156
[#270 '=']: r#156
[#270 '==']: r#156
[#270 '@']: r#156
[#270 '[']: r#156
[#270 ']']: r#156
[#270 '^']: r#156
[#270 '^=']: r#156
[#270 '{']: r#156
[#270 '|']: r#156
[#270 '|=']: r#156
[#270 '||']: r#156
[#270 /\u200B_greater_than/]: r#156
[#270 /\u200B_greater_than_equal/]: r#156
[#270 /\u200B_less_than/]: r#156
[#270 /\u200B_less_than_equal/]: r#156
[#270 /\u200B_shift_left/]: r#156
[#270 /\u200B_shift_left_assign/]: r#156
[#270 /\u200B_shift_right/]: r#156
[#270 /\u200B_shift_right_assign/]: r#156
[#270 /\u200B_template_args_end/]: r#156
[#271 '!=']: r#157
[#271 '%']: r#157
[#271 '%=']: r#157
[#271 '&&']: r#157
[#271 '&']: r#157
[#271 '&=']: r#157
[#271 ')']: r#157
[#271 '*']: r#157
[#271 '*=']: r#157
[#271 '+']: r#157
[#271 '++']: r#157
[#271 '+=']: r#157
[#271 ',']: r#157
[#271 '-']: r#157
[#271 '--']: r#157
[#271 '-=']: r#157
[#271 '.']: r#157
[#271 '/']: r#157
[#271 '/=']: r#157
[#271 ':']: r#157
[#271 ';']: r#157
[#271 '=']: r#157
[#271 '==']: r#157
[#271 '@']: r#157
[#271 '[']: r#157
[#271 ']']: r#157
[#271 '^']: r#157
[#271 '^=']: r#157
[#271 '{']: r#157
[#271 '|']: r#157
[#271 '|=']: r#157
[#271 '||']: r#157
[#271 /\u200B_greater_than/]: r#157
[#271 /\u200B_greater_than_equal/]: r#157
[#271 /\u200B_less_than/]: r#157
[#271 /\u200B_less_than_equal/]: r#157
[#271 /\u200B_shift_left/]: r#157
[#271 /\u200B_shift_left_assign/]: r#157
[#271 /\u200B_shift_right/]: r#157
[#271 /\u200B_shift_right_assign/]: r#157
[#271 /\u200B_template_args_end/]: r#157
[#272 ']']: s#375
[#273 ')']: s#374
[#274 ')']: r#158
[#275 ',']: s#373
[#276 '!=']: r#159
[#276 '%']: r#159
[#276 '&&']: r#159
[#276 '&']: r#159
[#276 '(']: r#159
[#276 ')']: r#159
[#276 '*']: r#159
[#276 '+']: r#159
[#276 ',']: r#159
[#276 '-']: r#159
[#276 '.']: r#159
[#276 '/']: r#159
[#276 ':']: r#159
[#276 ';']: r#159
[#276 '==']: r#159
[#276 '@']: r#159
[#276 '[']: r#159
[#276 ']']: r#159
[#276 '^']: r#159
[#276 '{']: r#159
[#276 '|']: r#159
[#276 '||']: r#159
[#276 /\u200B_greater_than/]: r#159
[#276 /\u200B_greater_than_equal/]: r#159
[#276 /\u200B_less_than/]: r#159
[#276 /\u200B_less_than_equal/]: r#159
[#276 /\u200B_shift_left/]: r#159
[#276 /\u200B_shift_right/]: r#159
[#276 /\u200B_template_args_end/]: r#159
[#277 '!=']: r#160
[#277 '%']: r#160
[#277 '&&']: r#160
[#277 '&']: r#160
[#277 '(']: r#160
[#277 ')']: r#160
[#277 '*']: r#160
[#277 '+']: r#160
[#277 ',']: r#160
[#277 '-']: r#160
[#277 '.']: r#160
[#277 '/']: r#160
[#277 ':']: r#160
[#277 ';']: r#160
[#277 '=']: r#160
[#277 '==']: r#160
[#277 '@']: r#160
[#277 '[']: r#160
[#277 ']']: r#160
[#277 '^']: r#160
[#277 '{']: r#160
[#277 '|']: r#160
[#277 '||']: r#160
[#277 '}']: r#160
[#277 /\u200B_greater_than/]: r#160
[#277 /\u200B_greater_than_equal/]: r#160
[#277 /\u200B_less_than/]: r#160
[#277 /\u200B_less_than_equal/]: r#160
[#277 /\u200B_shift_left/]: r#160
[#277 /\u200B_shift_right/]: r#160
[#277 /\u200B_template_args_end/]: r#160
[#278 '!']: s#95
[#278 '&']: s#98
[#278 '(']: s#108
[#278 '*']: s#97
[#278 '-']: s#94
[#278 'false']: s#115
[#278 'true']: s#114
[#278 '~']: s#96
[#278 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#278 /0[fh]/]: s#119
[#278 /0[iu]?/]: s#116
[#278 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#278 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#278 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#278 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#278 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#278 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#278 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#278 /[1-9][0-9]*[fh]/]: s#120
[#278 /[1-9][0-9]*[iu]?/]: s#117
[#279 '!']: r#161
[#279 '&']: r#161
[#279 '(']: r#161
[#279 '*']: r#161
[#279 '-']: r#161
[#279 'false']: r#161
[#279 'true']: r#161
[#279 '~']: r#161
[#279 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#161
[#279 /0[fh]/]: r#161
[#279 /0[iu]?/]: r#161
[#279 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#161
[#279 /0[xX][0-9a-fA-F]+[iu]?/]: r#161
[#279 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#161
[#279 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#161
[#279 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#161
[#279 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#161
[#279 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#161
[#279 /[1-9][0-9]*[fh]/]: r#161
[#279 /[1-9][0-9]*[iu]?/]: r#161
[#280 '!=']: r#162
[#280 '%']: r#162
[#280 '&&']: r#162
[#280 '&']: r#162
[#280 ')']: r#162
[#280 '*']: r#162
[#280 '+']: r#162
[#280 ',']: r#162
[#280 '-']: r#162
[#280 '.']: r#162
[#280 '/']: r#162
[#280 ':']: r#162
[#280 ';']: r#162
[#280 '==']: r#162
[#280 '@']: r#162
[#280 '[']: r#162
[#280 ']']: r#162
[#280 '^']: r#162
[#280 '{']: r#162
[#280 '|']: r#162
[#280 '||']: r#162
[#280 /\u200B_greater_than/]: r#162
[#280 /\u200B_greater_than_equal/]: r#162
[#280 /\u200B_less_than/]: r#162
[#280 /\u200B_less_than_equal/]: r#162
[#280 /\u200B_shift_left/]: r#162
[#280 /\u200B_shift_right/]: r#162
[#280 /\u200B_template_args_end/]: r#162
[#281 '{']: r#163
[#282 '&']: s#362
[#282 '(']: s#363
[#282 '*']: s#361
[#282 ';']: s#321
[#282 '@']: s#41
[#282 '_']: s#358
[#282 'break']: s#346
[#282 'const']: s#345
[#282 'const_assert']: s#36
[#282 'continue']: s#347
[#282 'discard']: s#332
[#282 'let']: s#344
[#282 'return']: s#336
[#282 'var']: s#135
[#282 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#283 '@']: s#41
[#284 ',']: s#311
[#285 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#263
[#286 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#164
[#287 '@']: s#41
[#288 ';']: r#165
[#289 /\u200B_disambiguate_template/]: s#164
[#290 ';']: r#166
[#291 '!']: s#95
[#291 '&']: s#98
[#291 '(']: s#108
[#291 '*']: s#97
[#291 '-']: s#94
[#291 'false']: s#115
[#291 'true']: s#114
[#291 '~']: s#96
[#291 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#291 /0[fh]/]: s#119
[#291 /0[iu]?/]: s#116
[#291 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#291 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#291 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#291 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#291 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#291 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#291 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#291 /[1-9][0-9]*[fh]/]: s#120
[#291 /[1-9][0-9]*[iu]?/]: s#117
[#292 ';']: r#167
[#293 ';']: r#168
[#293 '=']: r#168
[#294 ';']: r#169
[#295 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#296 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#170
[#297 ',']: s#302
[#298 ')']: r#171
[#298 ',']: r#171
[#298 '.']: s#300
[#299 ')']: r#172
[#299 ',']: r#172
[#299 '.']: r#172
[#300 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#299
[#301 ')']: s#492
[#302 ')']: r#173
[#303 ';']: r#174
[#303 '=']: r#174
[#304 ';']: r#175
[#305 /\u200B_template_args_start/]: s#279
[#306 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#176
[#307 ':']: s#490
[#308 ',']: s#489
[#309 ',']: r#177
[#309 '}']: r#177
[#310 ',']: s#311
[#311 '@']: s#41
[#312 ')']: s#485
[#313 ')']: r#178
[#314 ',']: s#484
[#315 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#316 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#179
[#317 '@']: s#41
[#318 '}']: s#478
[#319 '}']: r#180
[#320 '&']: s#362
[#320 '(']: s#363
[#320 '*']: s#361
[#320 ';']: s#321
[#320 '@']: s#41
[#320 '_']: s#358
[#320 'break']: s#346
[#320 'const']: s#345
[#320 'const_assert']: s#36
[#320 'continue']: s#347
[#320 'discard']: s#332
[#320 'let']: s#344
[#320 'return']: s#336
[#320 'var']: s#135
[#320 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#321 '&']: r#181
[#321 '(']: r#181
[#321 '*']: r#181
[#321 ';']: r#181
[#321 '@']: r#181
[#321 '_']: r#181
[#321 'break']: r#181
[#321 'const']: r#181
[#321 'const_assert']: r#181
[#321 'continue']: r#181
[#321 'continuing']: r#181
[#321 'discard']: r#181
[#321 'for']: r#181
[#321 'if']: r#181
[#321 'let']: r#181
[#321 'loop']: r#181
[#321 'return']: r#181
[#321 'switch']: r#181
[#321 'var']: r#181
[#321 'while']: r#181
[#321 '{']: r#181
[#321 '}']: r#181
[#321 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#181
[#322 ';']: s#476
[#323 '&']: r#182
[#323 '(']: r#182
[#323 '*']: r#182
[#323 ';']: r#182
[#323 '@']: r#182
[#323 '_']: r#182
[#323 'break']: r#182
[#323 'const']: r#182
[#323 'const_assert']: r#182
[#323 'continue']: r#182
[#323 'continuing']: r#182
[#323 'discard']: r#182
[#323 'for']: r#182
[#323 'if']: r#182
[#323 'let']: r#182
[#323 'loop']: r#182
[#323 'return']: r#182
[#323 'switch']: r#182
[#323 'var']: r#182
[#323 'while']: r#182
[#323 '{']: r#182
[#323 '}']: r#182
[#323 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#182
[#324 '&']: r#183
[#324 '(']: r#183
[#324 '*']: r#183
[#324 ';']: r#183
[#324 '@']: r#183
[#324 '_']: r#183
[#324 'break']: r#183
[#324 'const']: r#183
[#324 'const_assert']: r#183
[#324 'continue']: r#183
[#324 'continuing']: r#183
[#324 'discard']: r#183
[#324 'for']: r#183
[#324 'if']: r#183
[#324 'let']: r#183
[#324 'loop']: r#183
[#324 'return']: r#183
[#324 'switch']: r#183
[#324 'var']: r#183
[#324 'while']: r#183
[#324 '{']: r#183
[#324 '}']: r#183
[#324 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#183
[#325 '&']: r#184
[#325 '(']: r#184
[#325 '*']: r#184
[#325 ';']: r#184
[#325 '@']: r#184
[#325 '_']: r#184
[#325 'break']: r#184
[#325 'const']: r#184
[#325 'const_assert']: r#184
[#325 'continue']: r#184
[#325 'continuing']: r#184
[#325 'discard']: r#184
[#325 'for']: r#184
[#325 'if']: r#184
[#325 'let']: r#184
[#325 'loop']: r#184
[#325 'return']: r#184
[#325 'switch']: r#184
[#325 'var']: r#184
[#325 'while']: r#184
[#325 '{']: r#184
[#325 '}']: r#184
[#325 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#326 '&']: r#185
[#326 '(']: r#185
[#326 '*']: r#185
[#326 ';']: r#185
[#326 '@']: r#185
[#326 '_']: r#185
[#326 'break']: r#185
[#326 'const']: r#185
[#326 'const_assert']: r#185
[#326 'continue']: r#185
[#326 'continuing']: r#185
[#326 'discard']: r#185
[#326 'for']: r#185
[#326 'if']: r#185
[#326 'let']: r#185
[#326 'loop']: r#185
[#326 'return']: r#185
[#326 'switch']: r#185
[#326 'var']: r#185
[#326 'while']: r#185
[#326 '{']: r#185
[#326 '}']: r#185
[#326 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#327 '&']: r#186
[#327 '(']: r#186
[#327 '*']: r#186
[#327 ';']: r#186
[#327 '@']: r#186
[#327 '_']: r#186
[#327 'break']: r#186
[#327 'const']: r#186
[#327 'const_assert']: r#186
[#327 'continue']: r#186
[#327 'continuing']: r#186
[#327 'discard']: r#186
[#327 'for']: r#186
[#327 'if']: r#186
[#327 'let']: r#186
[#327 'loop']: r#186
[#327 'return']: r#186
[#327 'switch']: r#186
[#327 'var']: r#186
[#327 'while']: r#186
[#327 '{']: r#186
[#327 '}']: r#186
[#327 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#186
[#328 ';']: s#475
[#329 ';']: s#474
[#330 ';']: s#473
[#331 ';']: s#472
[#332 ';']: s#471
[#333 ';']: s#470
[#334 '&']: r#187
[#334 '(']: r#187
[#334 '*']: r#187
[#334 ';']: r#187
[#334 '@']: r#187
[#334 '_']: r#187
[#334 'break']: r#187
[#334 'const']: r#187
[#334 'const_assert']: r#187
[#334 'continue']: r#187
[#334 'continuing']: r#187
[#334 'discard']: r#187
[#334 'for']: r#187
[#334 'if']: r#187
[#334 'let']: r#187
[#334 'loop']: r#187
[#334 'return']: r#187
[#334 'switch']: r#187
[#334 'var']: r#187
[#334 'while']: r#187
[#334 '{']: r#187
[#334 '}']: r#187
[#334 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#187
[#335 ';']: s#469
[#336 '!']: s#95
[#336 '&']: s#98
[#336 '(']: s#108
[#336 '*']: s#97
[#336 '-']: s#94
[#336 'false']: s#115
[#336 'true']: s#114
[#336 '~']: s#96
[#336 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#336 /0[fh]/]: s#119
[#336 /0[iu]?/]: s#116
[#336 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#336 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#336 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#336 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#336 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#336 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#336 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#336 /[1-9][0-9]*[fh]/]: s#120
[#336 /[1-9][0-9]*[iu]?/]: s#117
[#337 'if']: s#466
[#338 'switch']: s#464
[#339 'loop']: s#463
[#340 'for']: s#462
[#341 'while']: s#461
[#342 '(']: s#183
[#343 ';']: r#188
[#343 '=']: s#459
[#344 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#345 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#346 ';']: r#189
[#347 ';']: r#190
[#348 ')']: r#191
[#348 ';']: r#191
[#349 ')']: r#192
[#349 ';']: r#192
[#350 ')']: r#193
[#350 ';']: r#193
[#351 'if']: r#194
[#352 'switch']: r#195
[#353 'loop']: r#196
[#354 'for']: r#197
[#355 'while']: r#198
[#356 /\u200B_disambiguate_template/]: s#164
[#357 '%=']: s#448
[#357 '&=']: s#449
[#357 '*=']: s#446
[#357 '++']: s#440
[#357 '+=']: s#444
[#357 '--']: s#441
[#357 '-=']: s#445
[#357 '/=']: s#447
[#357 '=']: s#442
[#357 '^=']: s#451
[#357 '|=']: s#450
[#357 /\u200B_shift_left_assign/]: s#455
[#357 /\u200B_shift_right_assign/]: s#454
[#358 '=']: s#438
[#359 '@']: s#41
[#360 '.']: s#187
[#360 '[']: s#186
[#361 '&']: s#362
[#361 '(']: s#363
[#361 '*']: s#361
[#361 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#362 '&']: s#362
[#362 '(']: s#363
[#362 '*']: s#361
[#362 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#363 '&']: s#362
[#363 '(']: s#363
[#363 '*']: s#361
[#363 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#364 /\u200B_template_args_end/]: s#426
[#365 ',']: s#424
[#366 '&&']: r#45
[#366 ',']: r#199
[#366 '||']: r#44
[#366 /\u200B_template_args_end/]: r#199
[#367 '||']: s#420
[#368 '&&']: s#419
[#369 ',']: r#200
[#369 /\u200B_template_args_end/]: r#200
[#370 ',']: s#418
[#371 ')']: r#201
[#371 ',']: r#201
[#372 ',']: s#373
[#373 '!']: s#95
[#373 '&']: s#98
[#373 '(']: s#108
[#373 '*']: s#97
[#373 '-']: s#94
[#373 'false']: s#115
[#373 'true']: s#114
[#373 '~']: s#96
[#373 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#373 /0[fh]/]: s#119
[#373 /0[iu]?/]: s#116
[#373 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#373 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#373 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#373 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#373 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#373 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#373 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#373 /[1-9][0-9]*[fh]/]: s#120
[#373 /[1-9][0-9]*[iu]?/]: s#117
[#374 '!=']: r#202
[#374 '%']: r#202
[#374 '&&']: r#202
[#374 '&']: r#202
[#374 ')']: r#202
[#374 '*']: r#202
[#374 '+']: r#202
[#374 ',']: r#202
[#374 '-']: r#202
[#374 '.']: r#202
[#374 '/']: r#202
[#374 ':']: r#202
[#374 ';']: r#202
[#374 '==']: r#202
[#374 '@']: r#202
[#374 '[']: r#202
[#374 ']']: r#202
[#374 '^']: r#202
[#374 'fn']: r#202
[#374 'for']: r#202
[#374 'if']: r#202
[#374 'loop']: r#202
[#374 'override']: r#202
[#374 'switch']: r#202
[#374 'var']: r#202
[#374 'while']: r#202
[#374 '{']: r#202
[#374 '|']: r#202
[#374 '||']: r#202
[#374 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#202
[#374 /\u200B_greater_than/]: r#202
[#374 /\u200B_greater_than_equal/]: r#202
[#374 /\u200B_less_than/]: r#202
[#374 /\u200B_less_than_equal/]: r#202
[#374 /\u200B_shift_left/]: r#202
[#374 /\u200B_shift_right/]: r#202
[#374 /\u200B_template_args_end/]: r#202
[#375 '.']: s#187
[#375 '[']: s#186
[#376 '!=']: r#203
[#376 '%']: r#203
[#376 '%=']: r#203
[#376 '&&']: r#203
[#376 '&']: r#203
[#376 '&=']: r#203
[#376 ')']: r#203
[#376 '*']: r#203
[#376 '*=']: r#203
[#376 '+']: r#203
[#376 '++']: r#203
[#376 '+=']: r#203
[#376 ',']: r#203
[#376 '-']: r#203
[#376 '--']: r#203
[#376 '-=']: r#203
[#376 '/']: r#203
[#376 '/=']: r#203
[#376 ':']: r#203
[#376 ';']: r#203
[#376 '=']: r#203
[#376 '==']: r#203
[#376 '@']: r#203
[#376 ']']: r#203
[#376 '^']: r#203
[#376 '^=']: r#203
[#376 '{']: r#203
[#376 '|']: r#203
[#376 '|=']: r#203
[#376 '||']: r#203
[#376 /\u200B_greater_than/]: r#203
[#376 /\u200B_greater_than_equal/]: r#203
[#376 /\u200B_less_than/]: r#203
[#376 /\u200B_less_than_equal/]: r#203
[#376 /\u200B_shift_left/]: r#203
[#376 /\u200B_shift_left_assign/]: r#203
[#376 /\u200B_shift_right/]: r#203
[#376 /\u200B_shift_right_assign/]: r#203
[#376 /\u200B_template_args_end/]: r#203
[#377 '!=']: r#204
[#377 '%']: r#204
[#377 '%=']: r#204
[#377 '&&']: r#204
[#377 '&']: r#204
[#377 '&=']: r#204
[#377 ')']: r#204
[#377 '*']: r#204
[#377 '*=']: r#204
[#377 '+']: r#204
[#377 '++']: r#204
[#377 '+=']: r#204
[#377 ',']: r#204
[#377 '-']: r#204
[#377 '--']: r#204
[#377 '-=']: r#204
[#377 '/']: r#204
[#377 '/=']: r#204
[#377 ':']: r#204
[#377 ';']: r#204
[#377 '=']: r#204
[#377 '==']: r#204
[#377 '@']: r#204
[#377 ']']: r#204
[#377 '^']: r#204
[#377 '^=']: r#204
[#377 '{']: r#204
[#377 '|']: r#204
[#377 '|=']: r#204
[#377 '||']: r#204
[#377 /\u200B_greater_than/]: r#204
[#377 /\u200B_greater_than_equal/]: r#204
[#377 /\u200B_less_than/]: r#204
[#377 /\u200B_less_than_equal/]: r#204
[#377 /\u200B_shift_left/]: r#204
[#377 /\u200B_shift_left_assign/]: r#204
[#377 /\u200B_shift_right/]: r#204
[#377 /\u200B_shift_right_assign/]: r#204
[#377 /\u200B_template_args_end/]: r#204
[#378 '!=']: r#205
[#378 '%']: r#205
[#378 '%=']: r#205
[#378 '&&']: r#205
[#378 '&']: r#205
[#378 '&=']: r#205
[#378 ')']: r#205
[#378 '*']: r#205
[#378 '*=']: r#205
[#378 '+']: r#205
[#378 '++']: r#205
[#378 '+=']: r#205
[#378 ',']: r#205
[#378 '-']: r#205
[#378 '--']: r#205
[#378 '-=']: r#205
[#378 '/']: r#205
[#378 '/=']: r#205
[#378 ':']: r#205
[#378 ';']: r#205
[#378 '=']: r#205
[#378 '==']: r#205
[#378 '@']: r#205
[#378 ']']: r#205
[#378 '^']: r#205
[#378 '^=']: r#205
[#378 '{']: r#205
[#378 '|']: r#205
[#378 '|=']: r#205
[#378 '||']: r#205
[#378 /\u200B_greater_than/]: r#205
[#378 /\u200B_greater_than_equal/]: r#205
[#378 /\u200B_less_than/]: r#205
[#378 /\u200B_less_than_equal/]: r#205
[#378 /\u200B_shift_left/]: r#205
[#378 /\u200B_shift_left_assign/]: r#205
[#378 /\u200B_shift_right/]: r#205
[#378 /\u200B_shift_right_assign/]: r#205
[#378 /\u200B_template_args_end/]: r#205
[#379 '!=']: r#206
[#379 '%']: r#206
[#379 '%=']: r#206
[#379 '&&']: r#206
[#379 '&']: r#206
[#379 '&=']: r#206
[#379 ')']: r#206
[#379 '*']: r#206
[#379 '*=']: r#206
[#379 '+']: r#206
[#379 '++']: r#206
[#379 '+=']: r#206
[#379 ',']: r#206
[#379 '-']: r#206
[#379 '--']: r#206
[#379 '-=']: r#206
[#379 '/']: r#206
[#379 '/=']: r#206
[#379 ':']: r#206
[#379 ';']: r#206
[#379 '=']: r#206
[#379 '==']: r#206
[#379 '@']: r#206
[#379 ']']: r#206
[#379 '^']: r#206
[#379 '^=']: r#206
[#379 '{']: r#206
[#379 '|']: r#206
[#379 '|=']: r#206
[#379 '||']: r#206
[#379 /\u200B_greater_than/]: r#206
[#379 /\u200B_greater_than_equal/]: r#206
[#379 /\u200B_less_than/]: r#206
[#379 /\u200B_less_than_equal/]: r#206
[#379 /\u200B_shift_left/]: r#206
[#379 /\u200B_shift_left_assign/]: r#206
[#379 /\u200B_shift_right/]: r#206
[#379 /\u200B_shift_right_assign/]: r#206
[#379 /\u200B_template_args_end/]: r#206
[#380 ')']: s#412
[#381 '!']: s#95
[#381 '&']: s#98
[#381 '(']: s#108
[#381 ')']: r#207
[#381 '*']: s#97
[#381 '-']: s#94
[#381 'false']: s#115
[#381 'true']: s#114
[#381 '~']: s#96
[#381 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#381 /0[fh]/]: s#119
[#381 /0[iu]?/]: s#116
[#381 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#381 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#381 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#381 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#381 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#381 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#381 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#381 /[1-9][0-9]*[fh]/]: s#120
[#381 /[1-9][0-9]*[iu]?/]: s#117
[#382 ')']: s#410
[#383 ')']: r#208
[#384 ')']: s#409
[#385 ')']: r#209
[#386 ')']: s#408
[#387 ')']: r#210
[#387 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#407
[#388 ')']: s#405
[#389 ')']: r#211
[#390 ')']: s#404
[#391 ')']: r#212
[#392 ')']: s#403
[#393 ')']: r#213
[#394 ')']: s#402
[#395 ')']: r#214
[#396 ')']: s#401
[#397 ')']: r#215
[#398 ')']: s#400
[#399 ')']: r#216
[#400 '@']: r#217
[#400 'fn']: r#217
[#400 'for']: r#217
[#400 'if']: r#217
[#400 'loop']: r#217
[#400 'override']: r#217
[#400 'switch']: r#217
[#400 'var']: r#217
[#400 'while']: r#217
[#400 '{']: r#217
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#217
[#401 '@']: r#218
[#401 'fn']: r#218
[#401 'for']: r#218
[#401 'if']: r#218
[#401 'loop']: r#218
[#401 'override']: r#218
[#401 'switch']: r#218
[#401 'var']: r#218
[#401 'while']: r#218
[#401 '{']: r#218
[#401 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#218
[#402 '@']: r#219
[#402 'fn']: r#219
[#402 'for']: r#219
[#402 'if']: r#219
[#402 'loop']: r#219
[#402 'override']: r#219
[#402 'switch']: r#219
[#402 'var']: r#219
[#402 'while']: r#219
[#402 '{']: r#219
[#402 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#219
[#403 '@']: r#220
[#403 'fn']: r#220
[#403 'for']: r#220
[#403 'if']: r#220
[#403 'loop']: r#220
[#403 'override']: r#220
[#403 'switch']: r#220
[#403 'var']: r#220
[#403 'while']: r#220
[#403 '{']: r#220
[#403 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#220
[#404 '@']: r#221
[#404 'fn']: r#221
[#404 'for']: r#221
[#404 'if']: r#221
[#404 'loop']: r#221
[#404 'override']: r#221
[#404 'switch']: r#221
[#404 'var']: r#221
[#404 'while']: r#221
[#404 '{']: r#221
[#404 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#405 '@']: r#222
[#405 'fn']: r#222
[#405 'for']: r#222
[#405 'if']: r#222
[#405 'loop']: r#222
[#405 'override']: r#222
[#405 'switch']: r#222
[#405 'var']: r#222
[#405 'while']: r#222
[#405 '{']: r#222
[#405 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#406 ',']: s#530
[#407 ')']: r#223
[#407 ',']: r#223
[#408 '@']: r#224
[#408 'fn']: r#224
[#408 'for']: r#224
[#408 'if']: r#224
[#408 'loop']: r#224
[#408 'override']: r#224
[#408 'switch']: r#224
[#408 'var']: r#224
[#408 'while']: r#224
[#408 '{']: r#224
[#408 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#224
[#409 '@']: r#225
[#409 'fn']: r#225
[#409 'for']: r#225
[#409 'if']: r#225
[#409 'loop']: r#225
[#409 'override']: r#225
[#409 'switch']: r#225
[#409 'var']: r#225
[#409 'while']: r#225
[#409 '{']: r#225
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#225
[#410 '@']: r#226
[#410 'fn']: r#226
[#410 'for']: r#226
[#410 'if']: r#226
[#410 'loop']: r#226
[#410 'override']: r#226
[#410 'switch']: r#226
[#410 'var']: r#226
[#410 'while']: r#226
[#410 '{']: r#226
[#410 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#226
[#411 ',']: s#528
[#412 '@']: r#227
[#412 'fn']: r#227
[#412 'for']: r#227
[#412 'if']: r#227
[#412 'loop']: r#227
[#412 'override']: r#227
[#412 'switch']: r#227
[#412 'var']: r#227
[#412 'while']: r#227
[#412 '{']: r#227
[#412 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#227
[#413 '!=']: r#228
[#413 '%']: r#228
[#413 '%=']: r#228
[#413 '&&']: r#228
[#413 '&']: r#228
[#413 '&=']: r#228
[#413 ')']: r#228
[#413 '*']: r#228
[#413 '*=']: r#228
[#413 '+']: r#228
[#413 '++']: r#228
[#413 '+=']: r#228
[#413 ',']: r#228
[#413 '-']: r#228
[#413 '--']: r#228
[#413 '-=']: r#228
[#413 '/']: r#228
[#413 '/=']: r#228
[#413 ':']: r#228
[#413 ';']: r#228
[#413 '=']: r#228
[#413 '==']: r#228
[#413 '@']: r#228
[#413 ']']: r#228
[#413 '^']: r#228
[#413 '^=']: r#228
[#413 '{']: r#228
[#413 '|']: r#228
[#413 '|=']: r#228
[#413 '||']: r#228
[#413 /\u200B_greater_than/]: r#228
[#413 /\u200B_greater_than_equal/]: r#228
[#413 /\u200B_less_than/]: r#228
[#413 /\u200B_less_than_equal/]: r#228
[#413 /\u200B_shift_left/]: r#228
[#413 /\u200B_shift_left_assign/]: r#228
[#413 /\u200B_shift_right/]: r#228
[#413 /\u200B_shift_right_assign/]: r#228
[#413 /\u200B_template_args_end/]: r#228
[#414 '!=']: r#229
[#414 '%']: r#229
[#414 '%=']: r#229
[#414 '&&']: r#229
[#414 '&']: r#229
[#414 '&=']: r#229
[#414 ')']: r#229
[#414 '*']: r#229
[#414 '*=']: r#229
[#414 '+']: r#229
[#414 '++']: r#229
[#414 '+=']: r#229
[#414 ',']: r#229
[#414 '-']: r#229
[#414 '--']: r#229
[#414 '-=']: r#229
[#414 '/']: r#229
[#414 '/=']: r#229
[#414 ':']: r#229
[#414 ';']: r#229
[#414 '=']: r#229
[#414 '==']: r#229
[#414 '@']: r#229
[#414 ']']: r#229
[#414 '^']: r#229
[#414 '^=']: r#229
[#414 '{']: r#229
[#414 '|']: r#229
[#414 '|=']: r#229
[#414 '||']: r#229
[#414 /\u200B_greater_than/]: r#229
[#414 /\u200B_greater_than_equal/]: r#229
[#414 /\u200B_less_than/]: r#229
[#414 /\u200B_less_than_equal/]: r#229
[#414 /\u200B_shift_left/]: r#229
[#414 /\u200B_shift_left_assign/]: r#229
[#414 /\u200B_shift_right/]: r#229
[#414 /\u200B_shift_right_assign/]: r#229
[#414 /\u200B_template_args_end/]: r#229
[#415 ')']: r#230
[#415 ',']: r#230
[#416 ')']: r#231
[#416 ',']: r#231
[#417 ')']: r#232
[#418 ')']: r#233
[#419 '!']: s#95
[#419 '&']: s#98
[#419 '(']: s#108
[#419 '*']: s#97
[#419 '-']: s#94
[#419 'false']: s#115
[#419 'true']: s#114
[#419 '~']: s#96
[#419 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#419 /0[fh]/]: s#119
[#419 /0[iu]?/]: s#116
[#419 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#419 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#419 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#419 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#419 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#419 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#419 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#419 /[1-9][0-9]*[fh]/]: s#120
[#419 /[1-9][0-9]*[iu]?/]: s#117
[#420 '!']: s#95
[#420 '&']: s#98
[#420 '(']: s#108
[#420 '*']: s#97
[#420 '-']: s#94
[#420 'false']: s#115
[#420 'true']: s#114
[#420 '~']: s#96
[#420 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#420 /0[fh]/]: s#119
[#420 /0[iu]?/]: s#116
[#420 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#420 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#420 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#420 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#420 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#420 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#420 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#420 /[1-9][0-9]*[fh]/]: s#120
[#420 /[1-9][0-9]*[iu]?/]: s#117
[#421 ',']: s#524
[#422 ',']: r#234
[#422 /\u200B_template_args_end/]: r#234
[#423 ',']: s#424
[#424 '!']: s#95
[#424 '&']: s#98
[#424 '(']: s#108
[#424 '*']: s#97
[#424 '-']: s#94
[#424 'false']: s#115
[#424 'true']: s#114
[#424 '~']: s#96
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#424 /0[fh]/]: s#119
[#424 /0[iu]?/]: s#116
[#424 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#424 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#424 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#424 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#424 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#424 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#424 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#424 /[1-9][0-9]*[fh]/]: s#120
[#424 /[1-9][0-9]*[iu]?/]: s#117
[#425 '!=']: r#235
[#425 '%']: r#235
[#425 '&&']: r#235
[#425 '&']: r#235
[#425 '(']: r#235
[#425 ')']: r#235
[#425 '*']: r#235
[#425 '+']: r#235
[#425 ',']: r#235
[#425 '-']: r#235
[#425 '.']: r#235
[#425 '/']: r#235
[#425 ':']: r#235
[#425 ';']: r#235
[#425 '=']: r#235
[#425 '==']: r#235
[#425 '@']: r#235
[#425 '[']: r#235
[#425 ']']: r#235
[#425 '^']: r#235
[#425 '{']: r#235
[#425 '|']: r#235
[#425 '||']: r#235
[#425 '}']: r#235
[#425 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#235
[#425 /\u200B_greater_than/]: r#235
[#425 /\u200B_greater_than_equal/]: r#235
[#425 /\u200B_less_than/]: r#235
[#425 /\u200B_less_than_equal/]: r#235
[#425 /\u200B_shift_left/]: r#235
[#425 /\u200B_shift_right/]: r#235
[#425 /\u200B_template_args_end/]: r#235
[#426 '!=']: r#236
[#426 '%']: r#236
[#426 '&&']: r#236
[#426 '&']: r#236
[#426 '(']: r#236
[#426 ')']: r#236
[#426 '*']: r#236
[#426 '+']: r#236
[#426 ',']: r#236
[#426 '-']: r#236
[#426 '.']: r#236
[#426 '/']: r#236
[#426 ':']: r#236
[#426 ';']: r#236
[#426 '=']: r#236
[#426 '==']: r#236
[#426 '@']: r#236
[#426 '[']: r#236
[#426 ']']: r#236
[#426 '^']: r#236
[#426 '{']: r#236
[#426 '|']: r#236
[#426 '||']: r#236
[#426 '}']: r#236
[#426 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#236
[#426 /\u200B_greater_than/]: r#236
[#426 /\u200B_greater_than_equal/]: r#236
[#426 /\u200B_less_than/]: r#236
[#426 /\u200B_less_than_equal/]: r#236
[#426 /\u200B_shift_left/]: r#236
[#426 /\u200B_shift_right/]: r#236
[#426 /\u200B_template_args_end/]: r#236
[#427 ')']: s#520
[#428 /\u200B_disambiguate_template/]: s#164
[#429 '%=']: r#237
[#429 '&=']: r#237
[#429 ')']: r#237
[#429 '*=']: r#237
[#429 '++']: r#237
[#429 '+=']: r#237
[#429 '--']: r#237
[#429 '-=']: r#237
[#429 '/=']: r#237
[#429 '=']: r#237
[#429 '^=']: r#237
[#429 '|=']: r#237
[#429 /\u200B_shift_left_assign/]: r#237
[#429 /\u200B_shift_right_assign/]: r#237
[#430 '%=']: r#238
[#430 '&=']: r#238
[#430 ')']: r#238
[#430 '*=']: r#238
[#430 '++']: r#238
[#430 '+=']: r#238
[#430 '--']: r#238
[#430 '-=']: r#238
[#430 '/=']: r#238
[#430 '=']: r#238
[#430 '^=']: r#238
[#430 '|=']: r#238
[#430 /\u200B_shift_left_assign/]: r#238
[#430 /\u200B_shift_right_assign/]: r#238
[#431 '%=']: r#239
[#431 '&=']: r#239
[#431 ')']: r#239
[#431 '*=']: r#239
[#431 '++']: r#239
[#431 '+=']: r#239
[#431 '--']: r#239
[#431 '-=']: r#239
[#431 '/=']: r#239
[#431 '=']: r#239
[#431 '^=']: r#239
[#431 '|=']: r#239
[#431 /\u200B_shift_left_assign/]: r#239
[#431 /\u200B_shift_right_assign/]: r#239
[#432 '%=']: r#240
[#432 '&=']: r#240
[#432 ')']: r#240
[#432 '*=']: r#240
[#432 '++']: r#240
[#432 '+=']: r#240
[#432 '--']: r#240
[#432 '-=']: r#240
[#432 '/=']: r#240
[#432 '=']: r#240
[#432 '^=']: r#240
[#432 '|=']: r#240
[#432 /\u200B_shift_left_assign/]: r#240
[#432 /\u200B_shift_right_assign/]: r#240
[#433 'if']: r#241
[#434 'switch']: r#242
[#435 'loop']: r#243
[#436 'for']: r#244
[#437 'while']: r#245
[#438 '!']: s#95
[#438 '&']: s#98
[#438 '(']: s#108
[#438 '*']: s#97
[#438 '-']: s#94
[#438 'false']: s#115
[#438 'true']: s#114
[#438 '~']: s#96
[#438 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#438 /0[fh]/]: s#119
[#438 /0[iu]?/]: s#116
[#438 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#438 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#438 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#438 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#438 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#438 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#438 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#438 /[1-9][0-9]*[fh]/]: s#120
[#438 /[1-9][0-9]*[iu]?/]: s#117
[#439 '!']: s#95
[#439 '&']: s#98
[#439 '(']: s#108
[#439 '*']: s#97
[#439 '-']: s#94
[#439 'false']: s#115
[#439 'true']: s#114
[#439 '~']: s#96
[#439 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#439 /0[fh]/]: s#119
[#439 /0[iu]?/]: s#116
[#439 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#439 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#439 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#439 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#439 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#439 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#439 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#439 /[1-9][0-9]*[fh]/]: s#120
[#439 /[1-9][0-9]*[iu]?/]: s#117
[#440 ')']: r#246
[#440 ';']: r#246
[#441 ')']: r#247
[#441 ';']: r#247
[#442 '!']: r#248
[#442 '&']: r#248
[#442 '(']: r#248
[#442 '*']: r#248
[#442 '-']: r#248
[#442 'false']: r#248
[#442 'true']: r#248
[#442 '~']: r#248
[#442 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#248
[#442 /0[fh]/]: r#248
[#442 /0[iu]?/]: r#248
[#442 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#248
[#442 /0[xX][0-9a-fA-F]+[iu]?/]: r#248
[#442 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#248
[#442 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#248
[#442 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#248
[#442 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#248
[#442 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#248
[#442 /[1-9][0-9]*[fh]/]: r#248
[#442 /[1-9][0-9]*[iu]?/]: r#248
[#443 '!']: r#249
[#443 '&']: r#249
[#443 '(']: r#249
[#443 '*']: r#249
[#443 '-']: r#249
[#443 'false']: r#249
[#443 'true']: r#249
[#443 '~']: r#249
[#443 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#249
[#443 /0[fh]/]: r#249
[#443 /0[iu]?/]: r#249
[#443 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#249
[#443 /0[xX][0-9a-fA-F]+[iu]?/]: r#249
[#443 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#249
[#443 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#249
[#443 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#249
[#443 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#249
[#443 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#249
[#443 /[1-9][0-9]*[fh]/]: r#249
[#443 /[1-9][0-9]*[iu]?/]: r#249
[#444 '!']: r#250
[#444 '&']: r#250
[#444 '(']: r#250
[#444 '*']: r#250
[#444 '-']: r#250
[#444 'false']: r#250
[#444 'true']: r#250
[#444 '~']: r#250
[#444 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#250
[#444 /0[fh]/]: r#250
[#444 /0[iu]?/]: r#250
[#444 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#250
[#444 /0[xX][0-9a-fA-F]+[iu]?/]: r#250
[#444 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#250
[#444 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#250
[#444 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#250
[#444 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#250
[#444 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#250
[#444 /[1-9][0-9]*[fh]/]: r#250
[#444 /[1-9][0-9]*[iu]?/]: r#250
[#445 '!']: r#251
[#445 '&']: r#251
[#445 '(']: r#251
[#445 '*']: r#251
[#445 '-']: r#251
[#445 'false']: r#251
[#445 'true']: r#251
[#445 '~']: r#251
[#445 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#251
[#445 /0[fh]/]: r#251
[#445 /0[iu]?/]: r#251
[#445 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#251
[#445 /0[xX][0-9a-fA-F]+[iu]?/]: r#251
[#445 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#251
[#445 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#251
[#445 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#251
[#445 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#251
[#445 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#251
[#445 /[1-9][0-9]*[fh]/]: r#251
[#445 /[1-9][0-9]*[iu]?/]: r#251
[#446 '!']: r#252
[#446 '&']: r#252
[#446 '(']: r#252
[#446 '*']: r#252
[#446 '-']: r#252
[#446 'false']: r#252
[#446 'true']: r#252
[#446 '~']: r#252
[#446 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#252
[#446 /0[fh]/]: r#252
[#446 /0[iu]?/]: r#252
[#446 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#252
[#446 /0[xX][0-9a-fA-F]+[iu]?/]: r#252
[#446 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#252
[#446 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#252
[#446 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#252
[#446 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#252
[#446 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#252
[#446 /[1-9][0-9]*[fh]/]: r#252
[#446 /[1-9][0-9]*[iu]?/]: r#252
[#447 '!']: r#253
[#447 '&']: r#253
[#447 '(']: r#253
[#447 '*']: r#253
[#447 '-']: r#253
[#447 'false']: r#253
[#447 'true']: r#253
[#447 '~']: r#253
[#447 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#253
[#447 /0[fh]/]: r#253
[#447 /0[iu]?/]: r#253
[#447 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#253
[#447 /0[xX][0-9a-fA-F]+[iu]?/]: r#253
[#447 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#253
[#447 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#253
[#447 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#253
[#447 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#253
[#447 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#253
[#447 /[1-9][0-9]*[fh]/]: r#253
[#447 /[1-9][0-9]*[iu]?/]: r#253
[#448 '!']: r#254
[#448 '&']: r#254
[#448 '(']: r#254
[#448 '*']: r#254
[#448 '-']: r#254
[#448 'false']: r#254
[#448 'true']: r#254
[#448 '~']: r#254
[#448 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#254
[#448 /0[fh]/]: r#254
[#448 /0[iu]?/]: r#254
[#448 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#254
[#448 /0[xX][0-9a-fA-F]+[iu]?/]: r#254
[#448 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#254
[#448 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#254
[#448 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#254
[#448 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#254
[#448 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#254
[#448 /[1-9][0-9]*[fh]/]: r#254
[#448 /[1-9][0-9]*[iu]?/]: r#254
[#449 '!']: r#255
[#449 '&']: r#255
[#449 '(']: r#255
[#449 '*']: r#255
[#449 '-']: r#255
[#449 'false']: r#255
[#449 'true']: r#255
[#449 '~']: r#255
[#449 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#255
[#449 /0[fh]/]: r#255
[#449 /0[iu]?/]: r#255
[#449 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#255
[#449 /0[xX][0-9a-fA-F]+[iu]?/]: r#255
[#449 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#255
[#449 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#255
[#449 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#255
[#449 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#255
[#449 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#255
[#449 /[1-9][0-9]*[fh]/]: r#255
[#449 /[1-9][0-9]*[iu]?/]: r#255
[#450 '!']: r#256
[#450 '&']: r#256
[#450 '(']: r#256
[#450 '*']: r#256
[#450 '-']: r#256
[#450 'false']: r#256
[#450 'true']: r#256
[#450 '~']: r#256
[#450 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#256
[#450 /0[fh]/]: r#256
[#450 /0[iu]?/]: r#256
[#450 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#256
[#450 /0[xX][0-9a-fA-F]+[iu]?/]: r#256
[#450 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#256
[#450 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#256
[#450 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#256
[#450 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#256
[#450 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#256
[#450 /[1-9][0-9]*[fh]/]: r#256
[#450 /[1-9][0-9]*[iu]?/]: r#256
[#451 '!']: r#257
[#451 '&']: r#257
[#451 '(']: r#257
[#451 '*']: r#257
[#451 '-']: r#257
[#451 'false']: r#257
[#451 'true']: r#257
[#451 '~']: r#257
[#451 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#257
[#451 /0[fh]/]: r#257
[#451 /0[iu]?/]: r#257
[#451 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#257
[#451 /0[xX][0-9a-fA-F]+[iu]?/]: r#257
[#451 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#257
[#451 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#257
[#451 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#257
[#451 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#257
[#451 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#257
[#451 /[1-9][0-9]*[fh]/]: r#257
[#451 /[1-9][0-9]*[iu]?/]: r#257
[#452 '!']: r#258
[#452 '&']: r#258
[#452 '(']: r#258
[#452 '*']: r#258
[#452 '-']: r#258
[#452 'false']: r#258
[#452 'true']: r#258
[#452 '~']: r#258
[#452 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#258
[#452 /0[fh]/]: r#258
[#452 /0[iu]?/]: r#258
[#452 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#258
[#452 /0[xX][0-9a-fA-F]+[iu]?/]: r#258
[#452 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#258
[#452 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#258
[#452 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#258
[#452 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#258
[#452 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#258
[#452 /[1-9][0-9]*[fh]/]: r#258
[#452 /[1-9][0-9]*[iu]?/]: r#258
[#453 '!']: r#259
[#453 '&']: r#259
[#453 '(']: r#259
[#453 '*']: r#259
[#453 '-']: r#259
[#453 'false']: r#259
[#453 'true']: r#259
[#453 '~']: r#259
[#453 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#259
[#453 /0[fh]/]: r#259
[#453 /0[iu]?/]: r#259
[#453 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#259
[#453 /0[xX][0-9a-fA-F]+[iu]?/]: r#259
[#453 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#259
[#453 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#259
[#453 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#259
[#453 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#259
[#453 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#259
[#453 /[1-9][0-9]*[fh]/]: r#259
[#453 /[1-9][0-9]*[iu]?/]: r#259
[#454 '!']: r#260
[#454 '&']: r#260
[#454 '(']: r#260
[#454 '*']: r#260
[#454 '-']: r#260
[#454 'false']: r#260
[#454 'true']: r#260
[#454 '~']: r#260
[#454 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#260
[#454 /0[fh]/]: r#260
[#454 /0[iu]?/]: r#260
[#454 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#260
[#454 /0[xX][0-9a-fA-F]+[iu]?/]: r#260
[#454 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#260
[#454 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#260
[#454 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#260
[#454 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#260
[#454 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#260
[#454 /[1-9][0-9]*[fh]/]: r#260
[#454 /[1-9][0-9]*[iu]?/]: r#260
[#455 '!']: r#261
[#455 '&']: r#261
[#455 '(']: r#261
[#455 '*']: r#261
[#455 '-']: r#261
[#455 'false']: r#261
[#455 'true']: r#261
[#455 '~']: r#261
[#455 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#261
[#455 /0[fh]/]: r#261
[#455 /0[iu]?/]: r#261
[#455 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#261
[#455 /0[xX][0-9a-fA-F]+[iu]?/]: r#261
[#455 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#261
[#455 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#261
[#455 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#261
[#455 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#261
[#455 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#261
[#455 /[1-9][0-9]*[fh]/]: r#261
[#455 /[1-9][0-9]*[iu]?/]: r#261
[#456 '%=']: r#262
[#456 '&=']: r#262
[#456 '*=']: r#262
[#456 '++']: r#262
[#456 '+=']: r#262
[#456 '--']: r#262
[#456 '-=']: r#262
[#456 '.']: r#262
[#456 '/=']: r#262
[#456 '=']: r#262
[#456 '[']: r#262
[#456 '^=']: r#262
[#456 '|=']: r#262
[#456 /\u200B_shift_left_assign/]: r#262
[#456 /\u200B_shift_right_assign/]: r#262
[#456 /\u200B_template_args_start/]: s#279
[#457 '=']: s#516
[#458 '=']: s#515
[#459 '!']: s#95
[#459 '&']: s#98
[#459 '(']: s#108
[#459 '*']: s#97
[#459 '-']: s#94
[#459 'false']: s#115
[#459 'true']: s#114
[#459 '~']: s#96
[#459 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#459 /0[fh]/]: s#119
[#459 /0[iu]?/]: s#116
[#459 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#459 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#459 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#459 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#459 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#459 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#459 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#459 /[1-9][0-9]*[fh]/]: s#120
[#459 /[1-9][0-9]*[iu]?/]: s#117
[#460 ')']: r#263
[#460 ';']: r#263
[#461 '!']: s#95
[#461 '&']: s#98
[#461 '(']: s#108
[#461 '*']: s#97
[#461 '-']: s#94
[#461 'false']: s#115
[#461 'true']: s#114
[#461 '~']: s#96
[#461 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#461 /0[fh]/]: s#119
[#461 /0[iu]?/]: s#116
[#461 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#461 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#461 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#461 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#461 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#461 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#461 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#461 /[1-9][0-9]*[fh]/]: s#120
[#461 /[1-9][0-9]*[iu]?/]: s#117
[#462 '(']: s#512
[#463 '@']: s#41
[#464 '!']: s#95
[#464 '&']: s#98
[#464 '(']: s#108
[#464 '*']: s#97
[#464 '-']: s#94
[#464 'false']: s#115
[#464 'true']: s#114
[#464 '~']: s#96
[#464 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#464 /0[fh]/]: s#119
[#464 /0[iu]?/]: s#116
[#464 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#464 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#464 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#464 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#464 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#464 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#464 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#464 /[1-9][0-9]*[fh]/]: s#120
[#464 /[1-9][0-9]*[iu]?/]: s#117
[#465 'else']: s#507
[#466 '!']: s#95
[#466 '&']: s#98
[#466 '(']: s#108
[#466 '*']: s#97
[#466 '-']: s#94
[#466 'false']: s#115
[#466 'true']: s#114
[#466 '~']: s#96
[#466 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#466 /0[fh]/]: s#119
[#466 /0[iu]?/]: s#116
[#466 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#466 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#466 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#466 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#466 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#466 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#466 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#466 /[1-9][0-9]*[fh]/]: s#120
[#466 /[1-9][0-9]*[iu]?/]: s#117
[#467 ';']: r#264
[#468 ';']: r#265
[#469 '&']: r#266
[#469 '(']: r#266
[#469 '*']: r#266
[#469 ';']: r#266
[#469 '@']: r#266
[#469 '_']: r#266
[#469 'break']: r#266
[#469 'const']: r#266
[#469 'const_assert']: r#266
[#469 'continue']: r#266
[#469 'continuing']: r#266
[#469 'discard']: r#266
[#469 'for']: r#266
[#469 'if']: r#266
[#469 'let']: r#266
[#469 'loop']: r#266
[#469 'return']: r#266
[#469 'switch']: r#266
[#469 'var']: r#266
[#469 'while']: r#266
[#469 '{']: r#266
[#469 '}']: r#266
[#469 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#266
[#470 '&']: r#267
[#470 '(']: r#267
[#470 '*']: r#267
[#470 ';']: r#267
[#470 '@']: r#267
[#470 '_']: r#267
[#470 'break']: r#267
[#470 'const']: r#267
[#470 'const_assert']: r#267
[#470 'continue']: r#267
[#470 'continuing']: r#267
[#470 'discard']: r#267
[#470 'for']: r#267
[#470 'if']: r#267
[#470 'let']: r#267
[#470 'loop']: r#267
[#470 'return']: r#267
[#470 'switch']: r#267
[#470 'var']: r#267
[#470 'while']: r#267
[#470 '{']: r#267
[#470 '}']: r#267
[#470 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#267
[#471 '&']: r#268
[#471 '(']: r#268
[#471 '*']: r#268
[#471 ';']: r#268
[#471 '@']: r#268
[#471 '_']: r#268
[#471 'break']: r#268
[#471 'const']: r#268
[#471 'const_assert']: r#268
[#471 'continue']: r#268
[#471 'continuing']: r#268
[#471 'discard']: r#268
[#471 'for']: r#268
[#471 'if']: r#268
[#471 'let']: r#268
[#471 'loop']: r#268
[#471 'return']: r#268
[#471 'switch']: r#268
[#471 'var']: r#268
[#471 'while']: r#268
[#471 '{']: r#268
[#471 '}']: r#268
[#471 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#268
[#472 '&']: r#269
[#472 '(']: r#269
[#472 '*']: r#269
[#472 ';']: r#269
[#472 '@']: r#269
[#472 '_']: r#269
[#472 'break']: r#269
[#472 'const']: r#269
[#472 'const_assert']: r#269
[#472 'continue']: r#269
[#472 'continuing']: r#269
[#472 'discard']: r#269
[#472 'for']: r#269
[#472 'if']: r#269
[#472 'let']: r#269
[#472 'loop']: r#269
[#472 'return']: r#269
[#472 'switch']: r#269
[#472 'var']: r#269
[#472 'while']: r#269
[#472 '{']: r#269
[#472 '}']: r#269
[#472 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#269
[#473 '&']: r#270
[#473 '(']: r#270
[#473 '*']: r#270
[#473 ';']: r#270
[#473 '@']: r#270
[#473 '_']: r#270
[#473 'break']: r#270
[#473 'const']: r#270
[#473 'const_assert']: r#270
[#473 'continue']: r#270
[#473 'continuing']: r#270
[#473 'discard']: r#270
[#473 'for']: r#270
[#473 'if']: r#270
[#473 'let']: r#270
[#473 'loop']: r#270
[#473 'return']: r#270
[#473 'switch']: r#270
[#473 'var']: r#270
[#473 'while']: r#270
[#473 '{']: r#270
[#473 '}']: r#270
[#473 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#270
[#474 '&']: r#271
[#474 '(']: r#271
[#474 '*']: r#271
[#474 ';']: r#271
[#474 '@']: r#271
[#474 '_']: r#271
[#474 'break']: r#271
[#474 'const']: r#271
[#474 'const_assert']: r#271
[#474 'continue']: r#271
[#474 'continuing']: r#271
[#474 'discard']: r#271
[#474 'for']: r#271
[#474 'if']: r#271
[#474 'let']: r#271
[#474 'loop']: r#271
[#474 'return']: r#271
[#474 'switch']: r#271
[#474 'var']: r#271
[#474 'while']: r#271
[#474 '{']: r#271
[#474 '}']: r#271
[#474 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#271
[#475 '&']: r#272
[#475 '(']: r#272
[#475 '*']: r#272
[#475 ';']: r#272
[#475 '@']: r#272
[#475 '_']: r#272
[#475 'break']: r#272
[#475 'const']: r#272
[#475 'const_assert']: r#272
[#475 'continue']: r#272
[#475 'continuing']: r#272
[#475 'discard']: r#272
[#475 'for']: r#272
[#475 'if']: r#272
[#475 'let']: r#272
[#475 'loop']: r#272
[#475 'return']: r#272
[#475 'switch']: r#272
[#475 'var']: r#272
[#475 'while']: r#272
[#475 '{']: r#272
[#475 '}']: r#272
[#475 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#272
[#476 '&']: r#273
[#476 '(']: r#273
[#476 '*']: r#273
[#476 ';']: r#273
[#476 '@']: r#273
[#476 '_']: r#273
[#476 'break']: r#273
[#476 'const']: r#273
[#476 'const_assert']: r#273
[#476 'continue']: r#273
[#476 'continuing']: r#273
[#476 'discard']: r#273
[#476 'for']: r#273
[#476 'if']: r#273
[#476 'let']: r#273
[#476 'loop']: r#273
[#476 'return']: r#273
[#476 'switch']: r#273
[#476 'var']: r#273
[#476 'while']: r#273
[#476 '{']: r#273
[#476 '}']: r#273
[#476 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#273
[#477 '}']: r#274
[#478 '&']: r#275
[#478 '(']: r#275
[#478 '*']: r#275
[#478 ';']: r#275
[#478 '@']: r#275
[#478 '_']: r#275
[#478 'alias']: r#275
[#478 'break']: r#275
[#478 'case']: r#275
[#478 'const']: r#275
[#478 'const_assert']: r#275
[#478 'continue']: r#275
[#478 'continuing']: r#275
[#478 'default']: r#275
[#478 'discard']: r#275
[#478 'else']: r#275
[#478 'fn']: r#275
[#478 'for']: r#275
[#478 'if']: r#275
[#478 'let']: r#275
[#478 'loop']: r#275
[#478 'override']: r#275
[#478 'return']: r#275
[#478 'struct']: r#275
[#478 'switch']: r#275
[#478 'var']: r#275
[#478 'while']: r#275
[#478 '{']: r#275
[#478 '}']: r#275
[#478 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#275
[#478 EndOfText]: r#275
[#479 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#276
[#480 ':']: s#502
[#481 ',']: s#501
[#482 ')']: r#277
[#482 ',']: r#277
[#483 ',']: s#484
[#484 '@']: s#41
[#485 '->']: s#497
[#486 ',']: r#278
[#486 '}']: r#278
[#487 ',']: r#279
[#487 '}']: r#279
[#488 '}']: s#495
[#489 '}']: r#280
[#490 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#491 ')']: r#281
[#491 ',']: r#281
[#491 ';']: r#281
[#491 '=']: r#281
[#491 '}']: r#281
[#492 ';']: r#282
[#492 '@']: r#282
[#492 'fn']: r#282
[#492 'for']: r#282
[#492 'if']: r#282
[#492 'loop']: r#282
[#492 'override']: r#282
[#492 'switch']: r#282
[#492 'var']: r#282
[#492 'while']: r#282
[#492 '{']: r#282
[#492 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#282
[#493 ')']: r#283
[#493 ',']: r#283
[#494 ',']: r#284
[#494 '}']: r#284
[#495 ';']: r#285
[#495 '@']: r#285
[#495 'alias']: r#285
[#495 'const']: r#285
[#495 'const_assert']: r#285
[#495 'fn']: r#285
[#495 'override']: r#285
[#495 'struct']: r#285
[#495 'var']: r#285
[#495 EndOfText]: r#285
[#496 '@']: r#286
[#496 '{']: r#286
[#497 '@']: s#41
[#498 ')']: r#287
[#498 ',']: r#287
[#499 ')']: r#288
[#499 ',']: r#288
[#500 ')']: r#289
[#501 ')']: r#290
[#502 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#503 '@']: s#41
[#504 'else']: s#553
[#505 '&']: r#291
[#505 '(']: r#291
[#505 '*']: r#291
[#505 ';']: r#291
[#505 '@']: r#291
[#505 '_']: r#291
[#505 'break']: r#291
[#505 'const']: r#291
[#505 'const_assert']: r#291
[#505 'continue']: r#291
[#505 'continuing']: r#291
[#505 'discard']: r#291
[#505 'else']: r#291
[#505 'for']: r#291
[#505 'if']: r#291
[#505 'let']: r#291
[#505 'loop']: r#291
[#505 'return']: r#291
[#505 'switch']: r#291
[#505 'var']: r#291
[#505 'while']: r#291
[#505 '{']: r#291
[#505 '}']: r#291
[#505 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#291
[#506 'else']: s#507
[#507 'if']: s#549
[#508 '@']: s#41
[#509 '{']: s#544
[#510 '{']: r#292
[#511 '@']: s#41
[#512 '&']: s#362
[#512 '(']: s#363
[#512 '*']: s#361
[#512 '_']: s#358
[#512 'const']: s#345
[#512 'let']: s#344
[#512 'var']: s#135
[#512 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#513 '@']: s#41
[#514 ';']: r#293
[#515 '!']: s#95
[#515 '&']: s#98
[#515 '(']: s#108
[#515 '*']: s#97
[#515 '-']: s#94
[#515 'false']: s#115
[#515 'true']: s#114
[#515 '~']: s#96
[#515 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#515 /0[fh]/]: s#119
[#515 /0[iu]?/]: s#116
[#515 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#515 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#515 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#515 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#515 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#515 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#515 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#515 /[1-9][0-9]*[fh]/]: s#120
[#515 /[1-9][0-9]*[iu]?/]: s#117
[#516 '!']: s#95
[#516 '&']: s#98
[#516 '(']: s#108
[#516 '*']: s#97
[#516 '-']: s#94
[#516 'false']: s#115
[#516 'true']: s#114
[#516 '~']: s#96
[#516 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#516 /0[fh]/]: s#119
[#516 /0[iu]?/]: s#116
[#516 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#516 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#516 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#516 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#516 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#516 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#516 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#516 /[1-9][0-9]*[fh]/]: s#120
[#516 /[1-9][0-9]*[iu]?/]: s#117
[#517 ')']: r#294
[#517 ';']: r#294
[#518 ')']: r#295
[#518 ';']: r#295
[#519 '%=']: r#262
[#519 '&=']: r#262
[#519 ')']: r#262
[#519 '*=']: r#262
[#519 '++']: r#262
[#519 '+=']: r#262
[#519 '--']: r#262
[#519 '-=']: r#262
[#519 '.']: r#262
[#519 '/=']: r#262
[#519 '=']: r#262
[#519 '[']: r#262
[#519 '^=']: r#262
[#519 '|=']: r#262
[#519 /\u200B_shift_left_assign/]: r#262
[#519 /\u200B_shift_right_assign/]: r#262
[#520 '%=']: r#296
[#520 '&=']: r#296
[#520 ')']: r#296
[#520 '*=']: r#296
[#520 '++']: r#296
[#520 '+=']: r#296
[#520 '--']: r#296
[#520 '-=']: r#296
[#520 '.']: r#296
[#520 '/=']: r#296
[#520 '=']: r#296
[#520 '[']: r#296
[#520 '^=']: r#296
[#520 '|=']: r#296
[#520 /\u200B_shift_left_assign/]: r#296
[#520 /\u200B_shift_right_assign/]: r#296
[#521 ',']: r#297
[#521 /\u200B_template_args_end/]: r#297
[#522 ',']: r#298
[#522 /\u200B_template_args_end/]: r#298
[#523 /\u200B_template_args_end/]: r#299
[#524 /\u200B_template_args_end/]: r#300
[#525 ',']: r#301
[#525 '||']: r#130
[#525 /\u200B_template_args_end/]: r#301
[#526 '&&']: r#132
[#526 ',']: r#302
[#526 /\u200B_template_args_end/]: r#302
[#527 ')']: s#533
[#528 '!']: s#95
[#528 '&']: s#98
[#528 '(']: s#108
[#528 ')']: r#303
[#528 '*']: s#97
[#528 '-']: s#94
[#528 'false']: s#115
[#528 'true']: s#114
[#528 '~']: s#96
[#528 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#528 /0[fh]/]: s#119
[#528 /0[iu]?/]: s#116
[#528 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#528 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#528 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#528 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#528 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#528 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#528 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#528 /[1-9][0-9]*[fh]/]: s#120
[#528 /[1-9][0-9]*[iu]?/]: s#117
[#529 ')']: s#531
[#530 ')']: r#304
[#531 '@']: r#305
[#531 'fn']: r#305
[#531 'for']: r#305
[#531 'if']: r#305
[#531 'loop']: r#305
[#531 'override']: r#305
[#531 'switch']: r#305
[#531 'var']: r#305
[#531 'while']: r#305
[#531 '{']: r#305
[#531 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#305
[#532 ',']: s#571
[#533 '@']: r#306
[#533 'fn']: r#306
[#533 'for']: r#306
[#533 'if']: r#306
[#533 'loop']: r#306
[#533 'override']: r#306
[#533 'switch']: r#306
[#533 'var']: r#306
[#533 'while']: r#306
[#533 '{']: r#306
[#533 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#306
[#534 ';']: r#307
[#535 ';']: r#308
[#536 '&']: r#309
[#536 '(']: r#309
[#536 '*']: r#309
[#536 ';']: r#309
[#536 '@']: r#309
[#536 '_']: r#309
[#536 'break']: r#309
[#536 'const']: r#309
[#536 'const_assert']: r#309
[#536 'continue']: r#309
[#536 'continuing']: r#309
[#536 'discard']: r#309
[#536 'for']: r#309
[#536 'if']: r#309
[#536 'let']: r#309
[#536 'loop']: r#309
[#536 'return']: r#309
[#536 'switch']: r#309
[#536 'var']: r#309
[#536 'while']: r#309
[#536 '{']: r#309
[#536 '}']: r#309
[#536 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#309
[#537 ')']: s#569
[#538 ';']: s#568
[#539 ';']: r#310
[#540 ';']: r#311
[#541 ';']: r#312
[#542 ';']: r#313
[#543 '{']: r#314
[#544 '&']: s#362
[#544 '(']: s#363
[#544 '*']: s#361
[#544 ';']: s#321
[#544 '@']: s#41
[#544 '_']: s#358
[#544 'break']: s#346
[#544 'const']: s#345
[#544 'const_assert']: s#36
[#544 'continue']: s#347
[#544 'discard']: s#332
[#544 'let']: s#344
[#544 'return']: s#336
[#544 'var']: s#135
[#544 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#545 '&']: r#315
[#545 '(']: r#315
[#545 '*']: r#315
[#545 ';']: r#315
[#545 '@']: r#315
[#545 '_']: r#315
[#545 'break']: r#315
[#545 'const']: r#315
[#545 'const_assert']: r#315
[#545 'continue']: r#315
[#545 'continuing']: r#315
[#545 'discard']: r#315
[#545 'for']: r#315
[#545 'if']: r#315
[#545 'let']: r#315
[#545 'loop']: r#315
[#545 'return']: r#315
[#545 'switch']: r#315
[#545 'var']: r#315
[#545 'while']: r#315
[#545 '{']: r#315
[#545 '}']: r#315
[#545 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#315
[#546 '{']: s#564
[#547 '{']: r#316
[#548 '@']: s#41
[#549 '!']: s#95
[#549 '&']: s#98
[#549 '(']: s#108
[#549 '*']: s#97
[#549 '-']: s#94
[#549 'false']: s#115
[#549 'true']: s#114
[#549 '~']: s#96
[#549 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#549 /0[fh]/]: s#119
[#549 /0[iu]?/]: s#116
[#549 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#549 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#549 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#549 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#549 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#549 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#549 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#549 /[1-9][0-9]*[fh]/]: s#120
[#549 /[1-9][0-9]*[iu]?/]: s#117
[#550 '&']: r#317
[#550 '(']: r#317
[#550 '*']: r#317
[#550 ';']: r#317
[#550 '@']: r#317
[#550 '_']: r#317
[#550 'break']: r#317
[#550 'const']: r#317
[#550 'const_assert']: r#317
[#550 'continue']: r#317
[#550 'continuing']: r#317
[#550 'discard']: r#317
[#550 'else']: r#317
[#550 'for']: r#317
[#550 'if']: r#317
[#550 'let']: r#317
[#550 'loop']: r#317
[#550 'return']: r#317
[#550 'switch']: r#317
[#550 'var']: r#317
[#550 'while']: r#317
[#550 '{']: r#317
[#550 '}']: r#317
[#550 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#317
[#551 '&']: r#318
[#551 '(']: r#318
[#551 '*']: r#318
[#551 ';']: r#318
[#551 '@']: r#318
[#551 '_']: r#318
[#551 'break']: r#318
[#551 'const']: r#318
[#551 'const_assert']: r#318
[#551 'continue']: r#318
[#551 'continuing']: r#318
[#551 'discard']: r#318
[#551 'for']: r#318
[#551 'if']: r#318
[#551 'let']: r#318
[#551 'loop']: r#318
[#551 'return']: r#318
[#551 'switch']: r#318
[#551 'var']: r#318
[#551 'while']: r#318
[#551 '{']: r#318
[#551 '}']: r#318
[#551 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#318
[#552 '&']: r#319
[#552 '(']: r#319
[#552 '*']: r#319
[#552 ';']: r#319
[#552 '@']: r#319
[#552 '_']: r#319
[#552 'break']: r#319
[#552 'const']: r#319
[#552 'const_assert']: r#319
[#552 'continue']: r#319
[#552 'continuing']: r#319
[#552 'discard']: r#319
[#552 'for']: r#319
[#552 'if']: r#319
[#552 'let']: r#319
[#552 'loop']: r#319
[#552 'return']: r#319
[#552 'switch']: r#319
[#552 'var']: r#319
[#552 'while']: r#319
[#552 '{']: r#319
[#552 '}']: r#319
[#552 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#319
[#553 '@']: s#41
[#554 '&']: r#320
[#554 '(']: r#320
[#554 '*']: r#320
[#554 ';']: r#320
[#554 '@']: r#320
[#554 '_']: r#320
[#554 'break']: r#320
[#554 'const']: r#320
[#554 'const_assert']: r#320
[#554 'continue']: r#320
[#554 'continuing']: r#320
[#554 'discard']: r#320
[#554 'else']: r#320
[#554 'for']: r#320
[#554 'if']: r#320
[#554 'let']: r#320
[#554 'loop']: r#320
[#554 'return']: r#320
[#554 'switch']: r#320
[#554 'var']: r#320
[#554 'while']: r#320
[#554 '{']: r#320
[#554 '}']: r#320
[#554 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#320
[#555 ')']: r#321
[#555 ',']: r#321
[#556 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#557 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#322
[#558 '@']: s#41
[#559 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#323
[#560 '@']: r#324
[#560 '{']: r#324
[#561 '&']: r#325
[#561 '(']: r#325
[#561 '*']: r#325
[#561 ';']: r#325
[#561 '@']: r#325
[#561 '_']: r#325
[#561 'break']: r#325
[#561 'const']: r#325
[#561 'const_assert']: r#325
[#561 'continue']: r#325
[#561 'continuing']: r#325
[#561 'discard']: r#325
[#561 'for']: r#325
[#561 'if']: r#325
[#561 'let']: r#325
[#561 'loop']: r#325
[#561 'return']: r#325
[#561 'switch']: r#325
[#561 'var']: r#325
[#561 'while']: r#325
[#561 '{']: r#325
[#561 '}']: r#325
[#561 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#325
[#562 '@']: s#41
[#563 '{']: r#326
[#564 'case']: s#585
[#564 'default']: s#586
[#565 'continuing']: s#579
[#566 'continuing']: r#327
[#566 '}']: r#327
[#567 '&']: s#362
[#567 '(']: s#363
[#567 '*']: s#361
[#567 ';']: s#321
[#567 '@']: s#41
[#567 '_']: s#358
[#567 'break']: s#346
[#567 'const']: s#345
[#567 'const_assert']: s#36
[#567 'continue']: s#347
[#567 'discard']: s#332
[#567 'let']: s#344
[#567 'return']: s#336
[#567 'var']: s#135
[#567 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#568 '!']: s#95
[#568 '&']: s#98
[#568 '(']: s#108
[#568 '*']: s#97
[#568 '-']: s#94
[#568 'false']: s#115
[#568 'true']: s#114
[#568 '~']: s#96
[#568 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#568 /0[fh]/]: s#119
[#568 /0[iu]?/]: s#116
[#568 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#568 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#568 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#568 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#568 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#568 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#568 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#568 /[1-9][0-9]*[fh]/]: s#120
[#568 /[1-9][0-9]*[iu]?/]: s#117
[#569 '@']: s#41
[#570 ')']: s#572
[#571 ')']: r#328
[#572 '@']: r#329
[#572 'fn']: r#329
[#572 'for']: r#329
[#572 'if']: r#329
[#572 'loop']: r#329
[#572 'override']: r#329
[#572 'switch']: r#329
[#572 'var']: r#329
[#572 'while']: r#329
[#572 '{']: r#329
[#572 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#329
[#573 '&']: r#330
[#573 '(']: r#330
[#573 '*']: r#330
[#573 ';']: r#330
[#573 '@']: r#330
[#573 '_']: r#330
[#573 'break']: r#330
[#573 'const']: r#330
[#573 'const_assert']: r#330
[#573 'continue']: r#330
[#573 'continuing']: r#330
[#573 'discard']: r#330
[#573 'for']: r#330
[#573 'if']: r#330
[#573 'let']: r#330
[#573 'loop']: r#330
[#573 'return']: r#330
[#573 'switch']: r#330
[#573 'var']: r#330
[#573 'while']: r#330
[#573 '{']: r#330
[#573 '}']: r#330
[#573 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#330
[#574 ';']: s#601
[#575 ';']: r#331
[#576 'continuing']: r#332
[#576 '}']: r#332
[#577 '}']: s#600
[#578 '}']: r#333
[#579 '@']: s#41
[#580 '}']: s#595
[#581 '}']: r#334
[#582 'case']: s#585
[#582 'default']: s#586
[#583 'case']: r#335
[#583 'default']: r#335
[#583 '}']: r#335
[#584 'case']: r#336
[#584 'default']: r#336
[#584 '}']: r#336
[#585 '!']: s#95
[#585 '&']: s#98
[#585 '(']: s#108
[#585 '*']: s#97
[#585 '-']: s#94
[#585 'default']: s#592
[#585 'false']: s#115
[#585 'true']: s#114
[#585 '~']: s#96
[#585 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#585 /0[fh]/]: s#119
[#585 /0[iu]?/]: s#116
[#585 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#585 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#585 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#585 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#585 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#585 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#585 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#585 /[1-9][0-9]*[fh]/]: s#120
[#585 /[1-9][0-9]*[iu]?/]: s#117
[#586 ':']: s#589
[#587 '&']: r#337
[#587 '(']: r#337
[#587 '*']: r#337
[#587 ';']: r#337
[#587 '@']: r#337
[#587 '_']: r#337
[#587 'break']: r#337
[#587 'const']: r#337
[#587 'const_assert']: r#337
[#587 'continue']: r#337
[#587 'continuing']: r#337
[#587 'discard']: r#337
[#587 'else']: r#337
[#587 'for']: r#337
[#587 'if']: r#337
[#587 'let']: r#337
[#587 'loop']: r#337
[#587 'return']: r#337
[#587 'switch']: r#337
[#587 'var']: r#337
[#587 'while']: r#337
[#587 '{']: r#337
[#587 '}']: r#337
[#587 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#337
[#588 '@']: s#41
[#589 '@']: r#338
[#589 '{']: r#338
[#590 ':']: s#613
[#591 ',']: s#611
[#592 ',']: r#339
[#592 ':']: r#339
[#592 '@']: r#339
[#592 '{']: r#339
[#593 ',']: r#340
[#593 ':']: r#340
[#593 '@']: r#340
[#593 '{']: r#340
[#594 '}']: r#341
[#595 '&']: r#342
[#595 '(']: r#342
[#595 '*']: r#342
[#595 ';']: r#342
[#595 '@']: r#342
[#595 '_']: r#342
[#595 'break']: r#342
[#595 'const']: r#342
[#595 'const_assert']: r#342
[#595 'continue']: r#342
[#595 'continuing']: r#342
[#595 'discard']: r#342
[#595 'for']: r#342
[#595 'if']: r#342
[#595 'let']: r#342
[#595 'loop']: r#342
[#595 'return']: r#342
[#595 'switch']: r#342
[#595 'var']: r#342
[#595 'while']: r#342
[#595 '{']: r#342
[#595 '}']: r#342
[#595 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#342
[#596 '}']: r#343
[#597 '{']: s#607
[#598 '{']: r#344
[#599 '@']: s#41
[#600 '&']: r#345
[#600 '(']: r#345
[#600 '*']: r#345
[#600 ';']: r#345
[#600 '@']: r#345
[#600 '_']: r#345
[#600 'break']: r#345
[#600 'const']: r#345
[#600 'const_assert']: r#345
[#600 'continue']: r#345
[#600 'continuing']: r#345
[#600 'discard']: r#345
[#600 'for']: r#345
[#600 'if']: r#345
[#600 'let']: r#345
[#600 'loop']: r#345
[#600 'return']: r#345
[#600 'switch']: r#345
[#600 'var']: r#345
[#600 'while']: r#345
[#600 '{']: r#345
[#600 '}']: r#345
[#600 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#345
[#601 '&']: s#362
[#601 '(']: s#363
[#601 '*']: s#361
[#601 '_']: s#358
[#601 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#602 ')']: r#346
[#603 ')']: r#347
[#604 ')']: r#348
[#605 ')']: r#349
[#606 '{']: r#350
[#607 '&']: s#362
[#607 '(']: s#363
[#607 '*']: s#361
[#607 ';']: s#321
[#607 '@']: s#41
[#607 '_']: s#358
[#607 'break']: s#346
[#607 'const']: s#345
[#607 'const_assert']: s#36
[#607 'continue']: s#347
[#607 'discard']: s#332
[#607 'let']: s#344
[#607 'return']: s#336
[#607 'var']: s#135
[#607 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#608 ',']: s#619
[#609 ',']: r#351
[#609 ':']: r#351
[#609 '@']: r#351
[#609 '{']: r#351
[#610 ',']: s#611
[#611 '!']: s#95
[#611 '&']: s#98
[#611 '(']: s#108
[#611 '*']: s#97
[#611 '-']: s#94
[#611 'default']: s#592
[#611 'false']: s#115
[#611 'true']: s#114
[#611 '~']: s#96
[#611 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#611 /0[fh]/]: s#119
[#611 /0[iu]?/]: s#116
[#611 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#611 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#611 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#611 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#611 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#611 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#611 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#611 /[1-9][0-9]*[fh]/]: s#120
[#611 /[1-9][0-9]*[iu]?/]: s#117
[#612 '@']: s#41
[#613 '@']: r#352
[#613 '{']: r#352
[#614 'case']: r#353
[#614 'default']: r#353
[#614 '}']: r#353
[#615 'case']: r#354
[#615 'default']: r#354
[#615 '}']: r#354
[#616 ',']: r#355
[#616 ':']: r#355
[#616 '@']: r#355
[#616 '{']: r#355
[#617 ',']: r#356
[#617 ':']: r#356
[#617 '@']: r#356
[#617 '{']: r#356
[#618 ':']: r#357
[#618 '@']: r#357
[#618 '{']: r#357
[#619 ':']: r#358
[#619 '@']: r#358
[#619 '{']: r#358
[#620 'break']: s#626
[#621 'break']: r#359
[#621 '}']: r#359
[#622 '&']: s#362
[#622 '(']: s#363
[#622 '*']: s#361
[#622 ';']: s#321
[#622 '@']: s#41
[#622 '_']: s#358
[#622 'break']: s#346
[#622 'const']: s#345
[#622 'const_assert']: s#36
[#622 'continue']: s#347
[#622 'discard']: s#332
[#622 'let']: s#344
[#622 'return']: s#336
[#622 'var']: s#135
[#622 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#623 'break']: r#360
[#623 '}']: r#360
[#624 '}']: s#628
[#625 '}']: r#361
[#626 'if']: s#627
[#627 '!']: s#95
[#627 '&']: s#98
[#627 '(']: s#108
[#627 '*']: s#97
[#627 '-']: s#94
[#627 'false']: s#115
[#627 'true']: s#114
[#627 '~']: s#96
[#627 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#77
[#627 /0[fh]/]: s#119
[#627 /0[iu]?/]: s#116
[#627 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#627 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#627 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#627 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#627 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#627 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#627 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#627 /[1-9][0-9]*[fh]/]: s#120
[#627 /[1-9][0-9]*[iu]?/]: s#117
[#628 '}']: r#362
[#629 ';']: s#630
[#630 '}']: r#363

=Goto:
[#0 diagnostic_directive]: #5
[#0 enable_directive]: #6
[#0 global_directive]: #4
[#0 requires_directive]: #7
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 align_attr]: #42
[#2 attribute]: #40
[#2 binding_attr]: #43
[#2 blend_src_attr]: #44
[#2 builtin_attr]: #45
[#2 compute_attr]: #58
[#2 const_assert_statement]: #29
[#2 const_attr]: #46
[#2 diagnostic_attr]: #47
[#2 fragment_attr]: #57
[#2 function_decl]: #28
[#2 function_decl/0.0]: #35
[#2 function_decl/0.0/0]: #39
[#2 global_decl]: #22
[#2 global_value_decl]: #25
[#2 global_value_decl/1.0]: #32
[#2 global_value_decl/1.0/0]: #38
[#2 global_variable_decl]: #24
[#2 global_variable_decl/0.0]: #30
[#2 global_variable_decl/0.0/0]: #37
[#2 group_attr]: #48
[#2 id_attr]: #49
[#2 interpolate_attr]: #50
[#2 invariant_attr]: #51
[#2 location_attr]: #52
[#2 must_use_attr]: #53
[#2 size_attr]: #54
[#2 struct_decl]: #27
[#2 translation_unit/0.1]: #20
[#2 translation_unit/0.1/0]: #21
[#2 type_alias_decl]: #26
[#2 vertex_attr]: #56
[#2 workgroup_size_attr]: #55
[#4 diagnostic_directive]: #5
[#4 enable_directive]: #6
[#4 global_directive]: #4
[#4 requires_directive]: #7
[#4 translation_unit/0.0/0]: #19
[#8 diagnostic_control]: #17
[#9 enable_extension_list]: #14
[#9 enable_extension_name]: #15
[#10 software_extension_list]: #11
[#10 software_extension_name]: #12
[#12 software_extension_list/0.1]: #149
[#12 software_extension_list/0.1/0]: #150
[#12 software_extension_list/0.1/0/0.0]: #151
[#15 enable_extension_list/0.1]: #144
[#15 enable_extension_list/0.1/0]: #145
[#15 enable_extension_list/0.1/0/0.0]: #146
[#18 severity_control_name]: #141
[#22 align_attr]: #42
[#22 attribute]: #40
[#22 binding_attr]: #43
[#22 blend_src_attr]: #44
[#22 builtin_attr]: #45
[#22 compute_attr]: #58
[#22 const_assert_statement]: #29
[#22 const_attr]: #46
[#22 diagnostic_attr]: #47
[#22 fragment_attr]: #57
[#22 function_decl]: #28
[#22 function_decl/0.0]: #35
[#22 function_decl/0.0/0]: #39
[#22 global_decl]: #22
[#22 global_value_decl]: #25
[#22 global_value_decl/1.0]: #32
[#22 global_value_decl/1.0/0]: #38
[#22 global_variable_decl]: #24
[#22 global_variable_decl/0.0]: #30
[#22 global_variable_decl/0.0/0]: #37
[#22 group_attr]: #48
[#22 id_attr]: #49
[#22 interpolate_attr]: #50
[#22 invariant_attr]: #51
[#22 location_attr]: #52
[#22 must_use_attr]: #53
[#22 size_attr]: #54
[#22 struct_decl]: #27
[#22 translation_unit/0.1/0]: #140
[#22 type_alias_decl]: #26
[#22 vertex_attr]: #56
[#22 workgroup_size_attr]: #55
[#30 variable_decl]: #134
[#31 ident]: #133
[#31 ident_pattern_token]: #109
[#31 optionally_typed_ident]: #132
[#33 ident]: #130
[#33 ident_pattern_token]: #109
[#34 ident]: #129
[#34 ident_pattern_token]: #109
[#35 function_header]: #127
[#36 additive_expression]: #90
[#36 binary_and_expression]: #87
[#36 binary_or_expression]: #88
[#36 binary_xor_expression]: #89
[#36 bitwise_expression]: #85
[#36 bool_literal]: #107
[#36 call_expression]: #101
[#36 decimal_float_literal]: #112
[#36 decimal_int_literal]: #110
[#36 expression]: #81
[#36 float_literal]: #106
[#36 hex_float_literal]: #113
[#36 hex_int_literal]: #111
[#36 ident]: #104
[#36 ident_pattern_token]: #109
[#36 int_literal]: #105
[#36 literal]: #102
[#36 multiplicative_expression]: #92
[#36 paren_expression]: #103
[#36 primary_expression]: #99
[#36 relational_expression]: #82
[#36 shift_expression]: #86
[#36 short_circuit_and_expression]: #84
[#36 short_circuit_or_expression]: #83
[#36 singular_expression]: #93
[#36 template_elaborated_ident]: #100
[#36 unary_expression]: #91
[#40 align_attr]: #42
[#40 attribute]: #40
[#40 binding_attr]: #43
[#40 blend_src_attr]: #44
[#40 builtin_attr]: #45
[#40 compute_attr]: #58
[#40 const_attr]: #46
[#40 diagnostic_attr]: #47
[#40 fragment_attr]: #57
[#40 function_decl/0.0/0]: #80
[#40 global_value_decl/1.0/0]: #79
[#40 global_variable_decl/0.0/0]: #78
[#40 group_attr]: #48
[#40 id_attr]: #49
[#40 interpolate_attr]: #50
[#40 invariant_attr]: #51
[#40 location_attr]: #52
[#40 must_use_attr]: #53
[#40 size_attr]: #54
[#40 vertex_attr]: #56
[#40 workgroup_size_attr]: #55
[#41 ident_pattern_token]: #59
[#59 argument_expression_list]: #231
[#59 attribute/0.2]: #230
[#65 diagnostic_control]: #225
[#86 _greater_than]: #208
[#86 _greater_than_equal]: #210
[#86 _less_than]: #207
[#86 _less_than_equal]: #209
[#90 additive_operator]: #201
[#91 _shift_left]: #197
[#91 _shift_right]: #198
[#92 multiplicative_operator]: #193
[#94 bool_literal]: #107
[#94 call_expression]: #101
[#94 decimal_float_literal]: #112
[#94 decimal_int_literal]: #110
[#94 float_literal]: #106
[#94 hex_float_literal]: #113
[#94 hex_int_literal]: #111
[#94 ident]: #104
[#94 ident_pattern_token]: #109
[#94 int_literal]: #105
[#94 literal]: #102
[#94 paren_expression]: #103
[#94 primary_expression]: #99
[#94 singular_expression]: #93
[#94 template_elaborated_ident]: #100
[#94 unary_expression]: #192
[#95 bool_literal]: #107
[#95 call_expression]: #101
[#95 decimal_float_literal]: #112
[#95 decimal_int_literal]: #110
[#95 float_literal]: #106
[#95 hex_float_literal]: #113
[#95 hex_int_literal]: #111
[#95 ident]: #104
[#95 ident_pattern_token]: #109
[#95 int_literal]: #105
[#95 literal]: #102
[#95 paren_expression]: #103
[#95 primary_expression]: #99
[#95 singular_expression]: #93
[#95 template_elaborated_ident]: #100
[#95 unary_expression]: #191
[#96 bool_literal]: #107
[#96 call_expression]: #101
[#96 decimal_float_literal]: #112
[#96 decimal_int_literal]: #110
[#96 float_literal]: #106
[#96 hex_float_literal]: #113
[#96 hex_int_literal]: #111
[#96 ident]: #104
[#96 ident_pattern_token]: #109
[#96 int_literal]: #105
[#96 literal]: #102
[#96 paren_expression]: #103
[#96 primary_expression]: #99
[#96 singular_expression]: #93
[#96 template_elaborated_ident]: #100
[#96 unary_expression]: #190
[#97 bool_literal]: #107
[#97 call_expression]: #101
[#97 decimal_float_literal]: #112
[#97 decimal_int_literal]: #110
[#97 float_literal]: #106
[#97 hex_float_literal]: #113
[#97 hex_int_literal]: #111
[#97 ident]: #104
[#97 ident_pattern_token]: #109
[#97 int_literal]: #105
[#97 literal]: #102
[#97 paren_expression]: #103
[#97 primary_expression]: #99
[#97 singular_expression]: #93
[#97 template_elaborated_ident]: #100
[#97 unary_expression]: #189
[#98 bool_literal]: #107
[#98 call_expression]: #101
[#98 decimal_float_literal]: #112
[#98 decimal_int_literal]: #110
[#98 float_literal]: #106
[#98 hex_float_literal]: #113
[#98 hex_int_literal]: #111
[#98 ident]: #104
[#98 ident_pattern_token]: #109
[#98 int_literal]: #105
[#98 literal]: #102
[#98 paren_expression]: #103
[#98 primary_expression]: #99
[#98 singular_expression]: #93
[#98 template_elaborated_ident]: #100
[#98 unary_expression]: #188
[#99 component_or_swizzle_specifier]: #185
[#99 singular_expression/0.1]: #184
[#100 argument_expression_list]: #182
[#104 _disambiguate_template]: #181
[#108 additive_expression]: #90
[#108 binary_and_expression]: #87
[#108 binary_or_expression]: #88
[#108 binary_xor_expression]: #89
[#108 bitwise_expression]: #85
[#108 bool_literal]: #107
[#108 call_expression]: #101
[#108 decimal_float_literal]: #112
[#108 decimal_int_literal]: #110
[#108 expression]: #180
[#108 float_literal]: #106
[#108 hex_float_literal]: #113
[#108 hex_int_literal]: #111
[#108 ident]: #104
[#108 ident_pattern_token]: #109
[#108 int_literal]: #105
[#108 literal]: #102
[#108 multiplicative_expression]: #92
[#108 paren_expression]: #103
[#108 primary_expression]: #99
[#108 relational_expression]: #82
[#108 shift_expression]: #86
[#108 short_circuit_and_expression]: #84
[#108 short_circuit_or_expression]: #83
[#108 singular_expression]: #93
[#108 template_elaborated_ident]: #100
[#108 unary_expression]: #91
[#109 _disambiguate_template]: #179
[#127 align_attr]: #42
[#127 attribute]: #178
[#127 binding_attr]: #43
[#127 blend_src_attr]: #44
[#127 builtin_attr]: #45
[#127 compound_statement]: #175
[#127 compound_statement/0.0]: #176
[#127 compound_statement/0.0/0]: #177
[#127 compute_attr]: #58
[#127 const_attr]: #46
[#127 diagnostic_attr]: #47
[#127 fragment_attr]: #57
[#127 group_attr]: #48
[#127 id_attr]: #49
[#127 interpolate_attr]: #50
[#127 invariant_attr]: #51
[#127 location_attr]: #52
[#127 must_use_attr]: #53
[#127 size_attr]: #54
[#127 vertex_attr]: #56
[#127 workgroup_size_attr]: #55
[#128 ident]: #174
[#128 ident_pattern_token]: #109
[#129 struct_body_decl]: #172
[#131 ident]: #133
[#131 ident_pattern_token]: #109
[#131 optionally_typed_ident]: #170
[#133 optionally_typed_ident/0.1]: #167
[#134 global_variable_decl/0.2]: #165
[#135 _disambiguate_template]: #163
[#144 enable_extension_list/0.2]: #160
[#146 enable_extension_list/0.1/0]: #159
[#146 enable_extension_list/0.1/0/0.0]: #146
[#147 enable_extension_name]: #158
[#149 software_extension_list/0.2]: #156
[#151 software_extension_list/0.1/0]: #155
[#151 software_extension_list/0.1/0/0.0]: #151
[#152 software_extension_name]: #154
[#162 diagnostic_name_token]: #298
[#162 diagnostic_rule_name]: #297
[#163 _template_args_start]: #278
[#163 template_list]: #296
[#163 variable_decl/0.2]: #295
[#166 additive_expression]: #90
[#166 binary_and_expression]: #87
[#166 binary_or_expression]: #88
[#166 binary_xor_expression]: #89
[#166 bitwise_expression]: #85
[#166 bool_literal]: #107
[#166 call_expression]: #101
[#166 decimal_float_literal]: #112
[#166 decimal_int_literal]: #110
[#166 expression]: #294
[#166 float_literal]: #106
[#166 hex_float_literal]: #113
[#166 hex_int_literal]: #111
[#166 ident]: #104
[#166 ident_pattern_token]: #109
[#166 int_literal]: #105
[#166 literal]: #102
[#166 multiplicative_expression]: #92
[#166 paren_expression]: #103
[#166 primary_expression]: #99
[#166 relational_expression]: #82
[#166 shift_expression]: #86
[#166 short_circuit_and_expression]: #84
[#166 short_circuit_or_expression]: #83
[#166 singular_expression]: #93
[#166 template_elaborated_ident]: #100
[#166 unary_expression]: #91
[#168 ident]: #289
[#168 ident_pattern_token]: #109
[#168 type_specifier]: #293
[#169 additive_expression]: #90
[#169 binary_and_expression]: #87
[#169 binary_or_expression]: #88
[#169 binary_xor_expression]: #89
[#169 bitwise_expression]: #85
[#169 bool_literal]: #107
[#169 call_expression]: #101
[#169 decimal_float_literal]: #112
[#169 decimal_int_literal]: #110
[#169 expression]: #292
[#169 float_literal]: #106
[#169 hex_float_literal]: #113
[#169 hex_int_literal]: #111
[#169 ident]: #104
[#169 ident_pattern_token]: #109
[#169 int_literal]: #105
[#169 literal]: #102
[#169 multiplicative_expression]: #92
[#169 paren_expression]: #103
[#169 primary_expression]: #99
[#169 relational_expression]: #82
[#169 shift_expression]: #86
[#169 short_circuit_and_expression]: #84
[#169 short_circuit_or_expression]: #83
[#169 singular_expression]: #93
[#169 template_elaborated_ident]: #100
[#169 unary_expression]: #91
[#170 global_value_decl/1.3]: #290
[#171 ident]: #289
[#171 ident_pattern_token]: #109
[#171 type_specifier]: #288
[#173 align_attr]: #42
[#173 attribute]: #287
[#173 binding_attr]: #43
[#173 blend_src_attr]: #44
[#173 builtin_attr]: #45
[#173 compute_attr]: #58
[#173 const_attr]: #46
[#173 diagnostic_attr]: #47
[#173 fragment_attr]: #57
[#173 group_attr]: #48
[#173 id_attr]: #49
[#173 interpolate_attr]: #50
[#173 invariant_attr]: #51
[#173 location_attr]: #52
[#173 must_use_attr]: #53
[#173 size_attr]: #54
[#173 struct_member]: #284
[#173 struct_member/0.0]: #285
[#173 struct_member/0.0/0]: #286
[#173 vertex_attr]: #56
[#173 workgroup_size_attr]: #55
[#178 align_attr]: #42
[#178 attribute]: #178
[#178 binding_attr]: #43
[#178 blend_src_attr]: #44
[#178 builtin_attr]: #45
[#178 compound_statement/0.0/0]: #281
[#178 compute_attr]: #58
[#178 const_attr]: #46
[#178 diagnostic_attr]: #47
[#178 fragment_attr]: #57
[#178 group_attr]: #48
[#178 id_attr]: #49
[#178 interpolate_attr]: #50
[#178 invariant_attr]: #51
[#178 location_attr]: #52
[#178 must_use_attr]: #53
[#178 size_attr]: #54
[#178 vertex_attr]: #56
[#178 workgroup_size_attr]: #55
[#181 _template_args_start]: #278
[#181 template_elaborated_ident/0.2]: #276
[#181 template_list]: #277
[#183 additive_expression]: #90
[#183 argument_expression_list/0.1]: #273
[#183 binary_and_expression]: #87
[#183 binary_or_expression]: #88
[#183 binary_xor_expression]: #89
[#183 bitwise_expression]: #85
[#183 bool_literal]: #107
[#183 call_expression]: #101
[#183 decimal_float_literal]: #112
[#183 decimal_int_literal]: #110
[#183 expression]: #275
[#183 expression_comma_list]: #274
[#183 float_literal]: #106
[#183 hex_float_literal]: #113
[#183 hex_int_literal]: #111
[#183 ident]: #104
[#183 ident_pattern_token]: #109
[#183 int_literal]: #105
[#183 literal]: #102
[#183 multiplicative_expression]: #92
[#183 paren_expression]: #103
[#183 primary_expression]: #99
[#183 relational_expression]: #82
[#183 shift_expression]: #86
[#183 short_circuit_and_expression]: #84
[#183 short_circuit_or_expression]: #83
[#183 singular_expression]: #93
[#183 template_elaborated_ident]: #100
[#183 unary_expression]: #91
[#186 additive_expression]: #90
[#186 binary_and_expression]: #87
[#186 binary_or_expression]: #88
[#186 binary_xor_expression]: #89
[#186 bitwise_expression]: #85
[#186 bool_literal]: #107
[#186 call_expression]: #101
[#186 decimal_float_literal]: #112
[#186 decimal_int_literal]: #110
[#186 expression]: #272
[#186 float_literal]: #106
[#186 hex_float_literal]: #113
[#186 hex_int_literal]: #111
[#186 ident]: #104
[#186 ident_pattern_token]: #109
[#186 int_literal]: #105
[#186 literal]: #102
[#186 multiplicative_expression]: #92
[#186 paren_expression]: #103
[#186 primary_expression]: #99
[#186 relational_expression]: #82
[#186 shift_expression]: #86
[#186 short_circuit_and_expression]: #84
[#186 short_circuit_or_expression]: #83
[#186 singular_expression]: #93
[#186 template_elaborated_ident]: #100
[#186 unary_expression]: #91
[#187 member_ident]: #261
[#187 swizzle_name]: #262
[#193 bool_literal]: #107
[#193 call_expression]: #101
[#193 decimal_float_literal]: #112
[#193 decimal_int_literal]: #110
[#193 float_literal]: #106
[#193 hex_float_literal]: #113
[#193 hex_int_literal]: #111
[#193 ident]: #104
[#193 ident_pattern_token]: #109
[#193 int_literal]: #105
[#193 literal]: #102
[#193 paren_expression]: #103
[#193 primary_expression]: #99
[#193 singular_expression]: #93
[#193 template_elaborated_ident]: #100
[#193 unary_expression]: #260
[#197 bool_literal]: #107
[#197 call_expression]: #101
[#197 decimal_float_literal]: #112
[#197 decimal_int_literal]: #110
[#197 float_literal]: #106
[#197 hex_float_literal]: #113
[#197 hex_int_literal]: #111
[#197 ident]: #104
[#197 ident_pattern_token]: #109
[#197 int_literal]: #105
[#197 literal]: #102
[#197 paren_expression]: #103
[#197 primary_expression]: #99
[#197 singular_expression]: #93
[#197 template_elaborated_ident]: #100
[#197 unary_expression]: #259
[#198 bool_literal]: #107
[#198 call_expression]: #101
[#198 decimal_float_literal]: #112
[#198 decimal_int_literal]: #110
[#198 float_literal]: #106
[#198 hex_float_literal]: #113
[#198 hex_int_literal]: #111
[#198 ident]: #104
[#198 ident_pattern_token]: #109
[#198 int_literal]: #105
[#198 literal]: #102
[#198 paren_expression]: #103
[#198 primary_expression]: #99
[#198 singular_expression]: #93
[#198 template_elaborated_ident]: #100
[#198 unary_expression]: #258
[#201 bool_literal]: #107
[#201 call_expression]: #101
[#201 decimal_float_literal]: #112
[#201 decimal_int_literal]: #110
[#201 float_literal]: #106
[#201 hex_float_literal]: #113
[#201 hex_int_literal]: #111
[#201 ident]: #104
[#201 ident_pattern_token]: #109
[#201 int_literal]: #105
[#201 literal]: #102
[#201 multiplicative_expression]: #256
[#201 paren_expression]: #103
[#201 primary_expression]: #99
[#201 singular_expression]: #93
[#201 template_elaborated_ident]: #100
[#201 unary_expression]: #257
[#204 bool_literal]: #107
[#204 call_expression]: #101
[#204 decimal_float_literal]: #112
[#204 decimal_int_literal]: #110
[#204 float_literal]: #106
[#204 hex_float_literal]: #113
[#204 hex_int_literal]: #111
[#204 ident]: #104
[#204 ident_pattern_token]: #109
[#204 int_literal]: #105
[#204 literal]: #102
[#204 paren_expression]: #103
[#204 primary_expression]: #99
[#204 singular_expression]: #93
[#204 template_elaborated_ident]: #100
[#204 unary_expression]: #255
[#205 bool_literal]: #107
[#205 call_expression]: #101
[#205 decimal_float_literal]: #112
[#205 decimal_int_literal]: #110
[#205 float_literal]: #106
[#205 hex_float_literal]: #113
[#205 hex_int_literal]: #111
[#205 ident]: #104
[#205 ident_pattern_token]: #109
[#205 int_literal]: #105
[#205 literal]: #102
[#205 paren_expression]: #103
[#205 primary_expression]: #99
[#205 singular_expression]: #93
[#205 template_elaborated_ident]: #100
[#205 unary_expression]: #254
[#206 bool_literal]: #107
[#206 call_expression]: #101
[#206 decimal_float_literal]: #112
[#206 decimal_int_literal]: #110
[#206 float_literal]: #106
[#206 hex_float_literal]: #113
[#206 hex_int_literal]: #111
[#206 ident]: #104
[#206 ident_pattern_token]: #109
[#206 int_literal]: #105
[#206 literal]: #102
[#206 paren_expression]: #103
[#206 primary_expression]: #99
[#206 singular_expression]: #93
[#206 template_elaborated_ident]: #100
[#206 unary_expression]: #253
[#207 additive_expression]: #90
[#207 bool_literal]: #107
[#207 call_expression]: #101
[#207 decimal_float_literal]: #112
[#207 decimal_int_literal]: #110
[#207 float_literal]: #106
[#207 hex_float_literal]: #113
[#207 hex_int_literal]: #111
[#207 ident]: #104
[#207 ident_pattern_token]: #109
[#207 int_literal]: #105
[#207 literal]: #102
[#207 multiplicative_expression]: #92
[#207 paren_expression]: #103
[#207 primary_expression]: #99
[#207 shift_expression]: #252
[#207 singular_expression]: #93
[#207 template_elaborated_ident]: #100
[#207 unary_expression]: #245
[#208 additive_expression]: #90
[#208 bool_literal]: #107
[#208 call_expression]: #101
[#208 decimal_float_literal]: #112
[#208 decimal_int_literal]: #110
[#208 float_literal]: #106
[#208 hex_float_literal]: #113
[#208 hex_int_literal]: #111
[#208 ident]: #104
[#208 ident_pattern_token]: #109
[#208 int_literal]: #105
[#208 literal]: #102
[#208 multiplicative_expression]: #92
[#208 paren_expression]: #103
[#208 primary_expression]: #99
[#208 shift_expression]: #251
[#208 singular_expression]: #93
[#208 template_elaborated_ident]: #100
[#208 unary_expression]: #245
[#209 additive_expression]: #90
[#209 bool_literal]: #107
[#209 call_expression]: #101
[#209 decimal_float_literal]: #112
[#209 decimal_int_literal]: #110
[#209 float_literal]: #106
[#209 hex_float_literal]: #113
[#209 hex_int_literal]: #111
[#209 ident]: #104
[#209 ident_pattern_token]: #109
[#209 int_literal]: #105
[#209 literal]: #102
[#209 multiplicative_expression]: #92
[#209 paren_expression]: #103
[#209 primary_expression]: #99
[#209 shift_expression]: #250
[#209 singular_expression]: #93
[#209 template_elaborated_ident]: #100
[#209 unary_expression]: #245
[#210 additive_expression]: #90
[#210 bool_literal]: #107
[#210 call_expression]: #101
[#210 decimal_float_literal]: #112
[#210 decimal_int_literal]: #110
[#210 float_literal]: #106
[#210 hex_float_literal]: #113
[#210 hex_int_literal]: #111
[#210 ident]: #104
[#210 ident_pattern_token]: #109
[#210 int_literal]: #105
[#210 literal]: #102
[#210 multiplicative_expression]: #92
[#210 paren_expression]: #103
[#210 primary_expression]: #99
[#210 shift_expression]: #249
[#210 singular_expression]: #93
[#210 template_elaborated_ident]: #100
[#210 unary_expression]: #245
[#211 additive_expression]: #90
[#211 bool_literal]: #107
[#211 call_expression]: #101
[#211 decimal_float_literal]: #112
[#211 decimal_int_literal]: #110
[#211 float_literal]: #106
[#211 hex_float_literal]: #113
[#211 hex_int_literal]: #111
[#211 ident]: #104
[#211 ident_pattern_token]: #109
[#211 int_literal]: #105
[#211 literal]: #102
[#211 multiplicative_expression]: #92
[#211 paren_expression]: #103
[#211 primary_expression]: #99
[#211 shift_expression]: #248
[#211 singular_expression]: #93
[#211 template_elaborated_ident]: #100
[#211 unary_expression]: #245
[#212 additive_expression]: #90
[#212 bool_literal]: #107
[#212 call_expression]: #101
[#212 decimal_float_literal]: #112
[#212 decimal_int_literal]: #110
[#212 float_literal]: #106
[#212 hex_float_literal]: #113
[#212 hex_int_literal]: #111
[#212 ident]: #104
[#212 ident_pattern_token]: #109
[#212 int_literal]: #105
[#212 literal]: #102
[#212 multiplicative_expression]: #92
[#212 paren_expression]: #103
[#212 primary_expression]: #99
[#212 shift_expression]: #247
[#212 singular_expression]: #93
[#212 template_elaborated_ident]: #100
[#212 unary_expression]: #245
[#217 additive_expression]: #90
[#217 bool_literal]: #107
[#217 call_expression]: #101
[#217 decimal_float_literal]: #112
[#217 decimal_int_literal]: #110
[#217 float_literal]: #106
[#217 hex_float_literal]: #113
[#217 hex_int_literal]: #111
[#217 ident]: #104
[#217 ident_pattern_token]: #109
[#217 int_literal]: #105
[#217 literal]: #102
[#217 multiplicative_expression]: #92
[#217 paren_expression]: #103
[#217 primary_expression]: #99
[#217 relational_expression]: #246
[#217 shift_expression]: #86
[#217 singular_expression]: #93
[#217 template_elaborated_ident]: #100
[#217 unary_expression]: #245
[#218 additive_expression]: #90
[#218 bool_literal]: #107
[#218 call_expression]: #101
[#218 decimal_float_literal]: #112
[#218 decimal_int_literal]: #110
[#218 float_literal]: #106
[#218 hex_float_literal]: #113
[#218 hex_int_literal]: #111
[#218 ident]: #104
[#218 ident_pattern_token]: #109
[#218 int_literal]: #105
[#218 literal]: #102
[#218 multiplicative_expression]: #92
[#218 paren_expression]: #103
[#218 primary_expression]: #99
[#218 relational_expression]: #244
[#218 shift_expression]: #86
[#218 singular_expression]: #93
[#218 template_elaborated_ident]: #100
[#218 unary_expression]: #245
[#219 additive_expression]: #90
[#219 binary_and_expression]: #87
[#219 binary_or_expression]: #88
[#219 binary_xor_expression]: #89
[#219 bitwise_expression]: #85
[#219 bool_literal]: #107
[#219 call_expression]: #101
[#219 decimal_float_literal]: #112
[#219 decimal_int_literal]: #110
[#219 expression]: #243
[#219 float_literal]: #106
[#219 hex_float_literal]: #113
[#219 hex_int_literal]: #111
[#219 ident]: #104
[#219 ident_pattern_token]: #109
[#219 int_literal]: #105
[#219 literal]: #102
[#219 multiplicative_expression]: #92
[#219 paren_expression]: #103
[#219 primary_expression]: #99
[#219 relational_expression]: #82
[#219 shift_expression]: #86
[#219 short_circuit_and_expression]: #84
[#219 short_circuit_or_expression]: #83
[#219 singular_expression]: #93
[#219 template_elaborated_ident]: #100
[#219 unary_expression]: #91
[#220 additive_expression]: #90
[#220 binary_and_expression]: #87
[#220 binary_or_expression]: #88
[#220 binary_xor_expression]: #89
[#220 bitwise_expression]: #85
[#220 bool_literal]: #107
[#220 call_expression]: #101
[#220 decimal_float_literal]: #112
[#220 decimal_int_literal]: #110
[#220 expression]: #242
[#220 float_literal]: #106
[#220 hex_float_literal]: #113
[#220 hex_int_literal]: #111
[#220 ident]: #104
[#220 ident_pattern_token]: #109
[#220 int_literal]: #105
[#220 literal]: #102
[#220 multiplicative_expression]: #92
[#220 paren_expression]: #103
[#220 primary_expression]: #99
[#220 relational_expression]: #82
[#220 shift_expression]: #86
[#220 short_circuit_and_expression]: #84
[#220 short_circuit_or_expression]: #83
[#220 singular_expression]: #93
[#220 template_elaborated_ident]: #100
[#220 unary_expression]: #91
[#221 additive_expression]: #90
[#221 binary_and_expression]: #87
[#221 binary_or_expression]: #88
[#221 binary_xor_expression]: #89
[#221 bitwise_expression]: #85
[#221 bool_literal]: #107
[#221 call_expression]: #101
[#221 decimal_float_literal]: #112
[#221 decimal_int_literal]: #110
[#221 expression]: #241
[#221 float_literal]: #106
[#221 hex_float_literal]: #113
[#221 hex_int_literal]: #111
[#221 ident]: #104
[#221 ident_pattern_token]: #109
[#221 int_literal]: #105
[#221 literal]: #102
[#221 multiplicative_expression]: #92
[#221 paren_expression]: #103
[#221 primary_expression]: #99
[#221 relational_expression]: #82
[#221 shift_expression]: #86
[#221 short_circuit_and_expression]: #84
[#221 short_circuit_or_expression]: #83
[#221 singular_expression]: #93
[#221 template_elaborated_ident]: #100
[#221 unary_expression]: #91
[#222 interpolate_type_name]: #239
[#223 additive_expression]: #90
[#223 binary_and_expression]: #87
[#223 binary_or_expression]: #88
[#223 binary_xor_expression]: #89
[#223 bitwise_expression]: #85
[#223 bool_literal]: #107
[#223 call_expression]: #101
[#223 decimal_float_literal]: #112
[#223 decimal_int_literal]: #110
[#223 expression]: #238
[#223 float_literal]: #106
[#223 hex_float_literal]: #113
[#223 hex_int_literal]: #111
[#223 ident]: #104
[#223 ident_pattern_token]: #109
[#223 int_literal]: #105
[#223 literal]: #102
[#223 multiplicative_expression]: #92
[#223 paren_expression]: #103
[#223 primary_expression]: #99
[#223 relational_expression]: #82
[#223 shift_expression]: #86
[#223 short_circuit_and_expression]: #84
[#223 short_circuit_or_expression]: #83
[#223 singular_expression]: #93
[#223 template_elaborated_ident]: #100
[#223 unary_expression]: #91
[#224 additive_expression]: #90
[#224 binary_and_expression]: #87
[#224 binary_or_expression]: #88
[#224 binary_xor_expression]: #89
[#224 bitwise_expression]: #85
[#224 bool_literal]: #107
[#224 call_expression]: #101
[#224 decimal_float_literal]: #112
[#224 decimal_int_literal]: #110
[#224 expression]: #237
[#224 float_literal]: #106
[#224 hex_float_literal]: #113
[#224 hex_int_literal]: #111
[#224 ident]: #104
[#224 ident_pattern_token]: #109
[#224 int_literal]: #105
[#224 literal]: #102
[#224 multiplicative_expression]: #92
[#224 paren_expression]: #103
[#224 primary_expression]: #99
[#224 relational_expression]: #82
[#224 shift_expression]: #86
[#224 short_circuit_and_expression]: #84
[#224 short_circuit_or_expression]: #83
[#224 singular_expression]: #93
[#224 template_elaborated_ident]: #100
[#224 unary_expression]: #91
[#226 builtin_value_name]: #235
[#227 additive_expression]: #90
[#227 binary_and_expression]: #87
[#227 binary_or_expression]: #88
[#227 binary_xor_expression]: #89
[#227 bitwise_expression]: #85
[#227 bool_literal]: #107
[#227 call_expression]: #101
[#227 decimal_float_literal]: #112
[#227 decimal_int_literal]: #110
[#227 expression]: #234
[#227 float_literal]: #106
[#227 hex_float_literal]: #113
[#227 hex_int_literal]: #111
[#227 ident]: #104
[#227 ident_pattern_token]: #109
[#227 int_literal]: #105
[#227 literal]: #102
[#227 multiplicative_expression]: #92
[#227 paren_expression]: #103
[#227 primary_expression]: #99
[#227 relational_expression]: #82
[#227 shift_expression]: #86
[#227 short_circuit_and_expression]: #84
[#227 short_circuit_or_expression]: #83
[#227 singular_expression]: #93
[#227 template_elaborated_ident]: #100
[#227 unary_expression]: #91
[#228 additive_expression]: #90
[#228 binary_and_expression]: #87
[#228 binary_or_expression]: #88
[#228 binary_xor_expression]: #89
[#228 bitwise_expression]: #85
[#228 bool_literal]: #107
[#228 call_expression]: #101
[#228 decimal_float_literal]: #112
[#228 decimal_int_literal]: #110
[#228 expression]: #233
[#228 float_literal]: #106
[#228 hex_float_literal]: #113
[#228 hex_int_literal]: #111
[#228 ident]: #104
[#228 ident_pattern_token]: #109
[#228 int_literal]: #105
[#228 literal]: #102
[#228 multiplicative_expression]: #92
[#228 paren_expression]: #103
[#228 primary_expression]: #99
[#228 relational_expression]: #82
[#228 shift_expression]: #86
[#228 short_circuit_and_expression]: #84
[#228 short_circuit_or_expression]: #83
[#228 singular_expression]: #93
[#228 template_elaborated_ident]: #100
[#228 unary_expression]: #91
[#229 additive_expression]: #90
[#229 binary_and_expression]: #87
[#229 binary_or_expression]: #88
[#229 binary_xor_expression]: #89
[#229 bitwise_expression]: #85
[#229 bool_literal]: #107
[#229 call_expression]: #101
[#229 decimal_float_literal]: #112
[#229 decimal_int_literal]: #110
[#229 expression]: #232
[#229 float_literal]: #106
[#229 hex_float_literal]: #113
[#229 hex_int_literal]: #111
[#229 ident]: #104
[#229 ident_pattern_token]: #109
[#229 int_literal]: #105
[#229 literal]: #102
[#229 multiplicative_expression]: #92
[#229 paren_expression]: #103
[#229 primary_expression]: #99
[#229 relational_expression]: #82
[#229 shift_expression]: #86
[#229 short_circuit_and_expression]: #84
[#229 short_circuit_or_expression]: #83
[#229 singular_expression]: #93
[#229 template_elaborated_ident]: #100
[#229 unary_expression]: #91
[#232 align_attr/0.4]: #398
[#233 binding_attr/0.4]: #396
[#234 blend_src_attr/0.4]: #394
[#235 builtin_attr/0.4]: #392
[#237 group_attr/0.4]: #390
[#238 id_attr/0.4]: #388
[#239 interpolate_attr/0.4]: #386
[#241 location_attr/0.4]: #384
[#242 size_attr/0.4]: #382
[#243 workgroup_size_attr/0.4]: #380
[#245 _shift_left]: #197
[#245 _shift_right]: #198
[#256 multiplicative_operator]: #193
[#261 component_or_swizzle_specifier]: #379
[#261 component_or_swizzle_specifier/1.2]: #378
[#262 component_or_swizzle_specifier]: #377
[#262 component_or_swizzle_specifier/2.2]: #376
[#275 expression_comma_list/0.1]: #370
[#275 expression_comma_list/0.1/0]: #371
[#275 expression_comma_list/0.1/0/0.0]: #372
[#278 additive_expression]: #90
[#278 binary_and_expression]: #87
[#278 binary_or_expression]: #88
[#278 binary_xor_expression]: #89
[#278 bitwise_expression]: #369
[#278 bool_literal]: #107
[#278 call_expression]: #101
[#278 decimal_float_literal]: #112
[#278 decimal_int_literal]: #110
[#278 float_literal]: #106
[#278 hex_float_literal]: #113
[#278 hex_int_literal]: #111
[#278 ident]: #104
[#278 ident_pattern_token]: #109
[#278 int_literal]: #105
[#278 literal]: #102
[#278 multiplicative_expression]: #92
[#278 paren_expression]: #103
[#278 primary_expression]: #99
[#278 relational_expression]: #366
[#278 shift_expression]: #86
[#278 short_circuit_and_expression]: #368
[#278 short_circuit_or_expression]: #367
[#278 singular_expression]: #93
[#278 template_arg_comma_list]: #364
[#278 template_arg_expression]: #365
[#278 template_elaborated_ident]: #100
[#278 unary_expression]: #91
[#282 align_attr]: #42
[#282 assignment_statement]: #348
[#282 attribute]: #359
[#282 binding_attr]: #43
[#282 blend_src_attr]: #44
[#282 break_statement]: #330
[#282 builtin_attr]: #45
[#282 compound_statement]: #334
[#282 compound_statement/0.0]: #176
[#282 compound_statement/0.0/0]: #177
[#282 compound_statement/0.2]: #318
[#282 compound_statement/0.2/0]: #319
[#282 compute_attr]: #58
[#282 const_assert_statement]: #335
[#282 const_attr]: #46
[#282 continue_statement]: #331
[#282 core_lhs_expression]: #360
[#282 decrement_statement]: #350
[#282 diagnostic_attr]: #47
[#282 for_statement]: #326
[#282 for_statement/0.0]: #340
[#282 for_statement/0.0/0]: #354
[#282 fragment_attr]: #57
[#282 func_call_statement]: #328
[#282 group_attr]: #48
[#282 id_attr]: #49
[#282 ident]: #356
[#282 ident_pattern_token]: #109
[#282 if_statement]: #323
[#282 if_statement/0.0]: #337
[#282 if_statement/0.0/0]: #351
[#282 increment_statement]: #349
[#282 interpolate_attr]: #50
[#282 invariant_attr]: #51
[#282 lhs_expression]: #357
[#282 location_attr]: #52
[#282 loop_statement]: #325
[#282 loop_statement/0.0]: #339
[#282 loop_statement/0.0/0]: #353
[#282 must_use_attr]: #53
[#282 return_statement]: #322
[#282 size_attr]: #54
[#282 statement]: #320
[#282 switch_statement]: #324
[#282 switch_statement/0.0]: #338
[#282 switch_statement/0.0/0]: #352
[#282 template_elaborated_ident]: #342
[#282 variable_decl]: #343
[#282 variable_or_value_statement]: #329
[#282 variable_updating_statement]: #333
[#282 vertex_attr]: #56
[#282 while_statement]: #327
[#282 while_statement/0.0]: #341
[#282 while_statement/0.0/0]: #355
[#282 workgroup_size_attr]: #55
[#283 align_attr]: #42
[#283 attribute]: #317
[#283 binding_attr]: #43
[#283 blend_src_attr]: #44
[#283 builtin_attr]: #45
[#283 compute_attr]: #58
[#283 const_attr]: #46
[#283 diagnostic_attr]: #47
[#283 fragment_attr]: #57
[#283 function_header/0.3]: #312
[#283 group_attr]: #48
[#283 id_attr]: #49
[#283 interpolate_attr]: #50
[#283 invariant_attr]: #51
[#283 location_attr]: #52
[#283 must_use_attr]: #53
[#283 param]: #314
[#283 param/0.0]: #315
[#283 param/0.0/0]: #316
[#283 param_list]: #313
[#283 size_attr]: #54
[#283 vertex_attr]: #56
[#283 workgroup_size_attr]: #55
[#284 struct_body_decl/0.2]: #308
[#284 struct_body_decl/0.2/0]: #309
[#284 struct_body_decl/0.2/0/0.0]: #310
[#285 member_ident]: #307
[#287 align_attr]: #42
[#287 attribute]: #287
[#287 binding_attr]: #43
[#287 blend_src_attr]: #44
[#287 builtin_attr]: #45
[#287 compute_attr]: #58
[#287 const_attr]: #46
[#287 diagnostic_attr]: #47
[#287 fragment_attr]: #57
[#287 group_attr]: #48
[#287 id_attr]: #49
[#287 interpolate_attr]: #50
[#287 invariant_attr]: #51
[#287 location_attr]: #52
[#287 must_use_attr]: #53
[#287 size_attr]: #54
[#287 struct_member/0.0/0]: #306
[#287 vertex_attr]: #56
[#287 workgroup_size_attr]: #55
[#289 _disambiguate_template]: #305
[#291 additive_expression]: #90
[#291 binary_and_expression]: #87
[#291 binary_or_expression]: #88
[#291 binary_xor_expression]: #89
[#291 bitwise_expression]: #85
[#291 bool_literal]: #107
[#291 call_expression]: #101
[#291 decimal_float_literal]: #112
[#291 decimal_int_literal]: #110
[#291 expression]: #304
[#291 float_literal]: #106
[#291 hex_float_literal]: #113
[#291 hex_int_literal]: #111
[#291 ident]: #104
[#291 ident_pattern_token]: #109
[#291 int_literal]: #105
[#291 literal]: #102
[#291 multiplicative_expression]: #92
[#291 paren_expression]: #103
[#291 primary_expression]: #99
[#291 relational_expression]: #82
[#291 shift_expression]: #86
[#291 short_circuit_and_expression]: #84
[#291 short_circuit_or_expression]: #83
[#291 singular_expression]: #93
[#291 template_elaborated_ident]: #100
[#291 unary_expression]: #91
[#295 ident]: #133
[#295 ident_pattern_token]: #109
[#295 optionally_typed_ident]: #303
[#297 diagnostic_control/0.4]: #301
[#300 diagnostic_name_token]: #493
[#305 _template_args_start]: #278
[#305 template_elaborated_ident/0.2]: #491
[#305 template_list]: #277
[#308 struct_body_decl/0.3]: #488
[#310 struct_body_decl/0.2/0]: #487
[#310 struct_body_decl/0.2/0/0.0]: #310
[#311 align_attr]: #42
[#311 attribute]: #287
[#311 binding_attr]: #43
[#311 blend_src_attr]: #44
[#311 builtin_attr]: #45
[#311 compute_attr]: #58
[#311 const_attr]: #46
[#311 diagnostic_attr]: #47
[#311 fragment_attr]: #57
[#311 group_attr]: #48
[#311 id_attr]: #49
[#311 interpolate_attr]: #50
[#311 invariant_attr]: #51
[#311 location_attr]: #52
[#311 must_use_attr]: #53
[#311 size_attr]: #54
[#311 struct_member]: #486
[#311 struct_member/0.0]: #285
[#311 struct_member/0.0/0]: #286
[#311 vertex_attr]: #56
[#311 workgroup_size_attr]: #55
[#314 param_list/0.1]: #481
[#314 param_list/0.1/0]: #482
[#314 param_list/0.1/0/0.0]: #483
[#315 ident]: #480
[#315 ident_pattern_token]: #109
[#317 align_attr]: #42
[#317 attribute]: #317
[#317 binding_attr]: #43
[#317 blend_src_attr]: #44
[#317 builtin_attr]: #45
[#317 compute_attr]: #58
[#317 const_attr]: #46
[#317 diagnostic_attr]: #47
[#317 fragment_attr]: #57
[#317 group_attr]: #48
[#317 id_attr]: #49
[#317 interpolate_attr]: #50
[#317 invariant_attr]: #51
[#317 location_attr]: #52
[#317 must_use_attr]: #53
[#317 param/0.0/0]: #479
[#317 size_attr]: #54
[#317 vertex_attr]: #56
[#317 workgroup_size_attr]: #55
[#320 align_attr]: #42
[#320 assignment_statement]: #348
[#320 attribute]: #359
[#320 binding_attr]: #43
[#320 blend_src_attr]: #44
[#320 break_statement]: #330
[#320 builtin_attr]: #45
[#320 compound_statement]: #334
[#320 compound_statement/0.0]: #176
[#320 compound_statement/0.0/0]: #177
[#320 compound_statement/0.2/0]: #477
[#320 compute_attr]: #58
[#320 const_assert_statement]: #335
[#320 const_attr]: #46
[#320 continue_statement]: #331
[#320 core_lhs_expression]: #360
[#320 decrement_statement]: #350
[#320 diagnostic_attr]: #47
[#320 for_statement]: #326
[#320 for_statement/0.0]: #340
[#320 for_statement/0.0/0]: #354
[#320 fragment_attr]: #57
[#320 func_call_statement]: #328
[#320 group_attr]: #48
[#320 id_attr]: #49
[#320 ident]: #356
[#320 ident_pattern_token]: #109
[#320 if_statement]: #323
[#320 if_statement/0.0]: #337
[#320 if_statement/0.0/0]: #351
[#320 increment_statement]: #349
[#320 interpolate_attr]: #50
[#320 invariant_attr]: #51
[#320 lhs_expression]: #357
[#320 location_attr]: #52
[#320 loop_statement]: #325
[#320 loop_statement/0.0]: #339
[#320 loop_statement/0.0/0]: #353
[#320 must_use_attr]: #53
[#320 return_statement]: #322
[#320 size_attr]: #54
[#320 statement]: #320
[#320 switch_statement]: #324
[#320 switch_statement/0.0]: #338
[#320 switch_statement/0.0/0]: #352
[#320 template_elaborated_ident]: #342
[#320 variable_decl]: #343
[#320 variable_or_value_statement]: #329
[#320 variable_updating_statement]: #333
[#320 vertex_attr]: #56
[#320 while_statement]: #327
[#320 while_statement/0.0]: #341
[#320 while_statement/0.0/0]: #355
[#320 workgroup_size_attr]: #55
[#336 additive_expression]: #90
[#336 binary_and_expression]: #87
[#336 binary_or_expression]: #88
[#336 binary_xor_expression]: #89
[#336 bitwise_expression]: #85
[#336 bool_literal]: #107
[#336 call_expression]: #101
[#336 decimal_float_literal]: #112
[#336 decimal_int_literal]: #110
[#336 expression]: #468
[#336 float_literal]: #106
[#336 hex_float_literal]: #113
[#336 hex_int_literal]: #111
[#336 ident]: #104
[#336 ident_pattern_token]: #109
[#336 int_literal]: #105
[#336 literal]: #102
[#336 multiplicative_expression]: #92
[#336 paren_expression]: #103
[#336 primary_expression]: #99
[#336 relational_expression]: #82
[#336 return_statement/0.1]: #467
[#336 shift_expression]: #86
[#336 short_circuit_and_expression]: #84
[#336 short_circuit_or_expression]: #83
[#336 singular_expression]: #93
[#336 template_elaborated_ident]: #100
[#336 unary_expression]: #91
[#337 if_clause]: #465
[#342 argument_expression_list]: #460
[#344 ident]: #133
[#344 ident_pattern_token]: #109
[#344 optionally_typed_ident]: #458
[#345 ident]: #133
[#345 ident_pattern_token]: #109
[#345 optionally_typed_ident]: #457
[#356 _disambiguate_template]: #456
[#357 _shift_left_assign]: #453
[#357 _shift_right_assign]: #452
[#357 assignment_statement/0.1]: #439
[#357 compound_assignment_operator]: #443
[#359 align_attr]: #42
[#359 attribute]: #359
[#359 binding_attr]: #43
[#359 blend_src_attr]: #44
[#359 builtin_attr]: #45
[#359 compound_statement/0.0/0]: #281
[#359 compute_attr]: #58
[#359 const_attr]: #46
[#359 diagnostic_attr]: #47
[#359 for_statement/0.0/0]: #436
[#359 fragment_attr]: #57
[#359 group_attr]: #48
[#359 id_attr]: #49
[#359 if_statement/0.0/0]: #433
[#359 interpolate_attr]: #50
[#359 invariant_attr]: #51
[#359 location_attr]: #52
[#359 loop_statement/0.0/0]: #435
[#359 must_use_attr]: #53
[#359 size_attr]: #54
[#359 switch_statement/0.0/0]: #434
[#359 vertex_attr]: #56
[#359 while_statement/0.0/0]: #437
[#359 workgroup_size_attr]: #55
[#360 component_or_swizzle_specifier]: #432
[#360 lhs_expression/0.1]: #431
[#361 core_lhs_expression]: #360
[#361 ident]: #428
[#361 ident_pattern_token]: #109
[#361 lhs_expression]: #430
[#362 core_lhs_expression]: #360
[#362 ident]: #428
[#362 ident_pattern_token]: #109
[#362 lhs_expression]: #429
[#363 core_lhs_expression]: #360
[#363 ident]: #428
[#363 ident_pattern_token]: #109
[#363 lhs_expression]: #427
[#364 _template_args_end]: #425
[#365 template_arg_comma_list/0.1]: #421
[#365 template_arg_comma_list/0.1/0]: #422
[#365 template_arg_comma_list/0.1/0/0.0]: #423
[#370 expression_comma_list/0.2]: #417
[#372 expression_comma_list/0.1/0]: #416
[#372 expression_comma_list/0.1/0/0.0]: #372
[#373 additive_expression]: #90
[#373 binary_and_expression]: #87
[#373 binary_or_expression]: #88
[#373 binary_xor_expression]: #89
[#373 bitwise_expression]: #85
[#373 bool_literal]: #107
[#373 call_expression]: #101
[#373 decimal_float_literal]: #112
[#373 decimal_int_literal]: #110
[#373 expression]: #415
[#373 float_literal]: #106
[#373 hex_float_literal]: #113
[#373 hex_int_literal]: #111
[#373 ident]: #104
[#373 ident_pattern_token]: #109
[#373 int_literal]: #105
[#373 literal]: #102
[#373 multiplicative_expression]: #92
[#373 paren_expression]: #103
[#373 primary_expression]: #99
[#373 relational_expression]: #82
[#373 shift_expression]: #86
[#373 short_circuit_and_expression]: #84
[#373 short_circuit_or_expression]: #83
[#373 singular_expression]: #93
[#373 template_elaborated_ident]: #100
[#373 unary_expression]: #91
[#375 component_or_swizzle_specifier]: #414
[#375 component_or_swizzle_specifier/0.3]: #413
[#381 additive_expression]: #90
[#381 binary_and_expression]: #87
[#381 binary_or_expression]: #88
[#381 binary_xor_expression]: #89
[#381 bitwise_expression]: #85
[#381 bool_literal]: #107
[#381 call_expression]: #101
[#381 decimal_float_literal]: #112
[#381 decimal_int_literal]: #110
[#381 expression]: #411
[#381 float_literal]: #106
[#381 hex_float_literal]: #113
[#381 hex_int_literal]: #111
[#381 ident]: #104
[#381 ident_pattern_token]: #109
[#381 int_literal]: #105
[#381 literal]: #102
[#381 multiplicative_expression]: #92
[#381 paren_expression]: #103
[#381 primary_expression]: #99
[#381 relational_expression]: #82
[#381 shift_expression]: #86
[#381 short_circuit_and_expression]: #84
[#381 short_circuit_or_expression]: #83
[#381 singular_expression]: #93
[#381 template_elaborated_ident]: #100
[#381 unary_expression]: #91
[#387 interpolate_sampling_name]: #406
[#406 interpolate_attr/1.6]: #529
[#411 workgroup_size_attr/1.6]: #527
[#419 additive_expression]: #90
[#419 bool_literal]: #107
[#419 call_expression]: #101
[#419 decimal_float_literal]: #112
[#419 decimal_int_literal]: #110
[#419 float_literal]: #106
[#419 hex_float_literal]: #113
[#419 hex_int_literal]: #111
[#419 ident]: #104
[#419 ident_pattern_token]: #109
[#419 int_literal]: #105
[#419 literal]: #102
[#419 multiplicative_expression]: #92
[#419 paren_expression]: #103
[#419 primary_expression]: #99
[#419 relational_expression]: #526
[#419 shift_expression]: #86
[#419 singular_expression]: #93
[#419 template_elaborated_ident]: #100
[#419 unary_expression]: #245
[#420 additive_expression]: #90
[#420 bool_literal]: #107
[#420 call_expression]: #101
[#420 decimal_float_literal]: #112
[#420 decimal_int_literal]: #110
[#420 float_literal]: #106
[#420 hex_float_literal]: #113
[#420 hex_int_literal]: #111
[#420 ident]: #104
[#420 ident_pattern_token]: #109
[#420 int_literal]: #105
[#420 literal]: #102
[#420 multiplicative_expression]: #92
[#420 paren_expression]: #103
[#420 primary_expression]: #99
[#420 relational_expression]: #525
[#420 shift_expression]: #86
[#420 singular_expression]: #93
[#420 template_elaborated_ident]: #100
[#420 unary_expression]: #245
[#421 template_arg_comma_list/0.2]: #523
[#423 template_arg_comma_list/0.1/0]: #522
[#423 template_arg_comma_list/0.1/0/0.0]: #423
[#424 additive_expression]: #90
[#424 binary_and_expression]: #87
[#424 binary_or_expression]: #88
[#424 binary_xor_expression]: #89
[#424 bitwise_expression]: #369
[#424 bool_literal]: #107
[#424 call_expression]: #101
[#424 decimal_float_literal]: #112
[#424 decimal_int_literal]: #110
[#424 float_literal]: #106
[#424 hex_float_literal]: #113
[#424 hex_int_literal]: #111
[#424 ident]: #104
[#424 ident_pattern_token]: #109
[#424 int_literal]: #105
[#424 literal]: #102
[#424 multiplicative_expression]: #92
[#424 paren_expression]: #103
[#424 primary_expression]: #99
[#424 relational_expression]: #366
[#424 shift_expression]: #86
[#424 short_circuit_and_expression]: #368
[#424 short_circuit_or_expression]: #367
[#424 singular_expression]: #93
[#424 template_arg_expression]: #521
[#424 template_elaborated_ident]: #100
[#424 unary_expression]: #91
[#428 _disambiguate_template]: #519
[#438 additive_expression]: #90
[#438 binary_and_expression]: #87
[#438 binary_or_expression]: #88
[#438 binary_xor_expression]: #89
[#438 bitwise_expression]: #85
[#438 bool_literal]: #107
[#438 call_expression]: #101
[#438 decimal_float_literal]: #112
[#438 decimal_int_literal]: #110
[#438 expression]: #518
[#438 float_literal]: #106
[#438 hex_float_literal]: #113
[#438 hex_int_literal]: #111
[#438 ident]: #104
[#438 ident_pattern_token]: #109
[#438 int_literal]: #105
[#438 literal]: #102
[#438 multiplicative_expression]: #92
[#438 paren_expression]: #103
[#438 primary_expression]: #99
[#438 relational_expression]: #82
[#438 shift_expression]: #86
[#438 short_circuit_and_expression]: #84
[#438 short_circuit_or_expression]: #83
[#438 singular_expression]: #93
[#438 template_elaborated_ident]: #100
[#438 unary_expression]: #91
[#439 additive_expression]: #90
[#439 binary_and_expression]: #87
[#439 binary_or_expression]: #88
[#439 binary_xor_expression]: #89
[#439 bitwise_expression]: #85
[#439 bool_literal]: #107
[#439 call_expression]: #101
[#439 decimal_float_literal]: #112
[#439 decimal_int_literal]: #110
[#439 expression]: #517
[#439 float_literal]: #106
[#439 hex_float_literal]: #113
[#439 hex_int_literal]: #111
[#439 ident]: #104
[#439 ident_pattern_token]: #109
[#439 int_literal]: #105
[#439 literal]: #102
[#439 multiplicative_expression]: #92
[#439 paren_expression]: #103
[#439 primary_expression]: #99
[#439 relational_expression]: #82
[#439 shift_expression]: #86
[#439 short_circuit_and_expression]: #84
[#439 short_circuit_or_expression]: #83
[#439 singular_expression]: #93
[#439 template_elaborated_ident]: #100
[#439 unary_expression]: #91
[#456 _template_args_start]: #278
[#456 template_elaborated_ident/0.2]: #276
[#456 template_list]: #277
[#459 additive_expression]: #90
[#459 binary_and_expression]: #87
[#459 binary_or_expression]: #88
[#459 binary_xor_expression]: #89
[#459 bitwise_expression]: #85
[#459 bool_literal]: #107
[#459 call_expression]: #101
[#459 decimal_float_literal]: #112
[#459 decimal_int_literal]: #110
[#459 expression]: #514
[#459 float_literal]: #106
[#459 hex_float_literal]: #113
[#459 hex_int_literal]: #111
[#459 ident]: #104
[#459 ident_pattern_token]: #109
[#459 int_literal]: #105
[#459 literal]: #102
[#459 multiplicative_expression]: #92
[#459 paren_expression]: #103
[#459 primary_expression]: #99
[#459 relational_expression]: #82
[#459 shift_expression]: #86
[#459 short_circuit_and_expression]: #84
[#459 short_circuit_or_expression]: #83
[#459 singular_expression]: #93
[#459 template_elaborated_ident]: #100
[#459 unary_expression]: #91
[#461 additive_expression]: #90
[#461 binary_and_expression]: #87
[#461 binary_or_expression]: #88
[#461 binary_xor_expression]: #89
[#461 bitwise_expression]: #85
[#461 bool_literal]: #107
[#461 call_expression]: #101
[#461 decimal_float_literal]: #112
[#461 decimal_int_literal]: #110
[#461 expression]: #513
[#461 float_literal]: #106
[#461 hex_float_literal]: #113
[#461 hex_int_literal]: #111
[#461 ident]: #104
[#461 ident_pattern_token]: #109
[#461 int_literal]: #105
[#461 literal]: #102
[#461 multiplicative_expression]: #92
[#461 paren_expression]: #103
[#461 primary_expression]: #99
[#461 relational_expression]: #82
[#461 shift_expression]: #86
[#461 short_circuit_and_expression]: #84
[#461 short_circuit_or_expression]: #83
[#461 singular_expression]: #93
[#461 template_elaborated_ident]: #100
[#461 unary_expression]: #91
[#463 align_attr]: #42
[#463 attribute]: #511
[#463 binding_attr]: #43
[#463 blend_src_attr]: #44
[#463 builtin_attr]: #45
[#463 compute_attr]: #58
[#463 const_attr]: #46
[#463 diagnostic_attr]: #47
[#463 fragment_attr]: #57
[#463 group_attr]: #48
[#463 id_attr]: #49
[#463 interpolate_attr]: #50
[#463 invariant_attr]: #51
[#463 location_attr]: #52
[#463 loop_statement/0.2]: #509
[#463 loop_statement/0.2/0]: #510
[#463 must_use_attr]: #53
[#463 size_attr]: #54
[#463 vertex_attr]: #56
[#463 workgroup_size_attr]: #55
[#464 additive_expression]: #90
[#464 binary_and_expression]: #87
[#464 binary_or_expression]: #88
[#464 binary_xor_expression]: #89
[#464 bitwise_expression]: #85
[#464 bool_literal]: #107
[#464 call_expression]: #101
[#464 decimal_float_literal]: #112
[#464 decimal_int_literal]: #110
[#464 expression]: #508
[#464 float_literal]: #106
[#464 hex_float_literal]: #113
[#464 hex_int_literal]: #111
[#464 ident]: #104
[#464 ident_pattern_token]: #109
[#464 int_literal]: #105
[#464 literal]: #102
[#464 multiplicative_expression]: #92
[#464 paren_expression]: #103
[#464 primary_expression]: #99
[#464 relational_expression]: #82
[#464 shift_expression]: #86
[#464 short_circuit_and_expression]: #84
[#464 short_circuit_or_expression]: #83
[#464 singular_expression]: #93
[#464 template_elaborated_ident]: #100
[#464 unary_expression]: #91
[#465 else_if_clause]: #506
[#465 if_statement/0.2]: #504
[#465 if_statement/0.2/0]: #505
[#466 additive_expression]: #90
[#466 binary_and_expression]: #87
[#466 binary_or_expression]: #88
[#466 binary_xor_expression]: #89
[#466 bitwise_expression]: #85
[#466 bool_literal]: #107
[#466 call_expression]: #101
[#466 decimal_float_literal]: #112
[#466 decimal_int_literal]: #110
[#466 expression]: #503
[#466 float_literal]: #106
[#466 hex_float_literal]: #113
[#466 hex_int_literal]: #111
[#466 ident]: #104
[#466 ident_pattern_token]: #109
[#466 int_literal]: #105
[#466 literal]: #102
[#466 multiplicative_expression]: #92
[#466 paren_expression]: #103
[#466 primary_expression]: #99
[#466 relational_expression]: #82
[#466 shift_expression]: #86
[#466 short_circuit_and_expression]: #84
[#466 short_circuit_or_expression]: #83
[#466 singular_expression]: #93
[#466 template_elaborated_ident]: #100
[#466 unary_expression]: #91
[#481 param_list/0.2]: #500
[#483 param_list/0.1/0]: #499
[#483 param_list/0.1/0/0.0]: #483
[#484 align_attr]: #42
[#484 attribute]: #317
[#484 binding_attr]: #43
[#484 blend_src_attr]: #44
[#484 builtin_attr]: #45
[#484 compute_attr]: #58
[#484 const_attr]: #46
[#484 diagnostic_attr]: #47
[#484 fragment_attr]: #57
[#484 group_attr]: #48
[#484 id_attr]: #49
[#484 interpolate_attr]: #50
[#484 invariant_attr]: #51
[#484 location_attr]: #52
[#484 must_use_attr]: #53
[#484 param]: #498
[#484 param/0.0]: #315
[#484 param/0.0/0]: #316
[#484 size_attr]: #54
[#484 vertex_attr]: #56
[#484 workgroup_size_attr]: #55
[#485 function_header/0.5]: #496
[#490 ident]: #289
[#490 ident_pattern_token]: #109
[#490 type_specifier]: #494
[#497 align_attr]: #42
[#497 attribute]: #558
[#497 binding_attr]: #43
[#497 blend_src_attr]: #44
[#497 builtin_attr]: #45
[#497 compute_attr]: #58
[#497 const_attr]: #46
[#497 diagnostic_attr]: #47
[#497 fragment_attr]: #57
[#497 function_header/0.5/0.1]: #556
[#497 function_header/0.5/0.1/0]: #557
[#497 group_attr]: #48
[#497 id_attr]: #49
[#497 interpolate_attr]: #50
[#497 invariant_attr]: #51
[#497 location_attr]: #52
[#497 must_use_attr]: #53
[#497 size_attr]: #54
[#497 vertex_attr]: #56
[#497 workgroup_size_attr]: #55
[#502 ident]: #289
[#502 ident_pattern_token]: #109
[#502 type_specifier]: #555
[#503 align_attr]: #42
[#503 attribute]: #178
[#503 binding_attr]: #43
[#503 blend_src_attr]: #44
[#503 builtin_attr]: #45
[#503 compound_statement]: #554
[#503 compound_statement/0.0]: #176
[#503 compound_statement/0.0/0]: #177
[#503 compute_attr]: #58
[#503 const_attr]: #46
[#503 diagnostic_attr]: #47
[#503 fragment_attr]: #57
[#503 group_attr]: #48
[#503 id_attr]: #49
[#503 interpolate_attr]: #50
[#503 invariant_attr]: #51
[#503 location_attr]: #52
[#503 must_use_attr]: #53
[#503 size_attr]: #54
[#503 vertex_attr]: #56
[#503 workgroup_size_attr]: #55
[#504 else_clause]: #552
[#504 if_statement/0.3]: #551
[#506 else_if_clause]: #506
[#506 if_statement/0.2/0]: #550
[#508 align_attr]: #42
[#508 attribute]: #548
[#508 binding_attr]: #43
[#508 blend_src_attr]: #44
[#508 builtin_attr]: #45
[#508 compute_attr]: #58
[#508 const_attr]: #46
[#508 diagnostic_attr]: #47
[#508 fragment_attr]: #57
[#508 group_attr]: #48
[#508 id_attr]: #49
[#508 interpolate_attr]: #50
[#508 invariant_attr]: #51
[#508 location_attr]: #52
[#508 must_use_attr]: #53
[#508 size_attr]: #54
[#508 switch_body]: #545
[#508 switch_body/0.0]: #546
[#508 switch_body/0.0/0]: #547
[#508 vertex_attr]: #56
[#508 workgroup_size_attr]: #55
[#511 align_attr]: #42
[#511 attribute]: #511
[#511 binding_attr]: #43
[#511 blend_src_attr]: #44
[#511 builtin_attr]: #45
[#511 compute_attr]: #58
[#511 const_attr]: #46
[#511 diagnostic_attr]: #47
[#511 fragment_attr]: #57
[#511 group_attr]: #48
[#511 id_attr]: #49
[#511 interpolate_attr]: #50
[#511 invariant_attr]: #51
[#511 location_attr]: #52
[#511 loop_statement/0.2/0]: #543
[#511 must_use_attr]: #53
[#511 size_attr]: #54
[#511 vertex_attr]: #56
[#511 workgroup_size_attr]: #55
[#512 assignment_statement]: #348
[#512 core_lhs_expression]: #360
[#512 decrement_statement]: #350
[#512 for_header]: #537
[#512 for_header/0.0]: #538
[#512 for_init]: #539
[#512 func_call_statement]: #542
[#512 ident]: #356
[#512 ident_pattern_token]: #109
[#512 increment_statement]: #349
[#512 lhs_expression]: #357
[#512 template_elaborated_ident]: #342
[#512 variable_decl]: #343
[#512 variable_or_value_statement]: #540
[#512 variable_updating_statement]: #541
[#513 align_attr]: #42
[#513 attribute]: #178
[#513 binding_attr]: #43
[#513 blend_src_attr]: #44
[#513 builtin_attr]: #45
[#513 compound_statement]: #536
[#513 compound_statement/0.0]: #176
[#513 compound_statement/0.0/0]: #177
[#513 compute_attr]: #58
[#513 const_attr]: #46
[#513 diagnostic_attr]: #47
[#513 fragment_attr]: #57
[#513 group_attr]: #48
[#513 id_attr]: #49
[#513 interpolate_attr]: #50
[#513 invariant_attr]: #51
[#513 location_attr]: #52
[#513 must_use_attr]: #53
[#513 size_attr]: #54
[#513 vertex_attr]: #56
[#513 workgroup_size_attr]: #55
[#515 additive_expression]: #90
[#515 binary_and_expression]: #87
[#515 binary_or_expression]: #88
[#515 binary_xor_expression]: #89
[#515 bitwise_expression]: #85
[#515 bool_literal]: #107
[#515 call_expression]: #101
[#515 decimal_float_literal]: #112
[#515 decimal_int_literal]: #110
[#515 expression]: #535
[#515 float_literal]: #106
[#515 hex_float_literal]: #113
[#515 hex_int_literal]: #111
[#515 ident]: #104
[#515 ident_pattern_token]: #109
[#515 int_literal]: #105
[#515 literal]: #102
[#515 multiplicative_expression]: #92
[#515 paren_expression]: #103
[#515 primary_expression]: #99
[#515 relational_expression]: #82
[#515 shift_expression]: #86
[#515 short_circuit_and_expression]: #84
[#515 short_circuit_or_expression]: #83
[#515 singular_expression]: #93
[#515 template_elaborated_ident]: #100
[#515 unary_expression]: #91
[#516 additive_expression]: #90
[#516 binary_and_expression]: #87
[#516 binary_or_expression]: #88
[#516 binary_xor_expression]: #89
[#516 bitwise_expression]: #85
[#516 bool_literal]: #107
[#516 call_expression]: #101
[#516 decimal_float_literal]: #112
[#516 decimal_int_literal]: #110
[#516 expression]: #534
[#516 float_literal]: #106
[#516 hex_float_literal]: #113
[#516 hex_int_literal]: #111
[#516 ident]: #104
[#516 ident_pattern_token]: #109
[#516 int_literal]: #105
[#516 literal]: #102
[#516 multiplicative_expression]: #92
[#516 paren_expression]: #103
[#516 primary_expression]: #99
[#516 relational_expression]: #82
[#516 shift_expression]: #86
[#516 short_circuit_and_expression]: #84
[#516 short_circuit_or_expression]: #83
[#516 singular_expression]: #93
[#516 template_elaborated_ident]: #100
[#516 unary_expression]: #91
[#528 additive_expression]: #90
[#528 binary_and_expression]: #87
[#528 binary_or_expression]: #88
[#528 binary_xor_expression]: #89
[#528 bitwise_expression]: #85
[#528 bool_literal]: #107
[#528 call_expression]: #101
[#528 decimal_float_literal]: #112
[#528 decimal_int_literal]: #110
[#528 expression]: #532
[#528 float_literal]: #106
[#528 hex_float_literal]: #113
[#528 hex_int_literal]: #111
[#528 ident]: #104
[#528 ident_pattern_token]: #109
[#528 int_literal]: #105
[#528 literal]: #102
[#528 multiplicative_expression]: #92
[#528 paren_expression]: #103
[#528 primary_expression]: #99
[#528 relational_expression]: #82
[#528 shift_expression]: #86
[#528 short_circuit_and_expression]: #84
[#528 short_circuit_or_expression]: #83
[#528 singular_expression]: #93
[#528 template_elaborated_ident]: #100
[#528 unary_expression]: #91
[#532 workgroup_size_attr/2.8]: #570
[#544 align_attr]: #42
[#544 assignment_statement]: #348
[#544 attribute]: #359
[#544 binding_attr]: #43
[#544 blend_src_attr]: #44
[#544 break_statement]: #330
[#544 builtin_attr]: #45
[#544 compound_statement]: #334
[#544 compound_statement/0.0]: #176
[#544 compound_statement/0.0/0]: #177
[#544 compute_attr]: #58
[#544 const_assert_statement]: #335
[#544 const_attr]: #46
[#544 continue_statement]: #331
[#544 core_lhs_expression]: #360
[#544 decrement_statement]: #350
[#544 diagnostic_attr]: #47
[#544 for_statement]: #326
[#544 for_statement/0.0]: #340
[#544 for_statement/0.0/0]: #354
[#544 fragment_attr]: #57
[#544 func_call_statement]: #328
[#544 group_attr]: #48
[#544 id_attr]: #49
[#544 ident]: #356
[#544 ident_pattern_token]: #109
[#544 if_statement]: #323
[#544 if_statement/0.0]: #337
[#544 if_statement/0.0/0]: #351
[#544 increment_statement]: #349
[#544 interpolate_attr]: #50
[#544 invariant_attr]: #51
[#544 lhs_expression]: #357
[#544 location_attr]: #52
[#544 loop_statement]: #325
[#544 loop_statement/0.0]: #339
[#544 loop_statement/0.0/0]: #353
[#544 loop_statement/0.4]: #565
[#544 loop_statement/0.4/0]: #566
[#544 must_use_attr]: #53
[#544 return_statement]: #322
[#544 size_attr]: #54
[#544 statement]: #567
[#544 switch_statement]: #324
[#544 switch_statement/0.0]: #338
[#544 switch_statement/0.0/0]: #352
[#544 template_elaborated_ident]: #342
[#544 variable_decl]: #343
[#544 variable_or_value_statement]: #329
[#544 variable_updating_statement]: #333
[#544 vertex_attr]: #56
[#544 while_statement]: #327
[#544 while_statement/0.0]: #341
[#544 while_statement/0.0/0]: #355
[#544 workgroup_size_attr]: #55
[#548 align_attr]: #42
[#548 attribute]: #548
[#548 binding_attr]: #43
[#548 blend_src_attr]: #44
[#548 builtin_attr]: #45
[#548 compute_attr]: #58
[#548 const_attr]: #46
[#548 diagnostic_attr]: #47
[#548 fragment_attr]: #57
[#548 group_attr]: #48
[#548 id_attr]: #49
[#548 interpolate_attr]: #50
[#548 invariant_attr]: #51
[#548 location_attr]: #52
[#548 must_use_attr]: #53
[#548 size_attr]: #54
[#548 switch_body/0.0/0]: #563
[#548 vertex_attr]: #56
[#548 workgroup_size_attr]: #55
[#549 additive_expression]: #90
[#549 binary_and_expression]: #87
[#549 binary_or_expression]: #88
[#549 binary_xor_expression]: #89
[#549 bitwise_expression]: #85
[#549 bool_literal]: #107
[#549 call_expression]: #101
[#549 decimal_float_literal]: #112
[#549 decimal_int_literal]: #110
[#549 expression]: #562
[#549 float_literal]: #106
[#549 hex_float_literal]: #113
[#549 hex_int_literal]: #111
[#549 ident]: #104
[#549 ident_pattern_token]: #109
[#549 int_literal]: #105
[#549 literal]: #102
[#549 multiplicative_expression]: #92
[#549 paren_expression]: #103
[#549 primary_expression]: #99
[#549 relational_expression]: #82
[#549 shift_expression]: #86
[#549 short_circuit_and_expression]: #84
[#549 short_circuit_or_expression]: #83
[#549 singular_expression]: #93
[#549 template_elaborated_ident]: #100
[#549 unary_expression]: #91
[#553 align_attr]: #42
[#553 attribute]: #178
[#553 binding_attr]: #43
[#553 blend_src_attr]: #44
[#553 builtin_attr]: #45
[#553 compound_statement]: #561
[#553 compound_statement/0.0]: #176
[#553 compound_statement/0.0/0]: #177
[#553 compute_attr]: #58
[#553 const_attr]: #46
[#553 diagnostic_attr]: #47
[#553 fragment_attr]: #57
[#553 group_attr]: #48
[#553 id_attr]: #49
[#553 interpolate_attr]: #50
[#553 invariant_attr]: #51
[#553 location_attr]: #52
[#553 must_use_attr]: #53
[#553 size_attr]: #54
[#553 vertex_attr]: #56
[#553 workgroup_size_attr]: #55
[#556 ident]: #104
[#556 ident_pattern_token]: #109
[#556 template_elaborated_ident]: #560
[#558 align_attr]: #42
[#558 attribute]: #558
[#558 binding_attr]: #43
[#558 blend_src_attr]: #44
[#558 builtin_attr]: #45
[#558 compute_attr]: #58
[#558 const_attr]: #46
[#558 diagnostic_attr]: #47
[#558 fragment_attr]: #57
[#558 function_header/0.5/0.1/0]: #559
[#558 group_attr]: #48
[#558 id_attr]: #49
[#558 interpolate_attr]: #50
[#558 invariant_attr]: #51
[#558 location_attr]: #52
[#558 must_use_attr]: #53
[#558 size_attr]: #54
[#558 vertex_attr]: #56
[#558 workgroup_size_attr]: #55
[#562 align_attr]: #42
[#562 attribute]: #178
[#562 binding_attr]: #43
[#562 blend_src_attr]: #44
[#562 builtin_attr]: #45
[#562 compound_statement]: #587
[#562 compound_statement/0.0]: #176
[#562 compound_statement/0.0/0]: #177
[#562 compute_attr]: #58
[#562 const_attr]: #46
[#562 diagnostic_attr]: #47
[#562 fragment_attr]: #57
[#562 group_attr]: #48
[#562 id_attr]: #49
[#562 interpolate_attr]: #50
[#562 invariant_attr]: #51
[#562 location_attr]: #52
[#562 must_use_attr]: #53
[#562 size_attr]: #54
[#562 vertex_attr]: #56
[#562 workgroup_size_attr]: #55
[#564 case_clause]: #583
[#564 default_alone_clause]: #584
[#564 switch_body/0.2]: #580
[#564 switch_body/0.2/0]: #581
[#564 switch_clause]: #582
[#565 continuing_statement]: #578
[#565 loop_statement/0.5]: #577
[#567 align_attr]: #42
[#567 assignment_statement]: #348
[#567 attribute]: #359
[#567 binding_attr]: #43
[#567 blend_src_attr]: #44
[#567 break_statement]: #330
[#567 builtin_attr]: #45
[#567 compound_statement]: #334
[#567 compound_statement/0.0]: #176
[#567 compound_statement/0.0/0]: #177
[#567 compute_attr]: #58
[#567 const_assert_statement]: #335
[#567 const_attr]: #46
[#567 continue_statement]: #331
[#567 core_lhs_expression]: #360
[#567 decrement_statement]: #350
[#567 diagnostic_attr]: #47
[#567 for_statement]: #326
[#567 for_statement/0.0]: #340
[#567 for_statement/0.0/0]: #354
[#567 fragment_attr]: #57
[#567 func_call_statement]: #328
[#567 group_attr]: #48
[#567 id_attr]: #49
[#567 ident]: #356
[#567 ident_pattern_token]: #109
[#567 if_statement]: #323
[#567 if_statement/0.0]: #337
[#567 if_statement/0.0/0]: #351
[#567 increment_statement]: #349
[#567 interpolate_attr]: #50
[#567 invariant_attr]: #51
[#567 lhs_expression]: #357
[#567 location_attr]: #52
[#567 loop_statement]: #325
[#567 loop_statement/0.0]: #339
[#567 loop_statement/0.0/0]: #353
[#567 loop_statement/0.4/0]: #576
[#567 must_use_attr]: #53
[#567 return_statement]: #322
[#567 size_attr]: #54
[#567 statement]: #567
[#567 switch_statement]: #324
[#567 switch_statement/0.0]: #338
[#567 switch_statement/0.0/0]: #352
[#567 template_elaborated_ident]: #342
[#567 variable_decl]: #343
[#567 variable_or_value_statement]: #329
[#567 variable_updating_statement]: #333
[#567 vertex_attr]: #56
[#567 while_statement]: #327
[#567 while_statement/0.0]: #341
[#567 while_statement/0.0/0]: #355
[#567 workgroup_size_attr]: #55
[#568 additive_expression]: #90
[#568 binary_and_expression]: #87
[#568 binary_or_expression]: #88
[#568 binary_xor_expression]: #89
[#568 bitwise_expression]: #85
[#568 bool_literal]: #107
[#568 call_expression]: #101
[#568 decimal_float_literal]: #112
[#568 decimal_int_literal]: #110
[#568 expression]: #575
[#568 float_literal]: #106
[#568 for_header/0.2]: #574
[#568 hex_float_literal]: #113
[#568 hex_int_literal]: #111
[#568 ident]: #104
[#568 ident_pattern_token]: #109
[#568 int_literal]: #105
[#568 literal]: #102
[#568 multiplicative_expression]: #92
[#568 paren_expression]: #103
[#568 primary_expression]: #99
[#568 relational_expression]: #82
[#568 shift_expression]: #86
[#568 short_circuit_and_expression]: #84
[#568 short_circuit_or_expression]: #83
[#568 singular_expression]: #93
[#568 template_elaborated_ident]: #100
[#568 unary_expression]: #91
[#569 align_attr]: #42
[#569 attribute]: #178
[#569 binding_attr]: #43
[#569 blend_src_attr]: #44
[#569 builtin_attr]: #45
[#569 compound_statement]: #573
[#569 compound_statement/0.0]: #176
[#569 compound_statement/0.0/0]: #177
[#569 compute_attr]: #58
[#569 const_attr]: #46
[#569 diagnostic_attr]: #47
[#569 fragment_attr]: #57
[#569 group_attr]: #48
[#569 id_attr]: #49
[#569 interpolate_attr]: #50
[#569 invariant_attr]: #51
[#569 location_attr]: #52
[#569 must_use_attr]: #53
[#569 size_attr]: #54
[#569 vertex_attr]: #56
[#569 workgroup_size_attr]: #55
[#579 align_attr]: #42
[#579 attribute]: #599
[#579 binding_attr]: #43
[#579 blend_src_attr]: #44
[#579 builtin_attr]: #45
[#579 compute_attr]: #58
[#579 const_attr]: #46
[#579 continuing_compound_statement]: #596
[#579 continuing_compound_statement/0.0]: #597
[#579 continuing_compound_statement/0.0/0]: #598
[#579 diagnostic_attr]: #47
[#579 fragment_attr]: #57
[#579 group_attr]: #48
[#579 id_attr]: #49
[#579 interpolate_attr]: #50
[#579 invariant_attr]: #51
[#579 location_attr]: #52
[#579 must_use_attr]: #53
[#579 size_attr]: #54
[#579 vertex_attr]: #56
[#579 workgroup_size_attr]: #55
[#582 case_clause]: #583
[#582 default_alone_clause]: #584
[#582 switch_body/0.2/0]: #594
[#582 switch_clause]: #582
[#585 additive_expression]: #90
[#585 binary_and_expression]: #87
[#585 binary_or_expression]: #88
[#585 binary_xor_expression]: #89
[#585 bitwise_expression]: #85
[#585 bool_literal]: #107
[#585 call_expression]: #101
[#585 case_selector]: #591
[#585 case_selectors]: #590
[#585 decimal_float_literal]: #112
[#585 decimal_int_literal]: #110
[#585 expression]: #593
[#585 float_literal]: #106
[#585 hex_float_literal]: #113
[#585 hex_int_literal]: #111
[#585 ident]: #104
[#585 ident_pattern_token]: #109
[#585 int_literal]: #105
[#585 literal]: #102
[#585 multiplicative_expression]: #92
[#585 paren_expression]: #103
[#585 primary_expression]: #99
[#585 relational_expression]: #82
[#585 shift_expression]: #86
[#585 short_circuit_and_expression]: #84
[#585 short_circuit_or_expression]: #83
[#585 singular_expression]: #93
[#585 template_elaborated_ident]: #100
[#585 unary_expression]: #91
[#586 default_alone_clause/0.1]: #588
[#588 align_attr]: #42
[#588 attribute]: #178
[#588 binding_attr]: #43
[#588 blend_src_attr]: #44
[#588 builtin_attr]: #45
[#588 compound_statement]: #614
[#588 compound_statement/0.0]: #176
[#588 compound_statement/0.0/0]: #177
[#588 compute_attr]: #58
[#588 const_attr]: #46
[#588 diagnostic_attr]: #47
[#588 fragment_attr]: #57
[#588 group_attr]: #48
[#588 id_attr]: #49
[#588 interpolate_attr]: #50
[#588 invariant_attr]: #51
[#588 location_attr]: #52
[#588 must_use_attr]: #53
[#588 size_attr]: #54
[#588 vertex_attr]: #56
[#588 workgroup_size_attr]: #55
[#590 case_clause/0.2]: #612
[#591 case_selectors/0.1]: #608
[#591 case_selectors/0.1/0]: #609
[#591 case_selectors/0.1/0/0.0]: #610
[#599 align_attr]: #42
[#599 attribute]: #599
[#599 binding_attr]: #43
[#599 blend_src_attr]: #44
[#599 builtin_attr]: #45
[#599 compute_attr]: #58
[#599 const_attr]: #46
[#599 continuing_compound_statement/0.0/0]: #606
[#599 diagnostic_attr]: #47
[#599 fragment_attr]: #57
[#599 group_attr]: #48
[#599 id_attr]: #49
[#599 interpolate_attr]: #50
[#599 invariant_attr]: #51
[#599 location_attr]: #52
[#599 must_use_attr]: #53
[#599 size_attr]: #54
[#599 vertex_attr]: #56
[#599 workgroup_size_attr]: #55
[#601 assignment_statement]: #348
[#601 core_lhs_expression]: #360
[#601 decrement_statement]: #350
[#601 for_header/0.4]: #602
[#601 for_update]: #603
[#601 func_call_statement]: #605
[#601 ident]: #356
[#601 ident_pattern_token]: #109
[#601 increment_statement]: #349
[#601 lhs_expression]: #357
[#601 template_elaborated_ident]: #342
[#601 variable_updating_statement]: #604
[#607 align_attr]: #42
[#607 assignment_statement]: #348
[#607 attribute]: #359
[#607 binding_attr]: #43
[#607 blend_src_attr]: #44
[#607 break_statement]: #330
[#607 builtin_attr]: #45
[#607 compound_statement]: #334
[#607 compound_statement/0.0]: #176
[#607 compound_statement/0.0/0]: #177
[#607 compute_attr]: #58
[#607 const_assert_statement]: #335
[#607 const_attr]: #46
[#607 continue_statement]: #331
[#607 continuing_compound_statement/0.2]: #620
[#607 continuing_compound_statement/0.2/0]: #621
[#607 core_lhs_expression]: #360
[#607 decrement_statement]: #350
[#607 diagnostic_attr]: #47
[#607 for_statement]: #326
[#607 for_statement/0.0]: #340
[#607 for_statement/0.0/0]: #354
[#607 fragment_attr]: #57
[#607 func_call_statement]: #328
[#607 group_attr]: #48
[#607 id_attr]: #49
[#607 ident]: #356
[#607 ident_pattern_token]: #109
[#607 if_statement]: #323
[#607 if_statement/0.0]: #337
[#607 if_statement/0.0/0]: #351
[#607 increment_statement]: #349
[#607 interpolate_attr]: #50
[#607 invariant_attr]: #51
[#607 lhs_expression]: #357
[#607 location_attr]: #52
[#607 loop_statement]: #325
[#607 loop_statement/0.0]: #339
[#607 loop_statement/0.0/0]: #353
[#607 must_use_attr]: #53
[#607 return_statement]: #322
[#607 size_attr]: #54
[#607 statement]: #622
[#607 switch_statement]: #324
[#607 switch_statement/0.0]: #338
[#607 switch_statement/0.0/0]: #352
[#607 template_elaborated_ident]: #342
[#607 variable_decl]: #343
[#607 variable_or_value_statement]: #329
[#607 variable_updating_statement]: #333
[#607 vertex_attr]: #56
[#607 while_statement]: #327
[#607 while_statement/0.0]: #341
[#607 while_statement/0.0/0]: #355
[#607 workgroup_size_attr]: #55
[#608 case_selectors/0.2]: #618
[#610 case_selectors/0.1/0]: #617
[#610 case_selectors/0.1/0/0.0]: #610
[#611 additive_expression]: #90
[#611 binary_and_expression]: #87
[#611 binary_or_expression]: #88
[#611 binary_xor_expression]: #89
[#611 bitwise_expression]: #85
[#611 bool_literal]: #107
[#611 call_expression]: #101
[#611 case_selector]: #616
[#611 decimal_float_literal]: #112
[#611 decimal_int_literal]: #110
[#611 expression]: #593
[#611 float_literal]: #106
[#611 hex_float_literal]: #113
[#611 hex_int_literal]: #111
[#611 ident]: #104
[#611 ident_pattern_token]: #109
[#611 int_literal]: #105
[#611 literal]: #102
[#611 multiplicative_expression]: #92
[#611 paren_expression]: #103
[#611 primary_expression]: #99
[#611 relational_expression]: #82
[#611 shift_expression]: #86
[#611 short_circuit_and_expression]: #84
[#611 short_circuit_or_expression]: #83
[#611 singular_expression]: #93
[#611 template_elaborated_ident]: #100
[#611 unary_expression]: #91
[#612 align_attr]: #42
[#612 attribute]: #178
[#612 binding_attr]: #43
[#612 blend_src_attr]: #44
[#612 builtin_attr]: #45
[#612 compound_statement]: #615
[#612 compound_statement/0.0]: #176
[#612 compound_statement/0.0/0]: #177
[#612 compute_attr]: #58
[#612 const_attr]: #46
[#612 diagnostic_attr]: #47
[#612 fragment_attr]: #57
[#612 group_attr]: #48
[#612 id_attr]: #49
[#612 interpolate_attr]: #50
[#612 invariant_attr]: #51
[#612 location_attr]: #52
[#612 must_use_attr]: #53
[#612 size_attr]: #54
[#612 vertex_attr]: #56
[#612 workgroup_size_attr]: #55
[#620 break_if_statement]: #625
[#620 continuing_compound_statement/0.3]: #624
[#622 align_attr]: #42
[#622 assignment_statement]: #348
[#622 attribute]: #359
[#622 binding_attr]: #43
[#622 blend_src_attr]: #44
[#622 break_statement]: #330
[#622 builtin_attr]: #45
[#622 compound_statement]: #334
[#622 compound_statement/0.0]: #176
[#622 compound_statement/0.0/0]: #177
[#622 compute_attr]: #58
[#622 const_assert_statement]: #335
[#622 const_attr]: #46
[#622 continue_statement]: #331
[#622 continuing_compound_statement/0.2/0]: #623
[#622 core_lhs_expression]: #360
[#622 decrement_statement]: #350
[#622 diagnostic_attr]: #47
[#622 for_statement]: #326
[#622 for_statement/0.0]: #340
[#622 for_statement/0.0/0]: #354
[#622 fragment_attr]: #57
[#622 func_call_statement]: #328
[#622 group_attr]: #48
[#622 id_attr]: #49
[#622 ident]: #356
[#622 ident_pattern_token]: #109
[#622 if_statement]: #323
[#622 if_statement/0.0]: #337
[#622 if_statement/0.0/0]: #351
[#622 increment_statement]: #349
[#622 interpolate_attr]: #50
[#622 invariant_attr]: #51
[#622 lhs_expression]: #357
[#622 location_attr]: #52
[#622 loop_statement]: #325
[#622 loop_statement/0.0]: #339
[#622 loop_statement/0.0/0]: #353
[#622 must_use_attr]: #53
[#622 return_statement]: #322
[#622 size_attr]: #54
[#622 statement]: #622
[#622 switch_statement]: #324
[#622 switch_statement/0.0]: #338
[#622 switch_statement/0.0/0]: #352
[#622 template_elaborated_ident]: #342
[#622 variable_decl]: #343
[#622 variable_or_value_statement]: #329
[#622 variable_updating_statement]: #333
[#622 vertex_attr]: #56
[#622 while_statement]: #327
[#622 while_statement/0.0]: #341
[#622 while_statement/0.0/0]: #355
[#622 workgroup_size_attr]: #55
[#627 additive_expression]: #90
[#627 binary_and_expression]: #87
[#627 binary_or_expression]: #88
[#627 binary_xor_expression]: #89
[#627 bitwise_expression]: #85
[#627 bool_literal]: #107
[#627 call_expression]: #101
[#627 decimal_float_literal]: #112
[#627 decimal_int_literal]: #110
[#627 expression]: #629
[#627 float_literal]: #106
[#627 hex_float_literal]: #113
[#627 hex_int_literal]: #111
[#627 ident]: #104
[#627 ident_pattern_token]: #109
[#627 int_literal]: #105
[#627 literal]: #102
[#627 multiplicative_expression]: #92
[#627 paren_expression]: #103
[#627 primary_expression]: #99
[#627 relational_expression]: #82
[#627 shift_expression]: #86
[#627 short_circuit_and_expression]: #84
[#627 short_circuit_or_expression]: #83
[#627 singular_expression]: #93
[#627 template_elaborated_ident]: #100
[#627 unary_expression]: #91
