# Prepare the docker image that builds specs.
name: build-push-custom-image

on:
  push:
    branches: [ "main" ]
    paths:
      - "tools/custom-action/dependency-versions.sh"
      - "tools/custom-action/Dockerfile"
      - "tools/custom-action/entrypoint.sh"
      - "tools/custom-action/prepare.sh"
  # Allows admins to trigger the workflow manually from GitHub UI or CLI, anytime.
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-amd64

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: tools/custom-action/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-arm64

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: tools/custom-action/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create and push multi-arch manifest
        run: |
          TAGS="${{ steps.meta.outputs.tags }}"
          for TAG in $TAGS; do
            docker buildx imagetools create \
              --tag "$TAG" \
              "${TAG}-amd64" \
              "${TAG}-arm64"
          done
